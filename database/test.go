package devices

import (
	"github.com/stampzilla/gozwave/commands"
)

type CommandClass struct {
	ID         commands.ZWaveCommand
	Controlled string
	InNIF      string
	Secure     bool
	NonSecure  bool
	Version    string
}
type parameter struct {
	ID int
	Name string
	Type string
	Description string
}
type AssocGroup struct {
	Number      int
	MaxNodes    int
	Description string
}
type ConfigParam struct {
	ID      int
	Type        string
	Size        int
	Default     int
	Name        string
	Description string
	Values      []ConfigValue
}
type ConfigValue struct {
	From        int
	To          int
	Unit        string
	Reserved    bool
	Description string
}
type Device struct{
	Brand string
	Product string
	Description string

	CommandClasses []*CommandClass
	Parameters []*parameter
	ConfigParams []ConfigParam
	AssocGroups []AssocGroup

	ManufacturerID string
	ProductType string
	ProductID string
}
func New(manufacturerID, productType, productID string) *Device{
	dev := manufacturerID+productType+productID
	switch dev {
	case "00000000":
		return New00000000() // 989-0000-0000-0000-00-00-00-00-00.xml | 00000000
	case "000000000000":
		return New000000000000() // 509-0000-0000-0000-00-00-00-00-00.xml | 000000000000
	case "0000000021ac":
		return New0000000021ac() // 403-0000-0000-21ac-06-03-25-01-10.xml | 0000000021ac
	case "0000000121b4":
		return New0000000121b4() // 925-0000-0001-21b4-01-03-5f-04-16.xml | 0000000121b4
	case "0001444d3330":
		return New0001444d3330() // 4-0001-444d-3330-00-01-63-01-0a.xml | 0001444d3330
	case "000144503030":
		return New000144503030() // 253-0001-4450-3030-00-02-61-00-00.xml | 000144503030
	case "000144573034":
		return New000144573034() // 254-0001-4457-3034-00-02-61-00-00.xml | 000144573034
	case "000144573332":
		return New000144573332() // 89-0001-4457-3332-00-00-00-00-00.xml | 000144573332
	case "000152463133":
		return New000152463133() // 259-0001-5246-3133-00-02-61-00-00.xml | 000152463133
	case "0001524d3330":
		return New0001524d3330() // 15-0001-524d-3330-06-01-63-01-0a.xml | 0001524d3330
	case "000152503030":
		return New000152503030() // 255-0001-5250-3030-00-02-61-00-00.xml | 000152503030
	case "000152523130":
		return New000152523130() // 92-0001-5252-3130-00-00-00-00-00.xml | 000152523130
	case "000152523534":
		return New000152523534() // 257-0001-5252-3534-00-02-61-00-00.xml | 000152523534
	case "000152573033":
		return New000152573033() // 256-0001-5257-3033-00-02-61-00-00.xml | 000152573033
	case "0001544d3330":
		return New0001544d3330() // 3-0001-544d-3330-00-00-00-00-00.xml | 0001544d3330
	case "000154573033":
		return New000154573033() // 258-0001-5457-3033-00-02-61-00-00.xml | 000154573033
	case "000157573330":
		return New000157573330() // 91-0001-5757-3330-00-00-00-00-00.xml | 000157573330
	case "000200038010":
		return New000200038010() // 565-0002-0003-8010-06-03-67-01-00.xml | 000200038010
	case "000200050003":
		return New000200050003() // 489-0002-0005-0003-06-03-43-03-30.xml | 000200050003
	case "000200050004":
		return New000200050004() // 657-0002-0005-0004-06-03-43-01-01.xml | 000200050004
	case "00020005017c":
		return New00020005017c() // 662-0002-0005-017c-06-03-43-09-00.xml | 00020005017c
	case "000200640001":
		return New000200640001() // 5-0002-0064-0001-00-00-00-00-00.xml | 000200640001
	case "00020248a030":
		return New00020248a030() // 877-0002-0248-a030-03-03-43-01-02.xml | 00020248a030
	case "00020248a040":
		return New00020248a040() // 879-0002-0248-a040-03-03-43-01-02.xml | 00020248a040
	case "000280040001":
		return New000280040001() // 362-0002-8004-0001-06-02-43-00-23.xml | 000280040001
	case "000280042000":
		return New000280042000() // 459-0002-8004-2000-01-02-67-05-05.xml | 000280042000
	case "000280042010":
		return New000280042010() // 140-0002-8004-2010-01-02-43-05-02.xml | 000280042010
	case "000280042020":
		return New000280042020() // 158-0002-8004-2020-01-02-43-06-00.xml | 000280042020
	case "000280050001":
		return New000280050001() // 6-0002-8005-0001-06-02-43-02-06.xml | 000280050001
	case "000280070200":
		return New000280070200() // 184-0002-8007-0200-01-02-43-01-0e.xml | 000280070200
	case "000550450653":
		return New000550450653() // 270-0005-5045-0653-00-02-4e-00-00.xml | 000550450653
	case "000550450953":
		return New000550450953() // 384-0005-5045-0953-00-02-4e-00-00.xml | 000550450953
	case "000800010005":
		return New000800010005() // 696-0008-0001-0005-00-00-00-00-00.xml | 000800010005
	case "000800070020":
		return New000800070020() // 219-0008-0007-0020-00-02-4e-00-00.xml | 000800070020
	case "0010454d3532":
		return New0010454d3532() // 402-0010-454d-3532-00-00-00-00-00.xml | 0010454d3532
	case "001045564c32":
		return New001045564c32() // 383-0010-4556-4c32-00-00-00-00-00.xml | 001045564c32
	case "001050533231":
		return New001050533231() // 680-0010-5053-3231-06-03-52-01-04.xml | 001050533231
	case "001a00000000":
		return New001a00000000() // 252-001a-0000-0000-00-00-00-00-00.xml | 001a00000000
	case "001a44490000":
		return New001a44490000() // 251-001a-4449-0000-03-02-28-01-10.xml | 001a44490000
	case "001a44490003":
		return New001a44490003() // 239-001a-4449-0003-03-02-28-01-02.xml | 001a44490003
	case "001a52440000":
		return New001a52440000() // 248-001a-5244-0000-03-02-09-01-0a.xml | 001a52440000
	case "001a534c0000":
		return New001a534c0000() // 249-001a-534c-0000-03-02-09-01-0a.xml | 001a534c0000
	case "001a574d0000":
		return New001a574d0000() // 247-001a-574d-0000-01-02-33-01-08.xml | 001a574d0000
	case "001d01010316":
		return New001d01010316() // 399-001d-0101-0316-00-03-14-00-00.xml | 001d01010316
	case "001d03010209":
		return New001d03010209() // 240-001d-0301-0209-03-02-09-00-04.xml | 001d03010209
	case "001d04010209":
		return New001d04010209() // 243-001d-0401-0209-03-02-09-00-04.xml | 001d04010209
	case "001d07020261":
		return New001d07020261() // 242-001d-0702-0261-01-02-61-00-02.xml | 001d07020261
	case "001e00020001":
		return New001e00020001() // 21-001e-0002-0001-06-02-28-01-0b.xml | 001e00020001
	case "001e00020002":
		return New001e00020002() // 355-001e-0002-0002-06-03-28-03-03.xml | 001e00020002
	case "001e00040001":
		return New001e00040001() // 621-001e-0004-0001-03-03-99-01-03.xml | 001e00040001
	case "002080071398":
		return New002080071398() // 199-0020-8007-1398-02-02-43-02-06.xml | 002080071398
	case "003000010001":
		return New003000010001() // 468-0030-0001-0001-00-00-00-00-00.xml | 003000010001
	case "003352503031":
		return New003352503031() // 38-0033-5250-3031-03-02-28-02-01.xml | 003352503031
	case "003352503032":
		return New003352503032() // 37-0033-5250-3032-03-02-28-02-01.xml | 003352503032
	case "003900000000":
		return New003900000000() // 382-0039-0000-0000-00-03-14-00-00.xml | 003900000000
	case "003900010001":
		return New003900010001() // 386-0039-0001-0001-00-02-16-00-00.xml | 003900010001
	case "003900110001":
		return New003900110001() // 209-0039-0011-0001-04-02-61-01-01.xml | 003900110001
	case "003900110003":
		return New003900110003() // 370-0039-0011-0003-04-03-2a-02-00.xml | 003900110003
	case "00475a525400":
		return New00475a525400() // 380-0047-5a52-5400-00-03-14-00-00.xml | 00475a525400
	case "005600010001":
		return New005600010001() // 171-0056-0001-0001-04-04-0a-01-00.xml | 005600010001
	case "005900010001":
		return New005900010001() // 45-0059-0001-0001-04-01-5b-03-00.xml | 005900010001
	case "005900010002":
		return New005900010002() // 49-0059-0001-0002-06-02-4e-01-00.xml | 005900010002
	case "005900010003":
		return New005900010003() // 51-0059-0001-0003-02-02-4e-02-00.xml | 005900010003
	case "005900010004":
		return New005900010004() // 628-0059-0001-0004-06-03-67-03-00.xml | 005900010004
	case "005900010005":
		return New005900010005() // 859-0059-0001-0005-02-04-05-01-00.xml | 005900010005
	case "005900020002":
		return New005900020002() // 217-0059-0002-0002-00-03-14-00-00.xml | 005900020002
	case "005900030001":
		return New005900030001() // 46-0059-0003-0001-06-02-4e-01-00.xml | 005900030001
	case "005900030002":
		return New005900030002() // 44-0059-0003-0002-06-02-4e-01-00.xml | 005900030002
	case "005900040001":
		return New005900040001() // 529-0059-0004-0001-02-03-43-04-00.xml | 005900040001
	case "005900050001":
		return New005900050001() // 47-0059-0005-0001-01-02-24-01-00.xml | 005900050001
	case "005900050005":
		return New005900050005() // 595-0059-0005-0005-06-03-42-02-00.xml | 005900050005
	case "0059000d0001":
		return New0059000d0001() // 309-0059-000d-0001-06-03-14-00-04.xml | 0059000d0001
	case "0059000d0002":
		return New0059000d0002() // 930-0059-000d-0002-06-03-5f-01-00.xml | 0059000d0002
	case "0059000d0003":
		return New0059000d0003() // 629-0059-000d-0003-06-03-5f-01-00.xml | 0059000d0003
	case "0059000e0001":
		return New0059000e0001() // 633-0059-000e-0001-06-03-5f-01-00.xml | 0059000e0001
	case "0059000e0002":
		return New0059000e0002() // 653-0059-000e-0002-06-03-5f-01-00.xml | 0059000e0002
	case "0059000f0001":
		return New0059000f0001() // 431-0059-000f-0001-06-03-2a-03-00.xml | 0059000f0001
	case "005900100002":
		return New005900100002() // 607-0059-0010-0002-06-03-22-01-00.xml | 005900100002
	case "005900110001":
		return New005900110001() // 666-0059-0011-0001-06-03-5f-01-00.xml | 005900110001
	case "005900110002":
		return New005900110002() // 672-0059-0011-0002-06-03-5f-01-00.xml | 005900110002
	case "006000010001":
		return New006000010001() // 324-0060-0001-0001-00-02-4e-00-00.xml | 006000010001
	case "006000010002":
		return New006000010002() // 390-0060-0001-0002-00-02-40-00-00.xml | 006000010002
	case "006000020001":
		return New006000020001() // 25-0060-0002-0001-06-02-40-01-03.xml | 006000020001
	case "006000030001":
		return New006000030001() // 636-0060-0003-0001-06-03-52-02-00.xml | 006000030001
	case "006000030002":
		return New006000030002() // 886-0060-0003-0002-03-03-5f-01-01.xml | 006000030002
	case "006000030003":
		return New006000030003() // 686-0060-0003-0003-03-03-5f-01-01.xml | 006000030003
	case "006000040001":
		return New006000040001() // 57-0060-0004-0001-04-02-18-00-01.xml | 006000040001
	case "006000040002":
		return New006000040002() // 54-0060-0004-0002-06-02-40-01-01.xml | 006000040002
	case "006000040006":
		return New006000040006() // 688-0060-0004-0006-03-03-5f-01-01.xml | 006000040006
	case "006000040007":
		return New006000040007() // 687-0060-0004-0007-03-03-5f-01-01.xml | 006000040007
	case "006000040008":
		return New006000040008() // 890-0060-0004-0008-03-03-5f-01-01.xml | 006000040008
	case "006000060001":
		return New006000060001() // 589-0060-0006-0001-03-03-34-02-00.xml | 006000060001
	case "006000070001":
		return New006000070001() // 330-0060-0007-0001-00-02-40-00-00.xml | 006000070001
	case "0060000b0001":
		return New0060000b0001() // 123-0060-000b-0001-06-02-40-01-03.xml | 0060000b0001
	case "0060000c0001":
		return New0060000c0001() // 389-0060-000c-0001-00-02-40-00-00.xml | 0060000c0001
	case "0060000d0001":
		return New0060000d0001() // 391-0060-000d-0001-00-02-40-00-00.xml | 0060000d0001
	case "0060000e0001":
		return New0060000e0001() // 216-0060-000e-0001-00-02-4e-00-00.xml | 0060000e0001
	case "006000100001":
		return New006000100001() // 493-0060-0010-0001-06-03-2a-02-00.xml | 006000100001
	case "006001010001":
		return New006001010001() // 59-0060-0101-0001-06-02-09-01-00.xml | 006001010001
	case "006001030001":
		return New006001030001() // 52-0060-0103-0001-04-02-18-00-01.xml | 006001030001
	case "006002020001":
		return New006002020001() // 60-0060-0202-0001-06-02-09-01-00.xml | 006002020001
	case "006344503030":
		return New006344503030() // 261-0063-4450-3030-00-03-14-00-00.xml | 006344503030
	case "006344503130":
		return New006344503130() // 230-0063-4450-3130-00-03-14-00-00.xml | 006344503130
	case "006344573230":
		return New006344573230() // 287-0063-4457-3230-00-02-61-00-00.xml | 006344573230
	case "006350443131":
		return New006350443131() // 782-0063-5044-3131-03-04-05-05-03.xml | 006350443131
	case "006352503030":
		return New006352503030() // 263-0063-5250-3030-00-03-14-00-00.xml | 006352503030
	case "006352503031":
		return New006352503031() // 231-0063-5250-3031-00-03-14-00-00.xml | 006352503031
	case "006352503130":
		return New006352503130() // 229-0063-5250-3130-00-02-61-00-00.xml | 006352503130
	case "006352523530":
		return New006352523530() // 226-0063-5252-3530-00-02-61-00-00.xml | 006352523530
	case "006352573533":
		return New006352573533() // 286-0063-5257-3533-00-02-61-00-00.xml | 006352573533
	case "006400010000":
		return New006400010000() // 33-0064-0001-0000-06-02-33-01-00.xml | 006400010000
	case "006410000002":
		return New006410000002() // 545-0064-1000-0002-03-03-4f-03-00.xml | 006410000002
	case "006410010000":
		return New006410010000() // 31-0064-1001-0000-06-02-24-01-00.xml | 006410010000
	case "006420010000":
		return New006420010000() // 18-0064-2001-0000-01-02-40-01-00.xml | 006420010000
	case "006430010000":
		return New006430010000() // 11-0064-3001-0000-06-02-33-01-00.xml | 006430010000
	case "006440010000":
		return New006440010000() // 32-0064-4001-0000-06-02-33-01-00.xml | 006440010000
	case "006450010000":
		return New006450010000() // 36-0064-5001-0000-00-00-00-00-00.xml | 006450010000
	case "006450020000":
		return New006450020000() // 35-0064-5002-0000-00-00-00-00-00.xml | 006450020000
	case "006450030000":
		return New006450030000() // 34-0064-5003-0000-01-02-64-01-00.xml | 006450030000
	case "006800000000":
		return New006800000000() // 290-0068-0000-0000-00-02-4e-00-00.xml | 006800000000
	case "006800000004":
		return New006800000004() // 293-0068-0000-0004-00-02-43-00-00.xml | 006800000004
	case "006800000005":
		return New006800000005() // 292-0068-0000-0005-00-02-43-00-00.xml | 006800000005
	case "006800000006":
		return New006800000006() // 291-0068-0000-0006-00-02-43-00-00.xml | 006800000006
	case "006b00000000":
		return New006b00000000() // 84-006b-0000-0000-02-02-28-01-07.xml | 006b00000000
	case "00710002035d":
		return New00710002035d() // 64-0071-0002-035d-00-00-00-00-00.xml | 00710002035d
	case "00710004035d":
		return New00710004035d() // 63-0071-0004-035d-00-00-00-00-00.xml | 00710004035d
	case "00710005035d":
		return New00710005035d() // 61-0071-0005-035d-00-00-00-00-00.xml | 00710005035d
	case "007a00000000":
		return New007a00000000() // 86-007a-0000-0000-05-02-1b-01-08.xml | 007a00000000
	case "007a00010002":
		return New007a00010002() // 68-007a-0001-0002-02-02-1b-01-08.xml | 007a00010002
	case "007a00010004":
		return New007a00010004() // 69-007a-0001-0004-02-02-1b-01-08.xml | 007a00010004
	case "007a00020001":
		return New007a00020001() // 67-007a-0002-0001-02-02-1b-01-08.xml | 007a00020001
	case "007a00020004":
		return New007a00020004() // 308-007a-0002-0004-02-03-22-01-02.xml | 007a00020004
	case "007a00030004":
		return New007a00030004() // 66-007a-0003-0004-02-02-1b-01-04.xml | 007a00030004
	case "007a40020001":
		return New007a40020001() // 77-007a-4002-0001-06-02-1b-02-02.xml | 007a40020001
	case "007a40030001":
		return New007a40030001() // 87-007a-4003-0001-06-02-1b-02-02.xml | 007a40030001
	case "007a40030002":
		return New007a40030002() // 74-007a-4003-0002-06-02-1b-02-03.xml | 007a40030002
	case "007a40040001":
		return New007a40040001() // 85-007a-4004-0001-06-02-1b-02-03.xml | 007a40040001
	case "007a80010001":
		return New007a80010001() // 56-007a-8001-0001-06-02-1b-02-02.xml | 007a80010001
	case "007a80018002":
		return New007a80018002() // 70-007a-8001-8002-06-02-1b-02-02.xml | 007a80018002
	case "007a80018003":
		return New007a80018003() // 71-007a-8001-8003-06-02-1b-02-02.xml | 007a80018003
	case "007a80018004":
		return New007a80018004() // 73-007a-8001-8004-06-02-1b-02-04.xml | 007a80018004
	case "007a80020001":
		return New007a80020001() // 55-007a-8002-0001-06-02-1b-02-03.xml | 007a80020001
	case "007a80030001":
		return New007a80030001() // 72-007a-8003-0001-06-02-1b-02-02.xml | 007a80030001
	case "007f00010001":
		return New007f00010001() // 924-007f-0001-0001-01-04-05-04-1f.xml | 007f00010001
	case "008000040001":
		return New008000040001() // 156-0080-0004-0001-77-6f-36-02-01.xml | 008000040001
	case "008100140001":
		return New008100140001() // 112-0081-0014-0001-06-02-4e-01-00.xml | 008100140001
	case "008100a00001":
		return New008100a00001() // 83-0081-00a0-0001-06-02-40-01-00.xml | 008100a00001
	case "008400210109":
		return New008400210109() // 169-0084-0021-0109-06-02-61-01-09.xml | 008400210109
	case "00840021010a":
		return New00840021010a() // 107-0084-0021-010a-06-02-61-01-0a.xml | 00840021010a
	case "00840023010a":
		return New00840023010a() // 198-0084-0023-010a-06-02-61-01-0a.xml | 00840023010a
	case "008403130108":
		return New008403130108() // 294-0084-0313-0108-00-02-61-00-00.xml | 008403130108
	case "008500030001":
		return New008500030001() // 181-0085-0003-0001-03-02-61-03-0a.xml | 008500030001
	case "008500160001":
		return New008500160001() // 461-0085-0016-0001-06-03-67-02-01.xml | 008500160001
	case "008600000000":
		return New008600000000() // 637-0086-0000-0000-00-00-00-00-00.xml | 008600000000
	case "008600010003":
		return New008600010003() // 224-0086-0001-0003-00-02-30-00-00.xml | 008600010003
	case "008600010058":
		return New008600010058() // 804-0086-0001-0058-02-03-53-01-01.xml | 008600010058
	case "00860001005a":
		return New00860001005a() // 801-0086-0001-005a-00-04-05-01-00.xml | 00860001005a
	case "008600020001":
		return New008600020001() // 222-0086-0002-0001-00-02-4e-00-00.xml | 008600020001
	case "008600020004":
		return New008600020004() // 16-0086-0002-0004-06-02-40-01-03.xml | 008600020004
	case "008600020005":
		return New008600020005() // 407-0086-0002-0005-06-03-1c-01-12.xml | 008600020005
	case "008600020009":
		return New008600020009() // 693-0086-0002-0009-00-00-00-00-00.xml | 008600020009
	case "00860002001c":
		return New00860002001c() // 519-0086-0002-001c-03-03-43-01-05.xml | 00860002001c
	case "008600020036":
		return New008600020036() // 538-0086-0002-0036-03-03-43-01-05.xml | 008600020036
	case "00860002004a":
		return New00860002004a() // 640-0086-0002-004a-03-03-5c-01-02.xml | 00860002004a
	case "008600020059":
		return New008600020059() // 833-0086-0002-0059-03-03-5c-01-0a.xml | 008600020059
	case "008600020064":
		return New008600020064() // 824-0086-0002-0064-03-04-05-01-00.xml | 008600020064
	case "008600030006":
		return New008600030006() // 410-0086-0003-0006-03-02-4e-01-2b.xml | 008600030006
	case "00860003000a":
		return New00860003000a() // 604-0086-0003-000a-03-03-43-01-0e.xml | 00860003000a
	case "00860003000b":
		return New00860003000b() // 770-0086-0003-000b-03-03-43-00-00.xml | 00860003000b
	case "00860003000c":
		return New00860003000c() // 42-0086-0003-000c-03-02-4e-01-29.xml | 00860003000c
	case "00860003000d":
		return New00860003000d() // 43-0086-0003-000d-06-02-4e-01-18.xml | 00860003000d
	case "00860003000e":
		return New00860003000e() // 41-0086-0003-000e-06-02-4e-01-17.xml | 00860003000e
	case "008600030018":
		return New008600030018() // 774-0086-0003-0018-03-03-43-02-0f.xml | 008600030018
	case "00860003001a":
		return New00860003001a() // 450-0086-0003-001a-03-03-28-03-00.xml | 00860003001a
	case "00860003003e":
		return New00860003003e() // 781-0086-0003-003e-03-04-05-00-63.xml | 00860003003e
	case "00860003004b":
		return New00860003004b() // 780-0086-0003-004b-00-03-53-02-16.xml | 00860003004b
	case "00860003004e":
		return New00860003004e() // 778-0086-0003-004e-03-03-53-01-16.xml | 00860003004e
	case "008600030060":
		return New008600030060() // 722-0086-0003-0060-03-04-05-00-63.xml | 008600030060
	case "008600030062":
		return New008600030062() // 828-0086-0003-0062-03-04-05-01-00.xml | 008600030062
	case "008600030063":
		return New008600030063() // 726-0086-0003-0063-03-04-05-01-00.xml | 008600030063
	case "008600040025":
		return New008600040025() // 638-0086-0004-0025-06-03-40-01-03.xml | 008600040025
	case "008600040050":
		return New008600040050() // 834-0086-0004-0050-03-03-5c-01-15.xml | 008600040050
	case "008601010058":
		return New008601010058() // 805-0086-0101-0058-02-03-53-01-01.xml | 008601010058
	case "00860101005a":
		return New00860101005a() // 802-0086-0101-005a-00-04-05-01-00.xml | 00860101005a
	case "00860102004a":
		return New00860102004a() // 821-0086-0102-004a-03-03-5c-01-01.xml | 00860102004a
	case "008601020059":
		return New008601020059() // 812-0086-0102-0059-00-03-5c-01-0a.xml | 008601020059
	case "00860102005f":
		return New00860102005f() // 815-0086-0102-005f-03-03-5f-01-1e.xml | 00860102005f
	case "008601020064":
		return New008601020064() // 825-0086-0102-0064-03-04-05-01-00.xml | 008601020064
	case "00860103003e":
		return New00860103003e() // 807-0086-0103-003e-03-04-05-00-63.xml | 00860103003e
	case "00860103004b":
		return New00860103004b() // 799-0086-0103-004b-03-03-53-02-16.xml | 00860103004b
	case "00860103004e":
		return New00860103004e() // 797-0086-0103-004e-03-03-5c-01-16.xml | 00860103004e
	case "008601030060":
		return New008601030060() // 794-0086-0103-0060-03-04-05-00-63.xml | 008601030060
	case "008601030062":
		return New008601030062() // 795-0086-0103-0062-03-04-05-01-01.xml | 008601030062
	case "008601040038":
		return New008601040038() // 827-0086-0104-0038-03-04-05-01-00.xml | 008601040038
	case "008601040050":
		return New008601040050() // 810-0086-0104-0050-03-03-5c-01-15.xml | 008601040050
	case "008602010058":
		return New008602010058() // 806-0086-0201-0058-02-03-53-01-01.xml | 008602010058
	case "00860201005a":
		return New00860201005a() // 803-0086-0201-005a-00-04-05-01-00.xml | 00860201005a
	case "00860202004a":
		return New00860202004a() // 822-0086-0202-004a-03-03-5c-01-01.xml | 00860202004a
	case "008602020059":
		return New008602020059() // 813-0086-0202-0059-03-03-5c-01-0a.xml | 008602020059
	case "008602020064":
		return New008602020064() // 826-0086-0202-0064-03-04-05-01-00.xml | 008602020064
	case "00860203003e":
		return New00860203003e() // 808-0086-0203-003e-03-04-05-00-63.xml | 00860203003e
	case "00860203004b":
		return New00860203004b() // 800-0086-0203-004b-03-03-53-02-16.xml | 00860203004b
	case "00860203004e":
		return New00860203004e() // 798-0086-0203-004e-03-03-5c-01-16.xml | 00860203004e
	case "008602030060":
		return New008602030060() // 793-0086-0203-0060-03-04-05-00-63.xml | 008602030060
	case "008602030062":
		return New008602030062() // 796-0086-0203-0062-03-04-05-01-00.xml | 008602030062
	case "008602040050":
		return New008602040050() // 811-0086-0204-0050-03-03-5c-01-15.xml | 008602040050
	case "008900010101":
		return New008900010101() // 183-0089-0001-0101-04-02-33-01-02.xml | 008900010101
	case "008900020101":
		return New008900020101() // 182-0089-0002-0101-04-02-33-01-02.xml | 008900020101
	case "008900030001":
		return New008900030001() // 191-0089-0003-0001-03-02-33-01-06.xml | 008900030001
	case "008900030101":
		return New008900030101() // 192-0089-0003-0101-03-02-33-01-05.xml | 008900030101
	case "008a00010100":
		return New008a00010100() // 305-008a-0001-0100-01-02-61-01-00.xml | 008a00010100
	case "008a00020100":
		return New008a00020100() // 301-008a-0002-0100-03-02-61-01-00.xml | 008a00020100
	case "008a00030100":
		return New008a00030100() // 265-008a-0003-0100-06-02-61-01-00.xml | 008a00030100
	case "008a00040100":
		return New008a00040100() // 303-008a-0004-0100-06-02-61-01-00.xml | 008a00040100
	case "008a00060100":
		return New008a00060100() // 269-008a-0006-0100-06-02-61-01-00.xml | 008a00060100
	case "008a00070100":
		return New008a00070100() // 302-008a-0007-0100-03-02-61-01-01.xml | 008a00070100
	case "008a00080100":
		return New008a00080100() // 299-008a-0008-0100-06-02-61-01-00.xml | 008a00080100
	case "008a00180100":
		return New008a00180100() // 548-008a-0018-0100-03-03-34-00-3f.xml | 008a00180100
	case "008c00010001":
		return New008c00010001() // 546-008c-0001-0001-01-03-14-01-00.xml | 008c00010001
	case "008e01010101":
		return New008e01010101() // 81-008e-0101-0101-00-00-00-00-00.xml | 008e01010101
	case "009000010001":
		return New009000010001() // 376-0090-0001-0001-06-03-34-03-21.xml | 009000010001
	case "009000010236":
		return New009000010236() // 734-0090-0001-0236-06-03-67-03-39.xml | 009000010236
	case "009201010001":
		return New009201010001() // 160-0092-0101-0001-06-02-61-01-00.xml | 009201010001
	case "009201020002":
		return New009201020002() // 159-0092-0102-0002-06-02-61-01-02.xml | 009201020002
	case "009400010101":
		return New009400010101() // 949-0094-0001-0101-01-04-05-04-20.xml | 009400010101
	case "009400010102":
		return New009400010102() // 983-0094-0001-0102-01-04-05-04-20.xml | 009400010102
	case "009500000000":
		return New009500000000() // 316-0095-0000-0000-02-03-28-00-05.xml | 009500000000
	case "009500010000":
		return New009500010000() // 23-0095-0001-0000-02-02-33-01-0c.xml | 009500010000
	case "009500010001":
		return New009500010001() // 80-0095-0001-0001-02-02-33-01-0c.xml | 009500010001
	case "009500030000":
		return New009500030000() // 79-0095-0003-0000-06-02-33-01-0b.xml | 009500030000
	case "009531010001":
		return New009531010001() // 349-0095-3101-0001-03-03-28-00-05.xml | 009531010001
	case "009531030001":
		return New009531030001() // 347-0095-3103-0001-03-03-28-00-05.xml | 009531030001
	case "009600010001":
		return New009600010001() // 103-0096-0001-0001-03-02-4e-02-37.xml | 009600010001
	case "009600100001":
		return New009600100001() // 497-0096-0010-0001-03-02-4e-02-37.xml | 009600100001
	case "009700000000":
		return New009700000000() // 306-0097-0000-0000-06-03-2a-02-52.xml | 009700000000
	case "009700240045":
		return New009700240045() // 212-0097-0024-0045-03-03-22-01-00.xml | 009700240045
	case "009711824501":
		return New009711824501() // 333-0097-1182-4501-06-02-61-00-27.xml | 009711824501
	case "009761314501":
		return New009761314501() // 992-0097-6131-4101.xml | 009761314501
	case "009761315101":
		return New009761315101() // 944-0097-6131-5101-03-03-43-00-1c.xml | 009761315101
	case "009769415501":
		return New009769415501() // 369-0097-6941-5501-06-02-61-00-20.xml | 009769415501
	case "00980001001e":
		return New00980001001e() // 288-0098-0001-001e-00-02-4e-00-00.xml | 00980001001e
	case "00981e12015e":
		return New00981e12015e() // 449-0098-1e12-015e-03-03-1c-08-07.xml | 00981e12015e
	case "009820020100":
		return New009820020100() // 701-0098-2002-0100-03-03-53-0a-00.xml | 009820020100
	case "009820120100":
		return New009820120100() // 764-0098-2012-0100-03-03-53-0a-00.xml | 009820120100
	case "009850020100":
		return New009850020100() // 246-0098-5002-0100-03-02-4e-07-04.xml | 009850020100
	case "009864010015":
		return New009864010015() // 289-0098-6401-0015-00-03-1c-00-00.xml | 009864010015
	case "00986501000d":
		return New00986501000d() // 700-0098-6501-000d-03-03-28-09-07.xml | 00986501000d
	case "00986e010100":
		return New00986e010100() // 765-0098-6e01-0100-03-03-5f-10-05.xml | 00986e010100
	case "0098c801000c":
		return New0098c801000c() // 942-0098-c801-000c-03-04-05-0b-12.xml | 0098c801000c
	case "009900010002":
		return New009900010002() // 438-0099-0001-0002-01-03-41-01-00.xml | 009900010002
	case "00990001a001":
		return New00990001a001() // 875-0099-0001-a001-07-04-05-04-20.xml | 00990001a001
	case "009900020002":
		return New009900020002() // 285-0099-0002-0002-00-03-21-00-00.xml | 009900020002
	case "009900030004":
		return New009900030004() // 284-0099-0003-0004-00-03-0a-00-00.xml | 009900030004
	case "009900060001":
		return New009900060001() // 282-0099-0006-0001-00-03-0a-00-00.xml | 009900060001
	case "00a500010001":
		return New00a500010001() // 698-00a5-0001-0001-03-03-53-01-01.xml | 00a500010001
	case "00a500020001":
		return New00a500020001() // 694-00a5-0002-0001-02-04-05-01-02.xml | 00a500020001
	case "00a500020002":
		return New00a500020002() // 773-00a5-0002-0002-02-04-05-02-03.xml | 00a500020002
	case "00a500020003":
		return New00a500020003() // 771-00a5-0002-0003-02-04-05-02-03.xml | 00a500020003
	case "010000010020":
		return New010000010020() // 295-0100-0001-0020-00-03-0a-00-00.xml | 010000010020
	case "010200010001":
		return New010200010001() // 296-0102-0001-0001-00-02-4e-00-00.xml | 010200010001
	case "010300010002":
		return New010300010002() // 361-0103-0001-0002-03-03-25-01-0f.xml | 010300010002
	case "010300020002":
		return New010300020002() // 513-0103-0002-0002-03-03-37-06-09.xml | 010300020002
	case "01080002000d":
		return New01080002000d() // 916-0108-0002-000d-03-03-5f-01-0b.xml | 01080002000d
	case "01080002000e":
		return New01080002000e() // 915-0108-0002-000e-03-03-5f-01-0b.xml | 01080002000e
	case "010800200001":
		return New010800200001() // 668-0108-0020-0001-01-03-99-01-00.xml | 010800200001
	case "010828010001":
		return New010828010001() // 891-0108-2801-0001-01-03-5b-07-05.xml | 010828010001
	case "010900000000":
		return New010900000000() // 661-0109-0000-0000-00-00-00-00-00.xml | 010900000000
	case "01090002ffff":
		return New01090002ffff() // 245-0109-0002-ffff-03-03-14-13-12.xml | 01090002ffff
	case "010910010102":
		return New010910010102() // 835-0109-1001-0102-01-03-53-0e-01.xml | 010910010102
	case "010910020202":
		return New010910020202() // 939-0109-1002-0202-02-04-05-0f-09.xml | 010910020202
	case "010910040402":
		return New010910040402() // 946-0109-1004-0402-02-04-18-10-04.xml | 010910040402
	case "010920010101":
		return New010920010101() // 374-0109-2001-0101-03-03-29-04-01.xml | 010920010101
	case "010920010102":
		return New010920010102() // 368-0109-2001-0102-06-03-28-04-54.xml | 010920010102
	case "010920010104":
		return New010920010104() // 465-0109-2001-0104-03-03-53-04-01.xml | 010920010104
	case "010920010105":
		return New010920010105() // 547-0109-2001-0105-03-03-5c-05-01.xml | 010920010105
	case "010920010106":
		return New010920010106() // 950-0109-2001-0106-03-04-05-05-01.xml | 010920010106
	case "0109200101a1":
		return New0109200101a1() // 979-0109-2001-01a1-03-04-05-05-01.xml | 0109200101a1
	case "010920020201":
		return New010920020201() // 197-0109-2002-0201-06-02-4e-00-00.xml | 010920020201
	case "010920020202":
		return New010920020202() // 375-0109-2002-0202-03-03-29-03-0a.xml | 010920020202
	case "010920020203":
		return New010920020203() // 608-0109-2002-0203-06-03-34-04-54.xml | 010920020203
	case "010920020204":
		return New010920020204() // 464-0109-2002-0204-03-03-53-03-10.xml | 010920020204
	case "010920020205":
		return New010920020205() // 940-0109-2002-0205-03-04-05-08-02.xml | 010920020205
	case "010920030302":
		return New010920030302() // 412-0109-2003-0302-06-03-28-04-54.xml | 010920030302
	case "010920040403":
		return New010920040403() // 434-0109-2004-0403-06-03-34-03-05.xml | 010920040403
	case "010920040404":
		return New010920040404() // 582-0109-2004-0404-03-03-5f-0e-08.xml | 010920040404
	case "0109200404a4":
		return New0109200404a4() // 588-0109-2004-04a4-03-03-5f-0e-06.xml | 0109200404a4
	case "010920050503":
		return New010920050503() // 344-0109-2005-0503-06-03-2a-01-41.xml | 010920050503
	case "010920050505":
		return New010920050505() // 537-0109-2005-0505-03-03-53-0e-03.xml | 010920050505
	case "010920050508":
		return New010920050508() // 758-0109-2005-0508-03-04-05-0f-05.xml | 010920050508
	case "010920060610":
		return New010920060610() // 155-0109-2006-0610-03-02-61-03-0f.xml | 010920060610
	case "010920060620":
		return New010920060620() // 377-0109-2006-0620-03-03-40-05-05.xml | 010920060620
	case "010920070703":
		return New010920070703() // 456-0109-2007-0703-06-03-52-01-10.xml | 010920070703
	case "010920070706":
		return New010920070706() // 571-0109-2007-0706-03-03-5f-01-21.xml | 010920070706
	case "010920080803":
		return New010920080803() // 457-0109-2008-0803-06-03-52-01-10.xml | 010920080803
	case "010920090901":
		return New010920090901() // 195-0109-2009-0901-06-03-22-01-41.xml | 010920090901
	case "010920090908":
		return New010920090908() // 702-0109-2009-0908-03-04-05-0f-05.xml | 010920090908
	case "0109200a0a02":
		return New0109200a0a02() // 340-0109-200a-0a02-06-03-28-04-54.xml | 0109200a0a02
	case "0109200c0c02":
		return New0109200c0c02() // 954-0109-200c-0c02-06-03-34-02-01.xml | 0109200c0c02
	case "0109200c0c06":
		return New0109200c0c06() // 850-0109-200c-0c06-03-04-05-05-01.xml | 0109200c0c06
	case "0109200f0f02":
		return New0109200f0f02() // 339-0109-200f-0f02-06-03-28-03-05.xml | 0109200f0f02
	case "0109200f0f04":
		return New0109200f0f04() // 836-0109-200f-0f04-03-04-05-05-01.xml | 0109200f0f04
	case "010920121203":
		return New010920121203() // 498-0109-2012-1203-06-03-29-01-4a.xml | 010920121203
	case "010920121206":
		return New010920121206() // 623-0109-2012-1206-03-03-5f-0e-07.xml | 010920121206
	case "010920121207":
		return New010920121207() // 759-0109-2012-1207-03-04-05-0f-05.xml | 010920121207
	case "010920141401":
		return New010920141401() // 373-0109-2014-1401-06-03-1c-02-01.xml | 010920141401
	case "010920171717":
		return New010920171717() // 957-0109-2017-1717-06-00-00-00-00.xml | 010920171717
	case "010920171719":
		return New010920171719() // 845-0109-2017-1719-03-04-05-0f-08.xml | 010920171719
	case "010920181805":
		return New010920181805() // 904-0109-2018-1805-03-04-05-16-02.xml | 010920181805
	case "0109201a1a02":
		return New0109201a1a02() // 572-0109-201a-1a02-03-03-5f-14-07.xml | 0109201a1a02
	case "0109201b1b02":
		return New0109201b1b02() // 754-0109-201b-1b02-02-04-05-04-03.xml | 0109201b1b02
	case "0109201c1c03":
		return New0109201c1c03() // 931-0109-201c-1c03-03-04-05-05-01.xml | 0109201c1c03
	case "0109201f1f10":
		return New0109201f1f10() // 902-0109-201f-1f10-03-04-05-06-01.xml | 0109201f1f10
	case "0109201f1f20":
		return New0109201f1f20() // 840-0109-201f-1f20-03-04-05-06-01.xml | 0109201f1f20
	case "010920212101":
		return New010920212101() // 945-0109-2021-2101-03-04-05-05-01.xml | 010920212101
	case "010920222201":
		return New010920222201() // 974-0109-2022-2201-03-04-05-05-01.xml | 010920222201
	case "010930010104":
		return New010930010104() // 525-0109-3001-0104-06-03-43-0d-06.xml | 010930010104
	case "010a11004900":
		return New010a11004900() // 163-010a-1100-4900-06-03-14-02-02.xml | 010a11004900
	case "010a11004a00":
		return New010a11004a00() // 165-010a-1100-4a00-06-03-14-02-02.xml | 010a11004a00
	case "010a12005100":
		return New010a12005100() // 162-010a-1200-5100-06-03-14-03-03.xml | 010a12005100
	case "010a12005200":
		return New010a12005200() // 164-010a-1200-5200-06-03-14-02-02.xml | 010a12005200
	case "010a13005a00":
		return New010a13005a00() // 166-010a-1300-5a00-06-03-14-03-04.xml | 010a13005a00
	case "010b43110001":
		return New010b43110001() // 213-010b-4311-0001-00-03-0a-00-00.xml | 010b43110001
	case "010c00010001":
		return New010c00010001() // 531-010c-0001-0001-00-00-00-00-00.xml | 010c00010001
	case "010e00030002":
		return New010e00030002() // 603-010e-0003-0002-03-02-4e-02-04.xml | 010e00030002
	case "010e00080001":
		return New010e00080001() // 650-010e-0008-0001-03-03-63-01-01.xml | 010e00080001
	case "010e00080002":
		return New010e00080002() // 929-010e-0008-0002-03-03-63-01-01.xml | 010e00080002
	case "010f00000000":
		return New010f00000000() // 555-010f-0000-0000-03-03-52-25-25.xml | 010f00000000
	case "010f00011000":
		return New010f00011000() // 776-010f-0001-1000-01-03-43-04-00.xml | 010f00011000
	case "010f00021000":
		return New010f00021000() // 747-010f-0002-1000-01-03-43-04-00.xml | 010f00021000
	case "010f00021001":
		return New010f00021001() // 735-010f-0002-1001-01-03-43-04-00.xml | 010f00021001
	case "010f01000103":
		return New010f01000103() // 334-010f-0100-0103-03-03-14-01-03.xml | 010f01000103
	case "010f01000109":
		return New010f01000109() // 354-010f-0100-0109-03-03-2a-01-09.xml | 010f01000109
	case "010f01021000":
		return New010f01021000() // 750-010f-0102-1000-03-04-05-03-02.xml | 010f01021000
	case "010f01022000":
		return New010f01022000() // 830-010f-0102-2000-03-04-05-03-03.xml | 010f01022000
	case "010f02000103":
		return New010f02000103() // 337-010f-0200-0103-03-03-14-01-03.xml | 010f02000103
	case "010f02000109":
		return New010f02000109() // 353-010f-0200-0109-03-03-2a-01-09.xml | 010f02000109
	case "010f0200100a":
		return New010f0200100a() // 639-010f-0200-100a-03-03-2a-02-01.xml | 010f0200100a
	case "010f03000103":
		return New010f03000103() // 335-010f-0300-0103-03-03-14-01-03.xml | 010f03000103
	case "010f03000109":
		return New010f03000109() // 352-010f-0300-0109-03-03-2a-01-09.xml | 010f03000109
	case "010f03011001":
		return New010f03011001() // 492-010f-0301-1001-03-03-34-16-16.xml | 010f03011001
	case "010f04000103":
		return New010f04000103() // 336-010f-0400-0103-03-03-14-01-03.xml | 010f04000103
	case "010f04000109":
		return New010f04000109() // 351-010f-0400-0109-03-03-2a-01-09.xml | 010f04000109
	case "010f0400100a":
		return New010f0400100a() // 665-010f-0400-100a-03-03-2a-02-01.xml | 010f0400100a
	case "010f05010101":
		return New010f05010101() // 428-010f-0501-0101-03-03-22-03-31.xml | 010f05010101
	case "010f05010102":
		return New010f05010102() // 514-010f-0501-0102-03-03-28-03-31.xml | 010f05010102
	case "010f06001000":
		return New010f06001000() // 517-010f-0600-1000-03-03-52-24-24.xml | 010f06001000
	case "010f06020700":
		return New010f06020700() // 900-010f-0602-0700-03-04-05-03-02.xml | 010f06020700
	case "010f07001000":
		return New010f07001000() // 553-010f-0700-1000-03-03-67-02-05.xml | 010f07001000
	case "010f07011001":
		return New010f07011001() // 766-010f-0701-1001-03-04-05-03-02.xml | 010f07011001
	case "010f07012001":
		return New010f07012001() // 867-010f-0701-2001-03-04-05-03-02.xml | 010f07012001
	case "010f08001001":
		return New010f08001001() // 540-010f-0800-1001-03-03-43-02-04.xml | 010f08001001
	case "010f08004001":
		return New010f08004001() // 601-010f-0800-4001-03-03-43-02-06.xml | 010f08004001
	case "010f08011001":
		return New010f08011001() // 673-010f-0801-1001-03-04-05-03-02.xml | 010f08011001
	case "010f08012001":
		return New010f08012001() // 785-010f-0801-2001-03-04-05-03-02.xml | 010f08012001
	case "010f09004000":
		return New010f09004000() // 491-010f-0900-4000-03-03-34-16-16.xml | 010f09004000
	case "010f0b001001":
		return New010f0b001001() // 518-010f-0b00-1001-03-03-67-24-24.xml | 010f0b001001
	case "010f0b004001":
		return New010f0b004001() // 651-010f-0b00-4001-03-03-43-19-19.xml | 010f0b004001
	case "010f0b011002":
		return New010f0b011002() // 745-010f-0b01-1002-03-04-05-03-02.xml | 010f0b011002
	case "010f0b012002":
		return New010f0b012002() // 868-010f-0b01-2002-03-04-05-03-02.xml | 010f0b012002
	case "010f0c001000":
		return New010f0c001000() // 552-010f-0c00-1000-03-03-67-02-05.xml | 010f0c001000
	case "010f0c021002":
		return New010f0c021002() // 675-010f-0c02-1002-03-04-05-03-02.xml | 010f0c021002
	case "010f0d011000":
		return New010f0d011000() // 928-010f-0d01-1000-03-04-05-03-02.xml | 010f0d011000
	case "010f0d012000":
		return New010f0d012000() // 963-010f-0d01-2000-03-04-05-03-02.xml | 010f0d012000
	case "010f0d013000":
		return New010f0d013000() // 964-010f-0d01-3000-03-04-05-03-02.xml | 010f0d013000
	case "010f0d014000":
		return New010f0d014000() // 971-010f-0d01-4000-03-04-05-03-02.xml | 010f0d014000
	case "011024110001":
		return New011024110001() // 385-0110-2411-0001-00-02-4e-00-00.xml | 011024110001
	case "011110000010":
		return New011110000010() // 708-0111-1000-0010-06-03-52-02-12.xml | 011110000010
	case "011182000200":
		return New011182000200() // 196-0111-8200-0200-04-02-4e-02-60.xml | 011182000200
	case "011344503030":
		return New011344503030() // 232-0113-4450-3030-06-03-14-05-15.xml | 011344503030
	case "011345565435":
		return New011345565435() // 264-0113-4556-5435-00-03-14-00-00.xml | 011345565435
	case "011400010001":
		return New011400010001() // 220-0114-0001-0001-00-02-4e-00-00.xml | 011400010001
	case "011500000000":
		return New011500000000() // 917-0115-0000-0000-01-03-63-01-00.xml | 011500000000
	case "011500010001":
		return New011500010001() // 882-0115-0001-0001-01-03-63-02-00.xml | 011500010001
	case "011500040002":
		return New011500040002() // 842-0115-0004-0002-03-04-05-01-02.xml | 011500040002
	case "011500040003":
		return New011500040003() // 973-0115-0004-0003-03-04-05-01-00.xml | 011500040003
	case "011500040004":
		return New011500040004() // 947-0115-0004-0004-03-04-05-01-02.xml | 011500040004
	case "011500240001":
		return New011500240001() // 856-0115-0024-0001-03-03-43-01-04.xml | 011500240001
	case "011501000001":
		return New011501000001() // 488-0115-0100-0001-03-03-43-01-04.xml | 011501000001
	case "011501000004":
		return New011501000004() // 501-0115-0100-0004-03-03-2a-01-03.xml | 011501000004
	case "011501000101":
		return New011501000101() // 562-0115-0100-0101-03-03-5c-01-00.xml | 011501000101
	case "011501000103":
		return New011501000103() // 755-0115-0100-0103-02-03-63-01-01.xml | 011501000103
	case "011501000200":
		return New011501000200() // 664-0115-0100-0200-03-03-63-02-00.xml | 011501000200
	case "011501000201":
		return New011501000201() // 768-0115-0100-0201-03-04-05-01-00.xml | 011501000201
	case "011501000400":
		return New011501000400() // 751-0115-0100-0400-03-04-05-01-00.xml | 011501000400
	case "011501000401":
		return New011501000401() // 583-0115-0100-0401-03-03-43-01-04.xml | 011501000401
	case "011501100001":
		return New011501100001() // 985-0115-0110-0001-03-04-05-00-46.xml | 011501100001
	case "011502000001":
		return New011502000001() // 425-0115-0200-0001-06-03-2a-01-03.xml | 011502000001
	case "011502010001":
		return New011502010001() // 521-0115-0201-0001-06-03-43-02-01.xml | 011502010001
	case "011502010002":
		return New011502010002() // 523-0115-0201-0002-06-03-43-02-01.xml | 011502010002
	case "011502010003":
		return New011502010003() // 524-0115-0201-0003-06-03-43-02-01.xml | 011502010003
	case "011510000001":
		return New011510000001() // 558-0115-1000-0001-03-03-2a-01-08.xml | 011510000001
	case "011510000002":
		return New011510000002() // 273-0115-1000-0002-03-03-2a-01-08.xml | 011510000002
	case "011510000003":
		return New011510000003() // 271-0115-1000-0003-03-03-2a-01-08.xml | 011510000003
	case "011510000004":
		return New011510000004() // 154-0115-1000-0004-02-03-1c-01-01.xml | 011510000004
	case "011510000005":
		return New011510000005() // 321-0115-1000-0005-03-03-2a-01-00.xml | 011510000005
	case "011510000009":
		return New011510000009() // 906-0115-1000-0009-03-04-05-02-01.xml | 011510000009
	case "011510000100":
		return New011510000100() // 564-0115-1000-0100-03-03-43-01-00.xml | 011510000100
	case "011510000200":
		return New011510000200() // 605-0115-1000-0200-03-03-63-02-00.xml | 011510000200
	case "011510000300":
		return New011510000300() // 576-0115-1000-0300-03-03-43-01-01.xml | 011510000300
	case "011510001001":
		return New011510001001() // 598-0115-1000-1001-03-03-63-02-00.xml | 011510001001
	case "011510001003":
		return New011510001003() // 600-0115-1000-1003-03-03-63-02-00.xml | 011510001003
	case "011511000001":
		return New011511000001() // 322-0115-1100-0001-03-03-2a-01-00.xml | 011511000001
	case "011511000002":
		return New011511000002() // 432-0115-1100-0002-06-03-2a-01-00.xml | 011511000002
	case "011600010001":
		return New011600010001() // 398-0116-0001-0001-00-02-40-00-00.xml | 011600010001
	case "011600020001":
		return New011600020001() // 388-0116-0002-0001-00-02-4e-00-00.xml | 011600020001
	case "011600100001":
		return New011600100001() // 400-0116-0010-0001-00-02-61-00-00.xml | 011600100001
	case "011600110001":
		return New011600110001() // 396-0116-0011-0001-00-02-61-00-00.xml | 011600110001
	case "011600110002":
		return New011600110002() // 397-0116-0011-0002-00-02-61-00-00.xml | 011600110002
	case "011700010080":
		return New011700010080() // 816-0117-0001-0080-06-04-05-01-00.xml | 011700010080
	case "011800030002":
		return New011800030002() // 752-0118-0003-0002-03-04-05-02-00.xml | 011800030002
	case "011800030008":
		return New011800030008() // 839-0118-0003-0008-03-04-05-02-00.xml | 011800030008
	case "011800040002":
		return New011800040002() // 986-0118-0004-0002-03-04-05-02-00.xml | 011800040002
	case "011801010103":
		return New011801010103() // 414-0118-0101-0103-06-03-28-01-04.xml | 011801010103
	case "011801021020":
		return New011801021020() // 341-0118-0102-1020-06-02-61-01-03.xml | 011801021020
	case "011802020611":
		return New011802020611() // 423-0118-0202-0611-06-03-28-01-0c.xml | 011802020611
	case "011808080808":
		return New011808080808() // 424-0118-0808-0808-06-03-28-01-03.xml | 011808080808
	case "011a01010101":
		return New011a01010101() // 206-011a-0101-0101-00-00-00-00-00.xml | 011a01010101
	case "011a01010102":
		return New011a01010102() // 203-011a-0101-0102-00-00-00-00-00.xml | 011a01010102
	case "011a01010103":
		return New011a01010103() // 202-011a-0101-0103-00-00-00-00-00.xml | 011a01010103
	case "011a01010603":
		return New011a01010603() // 365-011a-0101-0603-06-03-2a-03-01.xml | 011a01010603
	case "011a01020201":
		return New011a01020201() // 204-011a-0102-0201-06-02-61-03-14.xml | 011a01020201
	case "011a01020202":
		return New011a01020202() // 205-011a-0102-0202-06-02-40-03-0c.xml | 011a01020202
	case "011a01110101":
		return New011a01110101() // 953-011a-0111-0101-06-04-18-05-0a.xml | 011a01110101
	case "011a01110105":
		return New011a01110105() // 959-011a-0111-0105-06-04-18-05-0a.xml | 011a01110105
	case "011a01110201":
		return New011a01110201() // 988-011a-0111-0201-06-04-18-05-0a.xml | 011a01110201
	case "011a01110202":
		return New011a01110202() // 987-011a-0111-0202-06-04-18-05-0a.xml | 011a01110202
	case "011a01110605":
		return New011a01110605() // 956-011a-0111-0605-06-04-18-05-0a.xml | 011a01110605
	case "011f00010001":
		return New011f00010001() // 392-011f-0001-0001-00-03-28-00-00.xml | 011f00010001
	case "011f00010002":
		return New011f00010002() // 393-011f-0001-0002-00-03-1c-00-00.xml | 011f00010002
	case "011f00010003":
		return New011f00010003() // 394-011f-0001-0003-00-03-1c-00-00.xml | 011f00010003
	case "012100010001":
		return New012100010001() // 401-0121-0001-0001-00-03-14-00-00.xml | 012100010001
	case "012200010001":
		return New012200010001() // 318-0122-0001-0001-03-03-21-00-10.xml | 012200010001
	case "012300000000":
		return New012300000000() // 409-0123-0000-0000-00-00-00-00-00.xml | 012300000000
	case "012300010000":
		return New012300010000() // 319-0123-0001-0000-03-03-2d-01-00.xml | 012300010000
	case "012300010001":
		return New012300010001() // 404-0123-0001-0001-03-03-2d-01-06.xml | 012300010001
	case "012300020000":
		return New012300020000() // 710-0123-0002-0000-03-03-53-01-00.xml | 012300020000
	case "012301020102":
		return New012301020102() // 472-0123-0102-0102-03-03-45-01-00.xml | 012301020102
	case "012301030103":
		return New012301030103() // 471-0123-0103-0103-03-03-45-01-00.xml | 012301030103
	case "012301040104":
		return New012301040104() // 527-0123-0104-0104-03-03-45-01-00.xml | 012301040104
	case "012303010001":
		return New012303010001() // 415-0123-0301-0001-06-03-2d-00-04.xml | 012303010001
	case "012306010001":
		return New012306010001() // 416-0123-0601-0001-06-03-2d-00-04.xml | 012306010001
	case "012380000000":
		return New012380000000() // 408-0123-8000-0000-00-00-00-00-00.xml | 012380000000
	case "012380000001":
		return New012380000001() // 528-0123-8000-0001-00-00-00-00-00.xml | 012380000001
	case "012600010006":
		return New012600010006() // 442-0126-0001-0006-00-03-36-01-00.xml | 012600010006
	case "012800000000":
		return New012800000000() // 310-0128-0000-0000-03-03-14-01-18.xml | 012800000000
	case "012801280000":
		return New012801280000() // 446-0128-0128-0000-00-00-00-00-00.xml | 012801280000
	case "012900010000":
		return New012900010000() // 313-0129-0001-0000-03-03-21-03-30.xml | 012900010000
	case "012900020000":
		return New012900020000() // 315-0129-0002-0000-03-03-22-14-20.xml | 012900020000
	case "013000010001":
		return New013000010001() // 311-0130-0001-0001-00-00-00-00-00.xml | 013000010001
	case "013000020000":
		return New013000020000() // 674-0130-0002-0000-03-04-05-00-15.xml | 013000020000
	case "013100010001":
		return New013100010001() // 707-0131-0001-0001-07-04-05-04-20.xml | 013100010001
	case "013100010002":
		return New013100010002() // 748-0131-0001-0002-07-04-05-04-20.xml | 013100010002
	case "013100010003":
		return New013100010003() // 749-0131-0001-0003-07-04-05-04-20.xml | 013100010003
	case "013100020002":
		return New013100020002() // 587-0131-0002-0002-03-03-5c-01-06.xml | 013100020002
	case "013730010002":
		return New013730010002() // 463-0137-3001-0002-06-03-22-01-01.xml | 013730010002
	case "013800010002":
		return New013800010002() // 458-0138-0001-0002-06-03-52-00-03.xml | 013800010002
	case "013b10001828":
		return New013b10001828() // 372-013b-1000-1828-01-03-2a-01-01.xml | 013b10001828
	case "013c00000000":
		return New013c00000000() // 753-013c-0000-0000-00-00-00-00-00.xml | 013c00000000
	case "013c00010001":
		return New013c00010001() // 606-013c-0001-0001-03-03-53-01-00.xml | 013c00010001
	case "013c00010003":
		return New013c00010003() // 453-013c-0001-0003-00-03-41-01-00.xml | 013c00010003
	case "013c00010004":
		return New013c00010004() // 487-013c-0001-0004-03-03-41-01-00.xml | 013c00010004
	case "013c00010006":
		return New013c00010006() // 451-013c-0001-0006-03-03-41-01-00.xml | 013c00010006
	case "013c00010010":
		return New013c00010010() // 615-013c-0001-0010-03-03-53-01-0b.xml | 013c00010010
	case "013c00010011":
		return New013c00010011() // 579-013c-0001-0011-03-03-53-01-05.xml | 013c00010011
	case "013c00010012":
		return New013c00010012() // 652-013c-0001-0012-03-03-5f-01-04.xml | 013c00010012
	case "013c00010013":
		return New013c00010013() // 619-013c-0001-0013-03-03-5f-01-04.xml | 013c00010013
	case "013c00010015":
		return New013c00010015() // 614-013c-0001-0015-03-03-5f-01-01.xml | 013c00010015
	case "013c00010028":
		return New013c00010028() // 864-013c-0001-0028-03-04-05-01-03.xml | 013c00010028
	case "013c00010038":
		return New013c00010038() // 932-013c-0001-0038-03-04-05-01-04.xml | 013c00010038
	case "013c00020002":
		return New013c00020002() // 585-013c-0002-0002-06-03-5c-01-00.xml | 013c00020002
	case "013c0002000c":
		return New013c0002000c() // 910-013c-0002-000c-03-03-5f-01-0e.xml | 013c0002000c
	case "013c0002000d":
		return New013c0002000d() // 909-013c-0002-000d-03-03-5f-01-0b.xml | 013c0002000d
	case "013c0002001e":
		return New013c0002001e() // 602-013c-0002-001e-03-03-5f-01-0d.xml | 013c0002001e
	case "013c0002001f":
		return New013c0002001f() // 620-013c-0002-001f-03-03-5f-01-05.xml | 013c0002001f
	case "013c00020020":
		return New013c00020020() // 721-013c-0002-0020-03-04-05-01-08.xml | 013c00020020
	case "013c00020021":
		return New013c00020021() // 715-013c-0002-0021-03-04-05-01-08.xml | 013c00020021
	case "013c0002002b":
		return New013c0002002b() // 714-013c-0002-002b-03-04-05-01-08.xml | 013c0002002b
	case "013c0004000a":
		return New013c0004000a() // 612-013c-0004-000a-03-03-5f-01-08.xml | 013c0004000a
	case "013c0006001a":
		return New013c0006001a() // 873-013c-0006-001a-03-04-05-01-01.xml | 013c0006001a
	case "013c0008001d":
		return New013c0008001d() // 613-013c-0008-001d-03-03-5f-01-0b.xml | 013c0008001d
	case "013c00080027":
		return New013c00080027() // 872-013c-0008-0027-03-04-05-01-0c.xml | 013c00080027
	case "013c00090022":
		return New013c00090022() // 705-013c-0009-0022-03-04-05-01-02.xml | 013c00090022
	case "014500010004":
		return New014500010004() // 444-0145-0001-0004-03-03-53-01-02.xml | 014500010004
	case "014800010001":
		return New014800010001() // 422-0148-0001-0001-03-03-2a-00-04.xml | 014800010001
	case "014800020001":
		return New014800020001() // 858-0148-0002-0001-03-03-43-00-05.xml | 014800020001
	case "014900000000":
		return New014900000000() // 593-0149-0000-0000-03-03-67-01-07.xml | 014900000000
	case "014900120104":
		return New014900120104() // 566-0149-0012-0104-03-03-67-01-07.xml | 014900120104
	case "014912140304":
		return New014912140304() // 669-0149-1214-0304-03-03-63-01-31.xml | 014912140304
	case "014912140504":
		return New014912140504() // 829-0149-1214-0504-03-04-05-01-31.xml | 014912140504
	case "014d00000000":
		return New014d00000000() // 878-014d-0000-0000-00-00-00-00-00.xml | 014d00000000
	case "014d00010001":
		return New014d00010001() // 496-014d-0001-0001-01-03-67-01-00.xml | 014d00010001
	case "014f00000000":
		return New014f00000000() // 777-014f-0000-0000-00-00-00-00-00.xml | 014f00000000
	case "014f44503030":
		return New014f44503030() // 480-014f-4450-3030-06-03-2a-05-29.xml | 014f44503030
	case "014f44573034":
		return New014f44573034() // 482-014f-4457-3034-06-03-2a-05-29.xml | 014f44573034
	case "014f44573331":
		return New014f44573331() // 483-014f-4457-3331-06-03-2a-05-29.xml | 014f44573331
	case "014f47423030":
		return New014f47423030() // 580-014f-4742-3030-06-03-67-01-02.xml | 014f47423030
	case "014f47443032":
		return New014f47443032() // 584-014f-4744-3032-03-03-67-00-15.xml | 014f47443032
	case "014f47443530":
		return New014f47443530() // 684-014f-4744-3530-03-04-05-00-7a.xml | 014f47443530
	case "014f47543038":
		return New014f47543038() // 923-014f-4754-3038-03-03-5f-05-07.xml | 014f47543038
	case "014f52463133":
		return New014f52463133() // 479-014f-5246-3133-06-03-2a-05-29.xml | 014f52463133
	case "014f52503030":
		return New014f52503030() // 481-014f-5250-3030-06-03-2a-05-29.xml | 014f52503030
	case "014f52523530":
		return New014f52523530() // 484-014f-5252-3530-06-03-2a-05-29.xml | 014f52523530
	case "014f54573033":
		return New014f54573033() // 485-014f-5457-3033-06-03-2a-05-29.xml | 014f54573033
	case "015100020001":
		return New015100020001() // 460-0151-0002-0001-03-03-67-03-79.xml | 015100020001
	case "015100030003":
		return New015100030003() // 927-0151-0003-0003-03-04-05-01-09.xml | 015100030003
	case "015200030002":
		return New015200030002() // 926-0152-0003-0002-06-04-05-00-02.xml | 015200030002
	case "015200030003":
		return New015200030003() // 921-0152-0003-0003-06-04-05-00-02.xml | 015200030003
	case "015200030512":
		return New015200030512() // 790-0152-0003-0512-06-04-05-00-02.xml | 015200030512
	case "015202020511":
		return New015202020511() // 522-0152-0202-0511-06-03-52-03-64.xml | 015202020511
	case "015205000001":
		return New015205000001() // 901-0152-0500-0001-06-04-05-00-01.xml | 015205000001
	case "015205000003":
		return New015205000003() // 920-0152-0500-0003-06-04-05-00-01.xml | 015205000003
	case "015400010001":
		return New015400010001() // 717-0154-0001-0001-03-04-05-01-00.xml | 015400010001
	case "015400030001":
		return New015400030001() // 692-0154-0003-0001-03-03-43-01-00.xml | 015400030001
	case "015401000101":
		return New015401000101() // 739-0154-0100-0101-02-04-05-01-01.xml | 015401000101
	case "015401000201":
		return New015401000201() // 725-0154-0100-0201-03-04-05-01-00.xml | 015401000201
	case "015411000001":
		return New015411000001() // 448-0154-1100-0001-03-03-2a-01-00.xml | 015411000001
	case "015411000002":
		return New015411000002() // 447-0154-1100-0002-06-03-2a-01-00.xml | 015411000002
	case "015900010001":
		return New015900010001() // 706-0159-0001-0001-03-03-67-04-00.xml | 015900010001
	case "015900010051":
		return New015900010051() // 866-0159-0001-0051-03-04-05-01-01.xml | 015900010051
	case "015900020001":
		return New015900020001() // 642-0000-0002-0001-03-03-1c-01-0c.xml | 015900020001
	case "015900020002":
		return New015900020002() // 643-0000-0002-0002-03-03-1c-01-0c.xml | 015900020002
	case "015900020051":
		return New015900020051() // 791-0159-0002-0051-03-04-05-01-01.xml | 015900020051
	case "015900020053":
		return New015900020053() // 763-0159-0002-0053-03-04-05-01-01.xml | 015900020053
	case "015900030002":
		return New015900030002() // 641-0159-0003-0002-03-03-1c-01-0c.xml | 015900030002
	case "015900050001":
		return New015900050001() // 644-0000-0005-0001-03-03-43-01-0c.xml | 015900050001
	case "015a10070002":
		return New015a10070002() // 677-015a-1007-0002-06-03-67-02-01.xml | 015a10070002
	case "015e80150001":
		return New015e80150001() // 474-015e-8015-0001-03-03-67-01-71.xml | 015e80150001
	case "015f00000000":
		return New015f00000000() // 577-015f-0000-0000-05-03-67-01-00.xml | 015f00000000
	case "015f00010001":
		return New015f00010001() // 511-015f-0001-0001-03-03-67-01-00.xml | 015f00010001
	case "015f00020001":
		return New015f00020001() // 510-015f-0002-0001-03-03-67-01-00.xml | 015f00020001
	case "015f31020202":
		return New015f31020202() // 597-015f-3102-0202-05-03-43-01-00.xml | 015f31020202
	case "015f41020201":
		return New015f41020201() // 658-015f-4102-0201-05-03-43-01-00.xml | 015f41020201
	case "015f41020202":
		return New015f41020202() // 660-015f-4102-0202-05-03-43-01-00.xml | 015f41020202
	case "015f51020103":
		return New015f51020103() // 578-015f-5102-0103-05-03-67-01-00.xml | 015f51020103
	case "016000000000":
		return New016000000000() // 495-0000-0000-0000-00-00-00-00-00.xml | 016000000000
	case "016330010301":
		return New016330010301() // 475-0163-3001-0301-03-03-40-19-16.xml | 016330010301
	case "016500010001":
		return New016500010001() // 709-0165-0001-0001-03-03-53-01-00.xml | 016500010001
	case "016500010003":
		return New016500010003() // 935-0165-0001-0003-03-04-05-01-00.xml | 016500010003
	case "016500020001":
		return New016500020001() // 712-0165-0002-0001-02-04-05-02-02.xml | 016500020001
	case "016500020002":
		return New016500020002() // 849-0165-0002-0002-02-04-05-02-03.xml | 016500020002
	case "016500020003":
		return New016500020003() // 737-0165-0002-0003-02-04-05-02-03.xml | 016500020003
	case "016601000100":
		return New016601000100() // 627-0166-0100-0100-06-03-43-01-52.xml | 016601000100
	case "017100010001":
		return New017100010001() // 494-0171-0001-0001-01-03-67-01-02.xml | 017100010001
	case "017300030002":
		return New017300030002() // 881-0173-0003-0002-03-03-53-01-0f.xml | 017300030002
	case "017500010011":
		return New017500010011() // 911-0175-0001-0011-03-03-53-01-0a.xml | 017500010011
	case "01750002000d":
		return New01750002000d() // 912-0175-0002-000d-03-03-5f-01-0b.xml | 01750002000d
	case "01750002000e":
		return New01750002000e() // 913-0175-0002-000e-03-03-5f-01-0b.xml | 01750002000e
	case "017501000101":
		return New017501000101() // 918-0175-0100-0101-03-03-5c-01-01.xml | 017501000101
	case "017600010002":
		return New017600010002() // 871-0176-0001-0002-01-04-05-01-00.xml | 017600010002
	case "017600050001":
		return New017600050001() // 789-0176-0005-0001-03-04-05-01-01.xml | 017600050001
	case "01785a44414e":
		return New01785a44414e() // 690-0178-5a44-414e-06-03-99-02-14.xml | 01785a44414e
	case "017c00010002":
		return New017c00010002() // 622-017c-0001-0002-06-03-67-03-78.xml | 017c00010002
	case "017c00060003":
		return New017c00060003() // 632-017c-0006-0003-06-03-67-03-94.xml | 017c00060003
	case "017f00010001":
		return New017f00010001() // 885-017f-0001-0001-01-03-53-01-02.xml | 017f00010001
	case "018200010001":
		return New018200010001() // 574-0182-0001-0001-01-03-28-03-5e.xml | 018200010001
	case "018302010701":
		return New018302010701() // 678-0183-0201-0701-01-03-52-02-06.xml | 018302010701
	case "018444473031":
		return New018444473031() // 887-0184-4447-3031-03-03-5f-05-05.xml | 018444473031
	case "018444473033":
		return New018444473033() // 888-0184-4447-3033-03-03-5f-05-05.xml | 018444473033
	case "018444473034":
		return New018444473034() // 889-0184-4447-3034-03-03-5f-05-07.xml | 018444473034
	case "018447443032":
		return New018447443032() // 683-0184-4744-3032-03-03-5f-05-07.xml | 018447443032
	case "018b00400001":
		return New018b00400001() // 919-018b-0040-0001-06-03-63-00-62.xml | 018b00400001
	case "018e00010001":
		return New018e00010001() // 742-018e-0001-0001-03-04-05-01-03.xml | 018e00010001
	case "018e00010002":
		return New018e00010002() // 704-018e-0001-0002-03-04-05-01-03.xml | 018e00010002
	case "018e00020001":
		return New018e00020001() // 941-018e-0002-0001-03-04-05-01-27.xml | 018e00020001
	case "018e00030001":
		return New018e00030001() // 743-018e-0003-0001-03-04-05-01-03.xml | 018e00030001
	case "018e00030002":
		return New018e00030002() // 972-018e-0003-0002-03-04-05-01-03.xml | 018e00030002
	case "018e00030003":
		return New018e00030003() // 744-018e-0003-0003-03-04-05-01-03.xml | 018e00030003
	case "018e00030004":
		return New018e00030004() // 874-018e-0003-0004-03-04-05-01-03.xml | 018e00030004
	case "018e00030009":
		return New018e00030009() // 844-018e-0003-0009-03-04-05-01-03.xml | 018e00030009
	case "018e00040002":
		return New018e00040002() // 646-018e-0004-0002-03-03-5f-01-02.xml | 018e00040002
	case "018f01000101":
		return New018f01000101() // 883-018f-0100-0101-03-03-5c-01-01.xml | 018f01000101
	case "019000010001":
		return New019000010001() // 922-0190-0001-0001-03-03-5f-01-00.xml | 019000010001
	case "019000030001":
		return New019000030001() // 876-0190-0003-0001-03-04-05-01-49.xml | 019000030001
	case "019500010001":
		return New019500010001() // 760-0195-0001-0001-00-00-00-00-00.xml | 019500010001
	case "019900010001":
		return New019900010001() // 654-0199-0001-0001-01-03-67-99-52.xml | 019900010001
	case "019a00030003":
		return New019a00030003() // 978-019a-0003-0003-06-04-05-0a-05.xml | 019a00030003
	case "019b00010001":
		return New019b00010001() // 990-019b-0001-0001-06-03-53-01-07.xml | 019b00010001
	case "019c00010001":
		return New019c00010001() // 937-019c-0001-0001-01-04-18-04-24.xml | 019c00010001
	case "019e00010001":
		return New019e00010001() // 860-019e-0001-0001-01-04-05-01-01.xml | 019e00010001
	case "020000010001":
		return New020000010001() // 634-0200-0001-0001-01-03-5c-01-01.xml | 020000010001
	case "020600000000":
		return New020600000000() // 679-0206-0000-0000-00-00-00-00-00.xml | 020600000000
	case "020700270100":
		return New020700270100() // 676-0207-0027-0100-03-04-05-01-00.xml | 020700270100
	case "020e47543038":
		return New020e47543038() // 914-020e-4754-3038-03-03-5f-05-07.xml | 020e47543038
	case "022300010001":
		return New022300010001() // 761-0223-0001-0001-01-04-05-02-00.xml | 022300010001
	case "022300010002":
		return New022300010002() // 832-0223-0001-0002-01-04-05-02-00.xml | 022300010002
	case "022a01000100":
		return New022a01000100() // 854-022a-0100-0100-03-04-05-01-1d.xml | 022a01000100
	case "022d01000001":
		return New022d01000001() // 838-022d-0100-0001-07-04-05-01-01.xml | 022d01000001
	case "022e00010001":
		return New022e00010001() // 730-022e-0001-0001-03-04-05-01-02.xml | 022e00010001
	case "022e00030003":
		return New022e00030003() // 718-022e-0003-0003-03-04-05-01-01.xml | 022e00030003
	case "022e00040004":
		return New022e00040004() // 720-022e-0004-0004-03-04-05-01-01.xml | 022e00040004
	case "022e00050005":
		return New022e00050005() // 719-022e-0005-0005-03-04-05-01-00.xml | 022e00050005
	case "022e00060006":
		return New022e00060006() // 852-022e-0006-0006-03-04-05-01-01.xml | 022e00060006
	case "022e00070007":
		return New022e00070007() // 851-022e-0007-0007-01-04-05-04-14.xml | 022e00070007
	case "022e00070008":
		return New022e00070008() // 853-022e-0007-0008-01-04-05-04-14.xml | 022e00070008
	case "023000030001":
		return New023000030001() // 991-0230-0003-0001-03-04-05-01-00.xml | 023000030001
	case "02340003010a":
		return New02340003010a() // 958-0234-0003-010a-03-04-21-01-00.xml | 02340003010a
	case "023800030004":
		return New023800030004() // 907-0238-0003-0004-01-04-05-01-15.xml | 023800030004
	case "023900010001":
		return New023900010001() // 787-0239-0001-0001-06-04-05-01-00.xml | 023900010001
	case "023c00010002":
		return New023c00010002() // 788-023c-0001-0002-03-04-05-01-00.xml | 023c00010002
	case "024000010001":
		return New024000010001() // 729-0240-0001-0001-07-04-05-04-20.xml | 024000010001
	case "0244ba5e0001":
		return New0244ba5e0001() // 965-0244-ba5e-0001-01-04-05-04-05.xml | 0244ba5e0001
	case "024500030001":
		return New024500030001() // 865-0245-0003-0001-03-04-05-01-27.xml | 024500030001
	case "024500030002":
		return New024500030002() // 861-0245-0003-0002-03-04-05-01-27.xml | 024500030002
	case "024700420001":
		return New024700420001() // 967-0247-0042-0001-03-04-18-27-10.xml | 024700420001
	case "024800010001":
		return New024800010001() // 961-0248-0001-0001-07-04-05-04-20.xml | 024800010001
	case "024a01020304":
		return New024a01020304() // 984-024a-0102-0304-01-04-05-04-05.xml | 024a01020304
	case "024b01000001":
		return New024b01000001() // 948-024b-0100-0001-01-04-05-04-50.xml | 024b01000001
	case "024d00010001":
		return New024d00010001() // 898-024d-0001-0001-01-03-63-04-1a.xml | 024d00010001
	case "024d47610001":
		return New024d47610001() // 880-024d-4761-0001-03-03-63-01-50.xml | 024d47610001
	case "024f00010001":
		return New024f00010001() // 955-024f-0001-0001-01-03-63-01-00.xml | 024f00010001
	case "025800030082":
		return New025800030082() // 893-0258-0003-0082-06-04-05-03-3d.xml | 025800030082
	case "025800030083":
		return New025800030083() // 894-0258-0003-0083-06-04-05-03-50.xml | 025800030083
	case "025800030085":
		return New025800030085() // 960-0258-0003-0085-06-04-05-02-28.xml | 025800030085
	case "025800030087":
		return New025800030087() // 897-0258-0003-0087-03-04-05-03-46.xml | 025800030087
	case "025800031082":
		return New025800031082() // 952-0258-0003-1082-06-04-05-03-3d.xml | 025800031082
	case "025800031087":
		return New025800031087() // 951-0258-0003-1087-03-04-05-03-46.xml | 025800031087
	case "025d01000100":
		return New025d01000100() // 982-025d-0100-0100-03-04-22-06-33.xml | 025d01000100
	case "025d02000100":
		return New025d02000100() // 977-025d-0200-0100-03-04-22-06-33.xml | 025d02000100
	case "026001680168":
		return New026001680168() // 969-0260-0168-0168-06-04-05-01-25.xml | 026001680168
	case "026080011000":
		return New026080011000() // 968-0260-8001-1000-06-04-05-01-25.xml | 026080011000
	case "027200010001":
		return New027200010001() // 933-0272-0001-0001-01-04-05-02-00.xml | 027200010001
	case "027601390001":
		return New027601390001() // 975-0276-0139-0001-03-04-05-01-00.xml | 027601390001
	case "027700010001":
		return New027700010001() // 970-0277-0001-0001-07-04-05-01-04.xml | 027700010001
	case "52540000531e":
		return New52540000531e() // 82-5254-0000-531e-02-02-4e-01-01.xml | 52540000531e
	case "525400008510":
		return New525400008510() // 786-5254-0000-8510-02-04-05-01-01.xml | 525400008510
	case "5254000103e9":
		return New5254000103e9() // 201-5254-0001-03e9-02-02-4e-00-00.xml | 5254000103e9
	case "525400018332":
		return New525400018332() // 193-5254-0001-8332-02-02-41-01-06.xml | 525400018332
	case "525400018380":
		return New525400018380() // 508-5254-0001-8380-02-03-22-01-02.xml | 525400018380
	case "525400018510":
		return New525400018510() // 847-5254-0001-8510-02-04-05-01-01.xml | 525400018510
	case "5254000b8510":
		return New5254000b8510() // 848-5254-000b-8510-02-04-05-01-01.xml | 5254000b8510
	case "525401008371":
		return New525401008371() // 841-5254-0100-8371-06-03-43-01-0a.xml | 525401008371
	case "525401018371":
		return New525401018371() // 505-5254-0101-8371-06-03-67-01-04.xml | 525401018371
	case "525401018377":
		return New525401018377() // 364-5254-0101-8377-06-03-2a-01-01.xml | 525401018377
	case "525401078377":
		return New525401078377() // 976-5254-0107-8377-06-03-67-01-21.xml | 525401078377
	case "525402008030":
		return New525402008030() // 235-5254-0200-8030-00-03-22-00-00.xml | 525402008030
	case "525410008140":
		return New525410008140() // 685-5254-1000-8140-06-03-67-00-06.xml | 525410008140
	case "52544d534331":
		return New52544d534331() // 214-5254-4d53-4331-00-03-1c-00-00.xml | 52544d534331
	case "525480010000":
		return New525480010000() // 161-5254-8001-0000-04-02-4e-00-03.xml | 525480010000
	case "525480018020":
		return New525480018020() // 590-5254-8001-8020-03-03-67-02-20.xml | 525480018020
	case "525482008130":
		return New525482008130() // 594-5254-8200-8130-03-03-67-00-21.xml | 525482008130
	case "525482010200":
		return New525482010200() // 167-5254-8201-0200-04-02-4e-00-06.xml | 525482010200
	case "525482018021":
		return New525482018021() // 591-5254-8201-8021-03-03-67-00-21.xml | 525482018021
	case "525482018120":
		return New525482018120() // 445-5254-8201-8120-04-02-78-01-02.xml | 525482018120
	}

	return nil
}
func New00000000() *Device{
	return &Device{
		Brand: "",
		Product: "Heatit Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000000000000() *Device{
	return &Device{
		Brand: "Secure",
		Product: "SCS-317",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0000",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0053,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature unit selection",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 0,
						Unit: "°C",
						Reserved: false,
						Description: "°C value (0/-127)",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "°F value (128/-255)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Lower temperature limit",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 30,
						Unit: "°C/°F",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Upper temperature limit",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 30,
						Unit: "°C/°F",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Delta T temperature change",
				Description: "(1˚C = 10) change between temperature readings to trigger an temperature report",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "1(0.1)",
						Reserved: false,
						Description: "1 or 0.1",
					},
				},
			},
		},
	}
}
func New0000000021ac() *Device{
	return &Device{
		Brand: "ZiRC",
		Product: "ZiRC",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0000",
		ProductType: "0000",
		ProductID: "21ac",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New0000000121b4() *Device{
	return &Device{
		Brand: "Sigma Designs",
		Product: "ZIPR",
		Description: "/n            /n          ",

		ManufacturerID: "0000",
		ProductType: "0001",
		ProductID: "21b4",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x004d,
			},
			&CommandClass{
				ID: 0x0034,
			},
			&CommandClass{
				ID: 0x0052,
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0077,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0023,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0061,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0001444d3330() *Device{
	return &Device{
		Brand: "ACT",
		Product: "ZDM230",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "444d",
		ProductID: "3330",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New000144503030() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZDP100,LDM-15",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "4450",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Disable/Enable load sense",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable load sense",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable load sense",
					},
				},
			},
		},
	}
}
func New000144573034() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZDW104,LRM-AS",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "4457",
		ProductID: "3034",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Night Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "the LED will/nturn ON when the load attached is turned ON",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "the LED will turn OFF when the load attached is turned ON",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Changes the top of the switch to OFF and the bottom of the switch to ON",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Load Sense",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable load sense",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable load sense",
					},
				},
			},
		},
	}
}
func New000144573332() *Device{
	return &Device{
		Brand: "HomePro",
		Product: "ZDM230",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "4457",
		ProductID: "3332",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000152463133() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZRF113, LFM 20",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5246",
		ProductID: "3133",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0001524d3330() *Device{
	return &Device{
		Brand: "ACT",
		Product: "ZRM230",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "524d",
		ProductID: "3330",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New000152503030() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZRP100, LPM-15",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5250",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 104,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Operation Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Enable flash mode wich operates as follows: With Parameter 104 value set to 0, relay is closed and ZRP100 defaults to ON (relay closed)./nWhenever the ZRP100 receives a Z-Wave ON command, the ZRP100 will begin cycling its output/nrelay on and off approximate once per second (1/2 second Off, 1/2 second On) for 20 seconds./nIf at any time during that 20 seconds, the ZRP100 receives a Z-Wave OFF command, the ZRP100/nwill stop cycling its output relay and default to ON./nAt any time during that 20 seconds, if the ZRP100 receives a Z-Wave ON command, the ZRP100/nwill add an additional 20 seconds on/off cycling of its output relay. At the end of the 20 seconds,/nthe ZRP100 will again default to ON (relay closed)./nAt any other time, if the ZRP100 receives an OFF command, it will have no effect and the ZRP100/nremains ON.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal ON/OFF operation",
					},
				},
			},
		},
	}
}
func New000152523130() *Device{
	return &Device{
		Brand: "ACT",
		Product: "ZIR010",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5252",
		ProductID: "3130",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000152523534() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZRR154, LOM-15D",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5252",
		ProductID: "3534",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Nightlight",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Set this parameter to 0 to have the amber indicator LED show the state of the outlets (indicator ON = outlets ON).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Set this parameter to 1 to have indicator show the opposite state of the controlled outlets (indicator ON = outlets/nOFF). This configuration allows the ZRR154 to act as a “night light”.",
					},
				},
			},
		},
	}
}
func New000152573033() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZRW103, LSM-20",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5257",
		ProductID: "3033",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Night Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED will/nturn ON when the load attached is turned ON",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED on the ZRW103 will turn OFF when the load attached is turned ON",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Change the top of the switch to OFF and the bottom of the switch ON",
					},
				},
			},
		},
	}
}
func New0001544d3330() *Device{
	return &Device{
		Brand: "ACT",
		Product: "ZTM230",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "544d",
		ProductID: "3330",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000154573033() *Device{
	return &Device{
		Brand: "HomePro, Evolve",
		Product: "ZTW103, LTM-5",
		Description: "/n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5457",
		ProductID: "3033",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Set Ignore Start Level Bit When Transmitting Dim Commands",
				Description: "The ZTW103 can send Dim commands to Z-Wave enabled dimmers. The Dim command has a start level/nembedded in it. A dimmer receiving this command will start dimming from that start level. However, the command/ncan be sent so that the dimmer ignores the start level and instead start dimming from its current level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "A dimmer receiving this command will start dimming from thr start level.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The dimmer will start dimming from its current dim level/nrather than the start level embedded in the command.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Night Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED will turn ON when the status of Group 1 is ON.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED will turn ON when the status of the devices in Group 1 is OFF.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Change back to original settings.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Change the top of the transmitter to OFF and the bottom of the transmitter to ON.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore Start Level When Receiving Dim Commands",
				Description: "The ZTW103 can send Dim commands to Z-Wave enabled dimmers. The Dim command has a start/nlevel embedded in it. A dimmer receiving this command will start dimming from that start level. However,/nthe command can be sent so that the dimmer ignores the start level and instead start dimming from its/ncurrent level. // Note that this only affects a level that is reported or possibly sent by the ZTW103 since the/nZTW103 does not control a load.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Starts dimming from that start level",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The ZTW103 sends the command so that the dimmer will start dimming from its/ncurrent dim level rather then the start level embedded in the command.",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "LED Transmission Indication",
				Description: "The ZTW103 will flicker its LED when it is transmitting to any of its 4 groups. This flickering can be changed. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flickering can be set to/nnot flicker at all.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flicker the entire time it is transmitting.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Flicker for only 1 second/nwhen it begins transmitting.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Poll: Minutes",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "The ZTW103 will poll the first node in Group 1 in order to keep itself synchronized with the group if this/nconfiguration parameter is set to 1. How often it will poll is configured using this parameter.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Poll First Node in Group 1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No polling.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The ZTW103 will poll the first node in Group 1 in order to keep itself synchronized with the group.",
					},
				},
			},
		},
	}
}
func New000157573330() *Device{
	return &Device{
		Brand: "HomePro",
		Product: "ZTW230",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0001",
		ProductType: "5757",
		ProductID: "3330",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000200038010() *Device{
	return &Device{
		Brand: "Z-Wave RS",
		Product: "Z-Wave RS",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0003",
		ProductID: "8010",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x005b,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0053,
			},
			&CommandClass{
				ID: 0x0087,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Temperature Report threshold",
				Description: "0.1 to 10°C/n1=0.1°C/n100=10°C",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "C°",
						Reserved: false,
						Description: "temperature in celsius",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Set-point display resolution",
				Description: "0.1 to 10°C/n1=0.1°C/n100=10°C",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "C°",
						Reserved: false,
						Description: "temperature in celsius",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 12,
				Name: "Min Set-point and override limit",
				Description: "from  min 0°C to max setpoint override limit/n0=0°C/n40=40°C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 40,
						Unit: "C°",
						Reserved: false,
						Description: "temperature in celsius",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 28,
				Name: "Max Set-point and override limit",
				Description: "from  min setpoint override limit to max 40°C/n0=0°C/n40=40°C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 40,
						Unit: "C°",
						Reserved: false,
						Description: "temperature in celsius",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "LED Flash period",
				Description: "0 to 65535 seconds",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Set-point control function",
				Description: "0=Disabled/n1=Enabled",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temporarily override scheduler",
				Description: "0=Disabled/n1=Enabled",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Set-point type in Thermostat_Setpoint_Reports",
				Description: "1=Heating/n2=Cooling/n10=Auto Changeover",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Heating",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Cooling",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Auto Changeover",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "LED on time",
				Description: "1=100ms/n5=500ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 500,
						Unit: "ms",
						Reserved: false,
						Description: "milliseconds/n(in 100ms steps)",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Number of LED flashes (duration)",
				Description: "0 to 255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED color",
				Description: "1=Green/n2=Red",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
				},
			},
		},
	}
}
func New000200050003() *Device{
	return &Device{
		Brand: "Danfoss",
		Product: "Living Connect 013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0005",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0046,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000200050004() *Device{
	return &Device{
		Brand: "Danfoss",
		Product: "Living Connect 1.1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0005",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0046,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00020005017c() *Device{
	return &Device{
		Brand: "EbV",
		Product: "EbV Connect",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0005",
		ProductID: "017c",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0046,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000200640001() *Device{
	return &Device{
		Brand: "Danfoss",
		Product: "RA-PLUS-w",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0064",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0046,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00020248a030() *Device{
	return &Device{
		Brand: "COQON",
		Product: "Fußbodenheizcontroller 10 Kanal",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0248",
		ProductID: "a030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valve Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normally closed",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normally open",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Heat Load Strategy",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Stacking",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Spreading",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "PWM Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "short (15min)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "medium (30min)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "long (60min)",
					},
				},
			},
		},
	}
}
func New00020248a040() *Device{
	return &Device{
		Brand: "COQON",
		Product: "Fußbodenheizcontroller 5 Kanal",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "0248",
		ProductID: "a040",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valve Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normally closed",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normally open",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Heat Load Strategy",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Stacking",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Spreading",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "PWM Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "PWM period: Short (15 min)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "PWM period: Medium (30 min)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PWM period: Long (60 min)",
					},
				},
			},
		},
	}
}
func New000280040001() *Device{
	return &Device{
		Brand: "RET BZ - RF",
		Product: "RET BZ 2012",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000280042000() *Device{
	return &Device{
		Brand: "RXZ3",
		Product: "RXZ3 (RF relay switching unit)",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8004",
		ProductID: "2000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000280042010() *Device{
	return &Device{
		Brand: "RZ1",
		Product: "RZ1 (Single Channel RF Relay Switching Unit)",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8004",
		ProductID: "2010",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000280042020() *Device{
	return &Device{
		Brand: "RZ1",
		Product: "RZ1-HP (Single Channel RF Relay Switching Unit)",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8004",
		ProductID: "2020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000280050001() *Device{
	return &Device{
		Brand: "Danfoss",
		Product: "living connect",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8005",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0046,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000280070200() *Device{
	return &Device{
		Brand: "Danfoss",
		Product: "Heat Recovery Ventilation - Computing and Communications Module",
		Description: "/n            /n          ",

		ManufacturerID: "0002",
		ProductType: "8007",
		ProductID: "0200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0091,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0037,
			},
			&CommandClass{
				ID: 0x0039,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000550450653() *Device{
	return &Device{
		Brand: "MultiWave",
		Product: "Five-Channel Wireless Remote Receiver",
		Description: "/n            /n          ",

		ManufacturerID: "0005",
		ProductType: "5045",
		ProductID: "0653",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0060,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0043,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "PE653 OPERATION MODE                    ",
				Description: "The PE653 has several settings that modify the PE653 circuit behaviors and inter-dependencies.  These settings and modes are defined in detail in the User manual.  You may use this Configuration parameter to set these modes.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the circuit or variable speed pump speed to activate when the Cleaner/Booster pump needs to be active. The valid settings for this field are one of the following: Booster/Cleaner Functionality not supported	= 0x01, Circuit-1 used for Booster/Cleaner = 0x02, Variable Speed pump Speed-1 used for Booster/Cleaner = 	0x03, Variable Speed pump Speed-2 used for Booster/Cleaner = 0x04, Variable Speed pump Speed-3 used for Booster/Cleaner = 	0x05, Variable Speed pump Speed-4 used for Booster/Cleaner = 0x06",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte is used to indicate the following two pieces of information./no	Whether the installed pump is a one or two speed pump/no	Whether the Booster/Cleaner is installed or not/nThe valid setting for this field is the combination (logical ORing) of these two pieces of information.  This field can have the following values applied to it: One Speed/NO = 0x00, One Speed/YES = 0x01, Two Speed/NO	= 0x02, Two Speed/YES = 0x03/n",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "FIREMAN_TIMEOUT         ",
				Description: "Used to Disable, enable and set fireman cool down durations for preventing heater over heating. The PE653 allows the user to configure whether there is a fireman cool down period associated with an attached heater (circuit 5) and if there is, how long the cool down period will be.  You may use this Configuration parameter to set these modes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Fireman Disabled (no heater installed)",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with no cool down period",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 1 minute",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 2 minute",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 3 minute",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 4 minute",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 5 minute",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 6 minute",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 7 minute",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 8 minute",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 9 minute",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 10 minute",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 11 minute",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 12 minute",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 13 minute",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 14 minute",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 15 minute",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "TEMP_CALIBRATION_OFFSETS",
				Description: "Sets temperature offsets which will then be applied to the actual pool and/or spa temperature measured by the PE653.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte sets the amount of compensation you wish to apply to the actual water (pool/spa) reading taken by the PE653.  This value is an offset in degrees Fahrenheit and may have the value of -20F to &#43;20F (in 1 degree increments), inclusive.  Only whole number offsets are allowed.  A setting of zero results in NO offset being applied.",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte sets the amount of compensation you wish to apply to the actual Air (freeze protection) reading taken by the PE653.  This value is an offset in degrees Fahrenheit and may have the value of -20F to &#43;20F (in 1 degree increments), inclusive.  Only whole number offsets are allowed.  A setting of zero results in NO offset being applied.",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte shall always be set to zero.",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte shall always be set to zero.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_1_EV_SCHED_1        ",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for Circuit-1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_1_EV_SCHED_2        ",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for Circuit-1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_1_EV_SCHED_3        ",
				Description: "Used to set or clear the 3rdt of three possible ON/OFF activation schedules for Circuit-1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_2_EV_SCHED_1        ",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for Circuit-2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_2_EV_SCHED_2        ",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for Circuit-2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_2_EV_SCHED_3        ",
				Description: "Used to set or clear the 3rdt of three possible ON/OFF activation schedules for Circuit-2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_3_EV_SCHED_1        ",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for Circuit-3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time ",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_3_EV_SCHED_2        ",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for Circuit-3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_3_EV_SCHED_3        ",
				Description: "Used to set or clear the 3rdt of three possible ON/OFF activation schedules for Circuit-3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_4_EV_SCHED_1        ",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for Circuit-4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_4_EV_SCHED_2        ",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for Circuit-4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_4_EV_SCHED_3        ",
				Description: "Used to set or clear the 3rdt of three possible ON/OFF activation schedules for Circuit-4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_5_EV_SCHED_1        ",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for Circuit-5. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_5_EV_SCHED_2        ",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for Circuit-5. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CIR_5_EV_SCHED_3        ",
				Description: "Used to set or clear the 3rdt of three possible ON/OFF activation schedules for Circuit-5. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a circuit ON/OFF during a 24-hour period.  Each circuit can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "POOL_SPA_SUPPORT_MODE   ",
				Description: "Used to select whether the PE653 is controlling a POOL only, SPA only or both POOL and SPA",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "A POOL ONLY installation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "A SPA ONLY installation",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Both a POOL and SPA are part of the installation",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "VSP_SPD_SETTING_1   ",
				Description: "Used to set the variable speed pumps 1st activation speed (VSP Speed 1). Some installations will have a Variable Speed Pump installed instead of a one or two speed pump.  In these installations the PE653 allows the user to configure what the activation speeds for the four variable speed pump speed settings will be set to.  The range for these settings is a 400 to 3450 RPM (inclusive), in 10 RPM increments.  The high end of the speed range can be further restricted via the VSP maximum speed configuration setting (see configuration parameter 0x31 description for more details.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the desired 16-bit pump speed setting",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the desired 16-bit pump speed setting",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "VSP_SPD_SETTING_2   ",
				Description: "Used to set the variable speed pumps 2nd activation speed (VSP Speed 2). Some installations will have a Variable Speed Pump installed instead of a one or two speed pump.  In these installations the PE653 allows the user to configure what the activation speeds for the four variable speed pump speed settings will be set to.  The range for these settings is a 400 to 3450 RPM (inclusive), in 10 RPM increments.  The high end of the speed range can be further restricted via the VSP maximum speed configuration setting (see configuration parameter 0x31 description for more details.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the desired 16-bit pump speed setting",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the desired 16-bit pump speed setting",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "VSP_SPD_SETTING_3   ",
				Description: "Used to set the variable speed pumps 3rd activation speed (VSP Speed 3). Some installations will have a Variable Speed Pump installed instead of a one or two speed pump.  In these installations the PE653 allows the user to configure what the activation speeds for the four variable speed pump speed settings will be set to.  The range for these settings is a 400 to 3450 RPM (inclusive), in 10 RPM increments.  The high end of the speed range can be further restricted via the VSP maximum speed configuration setting (see configuration parameter 0x31 description for more details.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the desired 16-bit pump speed setting",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the desired 16-bit pump speed setting",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "VSP_SPD_SETTING_4   ",
				Description: "Used to set the variable speed pumps 4th activation speed (VSP Speed 4). Some installations will have a Variable Speed Pump installed instead of a one or two speed pump.  In these installations the PE653 allows the user to configure what the activation speeds for the four variable speed pump speed settings will be set to.  The range for these settings is a 400 to 3450 RPM (inclusive), in 10 RPM increments.  The high end of the speed range can be further restricted via the VSP maximum speed configuration setting (see configuration parameter 0x31 description for more details.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the desired 16-bit pump speed setting",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the desired 16-bit pump speed setting",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_1_EV_SCHED_1",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for VSP Speed 1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_1_EV_SCHED_2",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for VSP Speed 1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_1_EV_SCHED_3",
				Description: "Used to set or clear the 3rd of three possible ON/OFF activation schedules for VSP Speed 1. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_2_EV_SCHED_1",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for VSP Speed 2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_2_EV_SCHED_2",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for VSP Speed 2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_2_EV_SCHED_3",
				Description: "Used to set or clear the 3rd of three possible ON/OFF activation schedules for VSP Speed 2. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_3_EV_SCHED_1",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for VSP Speed 3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_3_EV_SCHED_2",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for VSP Speed 3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_3_EV_SCHED_3",
				Description: "Used to set or clear the 3rd of three possible ON/OFF activation schedules for VSP Speed 3. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_4_EV_SCHED_1",
				Description: "Used to set or clear the 1st of three possible ON/OFF activation schedules for VSP Speed 4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_4_EV_SCHED_2",
				Description: "Used to set or clear the 2nd of three possible ON/OFF activation schedules for VSP Speed 4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "VSP_SPD_4_EV_SCHED_3",
				Description: "Used to set or clear the 3rd of three possible ON/OFF activation schedules for VSP Speed 4. The PE653 allows the user to configure whether or not there will be scheduled ON and OFF times created to turn a variable speed pump speed ON/OFF during a 24-hour period.  Each variable speed pump speed can have up to 3 scheduled activation times applied to it. Each scheduled ON/OFF activation time MUST have a valid ON and OFF time assigned.  The ON and OFF times are 16-bit values and minutes from midnight (where midnight equals 0). /nNOTE: Only one pump speed can be active at a time./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule ON time",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the 16-bit schedule OFF time",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the 16-bit schedule OFF time",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "VSP_MAX_PUMP_SPEED  ",
				Description: "Used to set the MAXIMUM speed the 4 VSP speeds can be set to. The PE653 allows the user to configure what the MAXIMUM allowable activation speed can be for any of the four variable speed pump speed settings.  The Maximum pump speed setting can be set to any of the valid PUMP Speed settings, which is the range 400 to 3450 RPM (inclusive), in 10 RPM increments.  If a Maximum Pump speed setting is applied, any existing set pump speeds that exceed the Maximum value will automatically be set to the new Maximum Speed setting.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the high 8-bits of the desired 16-bit Maximum pump speed setting",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "This byte set to the low 8-bits of the desired 16-bit Maximum pump speed setting",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "FREEZE_CONTROL      ",
				Description: "Used to enable or disable freeze control support at the PE653",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "This byte sets the temperature threshold at which a freeze condition is present.  This setting is in degrees Fahrenheit and has a valid range of 34F to 44F inclusive, in 1 degree Fahrenheit increments.",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "This bit sets the PE653 circuit 1 to be activated upon detection of a freeze condition. Value 1 = Turn Circuit 1 ON, Value 0 = Turn Circuit 1 OFF",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "This bit sets the PE653 circuit 2 to be activated upon detection of a freeze condition. Value 1 = Turn Circuit 2 ON, Value 0 = Turn Circuit 2 OFF",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "This bit sets the PE653 circuit 3 to be activated upon detection of a freeze condition.Value 1 = Turn Circuit 3 ON, Value 0 = Turn Circuit 3 OFF",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "This bit sets the PE653 circuit 4 to be activated upon detection of a freeze condition. Value 1 = Turn Circuit 4 ON, Value 0 = Turn Circuit 4 OFF",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "This bit sets the PE653 circuit 5 to be activated upon detection of a freeze condition. Value 1 = Turn Circuit 5 ON, Value 0 = Turn Circuit 5 OFF",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "This byte sets the Variable Speed Pump Speed to be activated upon detection of a freeze condition.  This can be any one of the following values: NONE = 0, Variable Pump Speed 1 = 1, Variable Pump Speed 2 = 2, Variable Pump Speed 3 = 3, Variable Pump Speed 4 = 4",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "This byte shall always be set to zero.",
					},
				},
			},
		},
	}
}
func New000550450953() *Device{
	return &Device{
		Brand: "MultiWave",
		Product: "Five Channel Wireless Remote Controller",
		Description: "/n            /n          ",

		ManufacturerID: "0005",
		ProductType: "5045",
		ProductID: "0953",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0091,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0088,
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Operation Mode",
				Description: "The PE653 has several settings that modify the PE653 circuit behaviors and inter-dependencies.  These settings and modes are defined in detail in the User manual.  ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Fireman Timeout",
				Description: "Used to Disable, enable and set fireman cool down durations for preventing heater over heating.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Fireman Disabled (no heater installed)",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with no cool down period",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 1 minute",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 2 minute",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 3 minute",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 4 minute",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 5 minute",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 6 minute",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 7 minute",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 8 minute",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 9 minute",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 10 minute",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 11 minute",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 12 minute",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 13 minute",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 14 minute",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Fireman Enabled (heater installed) with cool down period = 15 minute",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Temperature Calibration Offsets ",
				Description: "Sets temperature offsets which will then be applied to the actual pool and/or spa temperature measured by the PE653.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "°F",
						Reserved: false,
						Description: "The ‘configurationValue1’ byte sets the amount of compensation you wish to apply to the actual water (pool/spa) reading taken by the PE653.  This value is an offset in degrees Fahrenheit and may have the value of -20F to &#43;20F (in 1 degree increments), inclusive.  Only whole number offsets are allowed.  A setting of zero results in NO offset being applied.",
					},
					ConfigValue{
						From: 8,
						To: 15,
						Unit: "°F",
						Reserved: false,
						Description: "The ‘configurationValue2’ byte sets the amount of compensation you wish to apply to the actual Air (freeze protection) reading taken by the PE653.  This value is an offset in degrees Fahrenheit and may have the value of -20F to &#43;20F (in 1 degree increments), inclusive.  Only whole number offsets are allowed.  A setting of zero results in NO offset being applied.",
					},
					ConfigValue{
						From: 16,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "The ‘configurationValue3’ byte shall always be set to zero./nThe ‘configurationValue4’ byte shall always be set to zero./n",
					},
				},
			},
		},
	}
}
func New000800010005() *Device{
	return &Device{
		Brand: "",
		Product: "HomeManager ST",
		Description: "/n            /n          ",

		ManufacturerID: "0008",
		ProductType: "0001",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0077,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New000800070020() *Device{
	return &Device{
		Brand: "Wayne-Dalton/Salt",
		Product: "Thermostat WDTC-20",
		Description: "/n            /n          ",

		ManufacturerID: "0008",
		ProductType: "0007",
		ProductID: "0020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0010454d3532() *Device{
	return &Device{
		Brand: "EM52",
		Product: "EM52 Z-Wave Energy Meter",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0010",
		ProductType: "454d",
		ProductID: "3532",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Instant Energy Autosend Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no autosend",
					},
					ConfigValue{
						From: 5,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 61,
				Name: "Accumulated Energy Autosend Interval ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no autosend",
					},
					ConfigValue{
						From: 5,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 61,
				Name: "Voltage Autosend Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no autosend",
					},
					ConfigValue{
						From: 5,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 61,
				Name: "Current Autosend Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no autosend",
					},
					ConfigValue{
						From: 5,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Instant Energy Change (watts) Autosend threshold",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Accumulated Energy Change Autosend threshold",
				Description: "In 10’s of watt- hours",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Instant Voltage Change Autosend threshold ",
				Description: "In Volts / 100",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Instant Current Change Autosend threshold ",
				Description: "In Amps / 100",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "CT Size",
				Description: "in Amps",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 50,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 75,
						To: 75,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 150,
						To: 150,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "CT_DOUBLED",
				Description: "doubles current and power /nreadings for use in 2-phase systems when using only one current transformer.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "doubled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Line Frequency",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 40,
						To: 70,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Reboot Counter",
				Description: "increments on every bootup",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New001045564c32() *Device{
	return &Device{
		Brand: "EVLCD1/EVLCDD2",
		Product: "EVLCD1",
		Description: "/n            /n          ",

		ManufacturerID: "0010",
		ProductType: "4556",
		ProductID: "4c32",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0093,
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button 1 Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene Control momentary ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Control toggle",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASICSET Toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "n/a",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Privacy",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "HouseKeeping",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Scene Control/BASICSET toggle",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button 2 Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene Control momentary",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Control toggle",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASICSET Toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Stat (Setpoint Up)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Privacy",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "HouseKeeping",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Scene Control/BASICSET toggle",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button 3 Type ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene Control momentary",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Control toggle",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASICSET Toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Stat (Temperature)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Privacy",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "HouseKeeping",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Scene Control/BASICSET toggle",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button 4 Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene Control momentary ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Control toggle",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASICSET Toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Stat (Setpoint Down)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Privacy",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "HouseKeeping ",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Scene Control/BASICSET toggle",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button 5 Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene Control momentary",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Control toggle",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASICSET Toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "n/a ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Privacy",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "HouseKeeping",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Scene Control/BASICSET toggle",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Language",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "English",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Spanish",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Chinese",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "German",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "French",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Italian",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Punjabi",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 17,
				Name: "Keypad Type",
				Description: "See appendix of the manual for Keypad types",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ENTRY2GANG",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "RESORTROOMWALL",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "RESORTROOM3GANGTABLE",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SLIVINGROOMLEFT",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "SLIVINGROOMRIGHT",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "SLIVINGROOM3GANG",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "SBEDROOM1GANG",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "SBEDROOM1GANGTABLE",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "SBEDROOM3GANGTABLE",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "DRAPECONTROL1GANG",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "VANITYBATH1GANG",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "SONOSTA1GANG",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "INATPENN1GANG",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "TYPE14",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "LOWELL1",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "LOWELL2",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "CUSTOM METADATA ",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "CES3DEMO",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Display Timeout",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Backlight ON  Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Backlight OFF  Level ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Button ON Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button OFF  Level ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 14,
				Name: "LCD Contrast",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Screen  Orientation",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Rotated 180 ",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Network Update ",
				Description: "When loaded, LCD will trigger a Network Update after timeout",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60,
						Unit: "seconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Red Backlight  ON Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Red Backlight  ON Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Green Backlight  ON Level ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RGB Demo  Mode ",
				Description: "Scrolls through RGB levels",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on",
					},
				},
			},
		},
	}
}
func New001050533231() *Device{
	return &Device{
		Brand: "PSCH21",
		Product: "PSCH21",
		Description: "/n            /n          ",

		ManufacturerID: "0010",
		ProductType: "5053",
		ProductID: "3231",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset Count",
				Description: "0-255",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SI Sensor Cal (S1)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 249,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SO Sensor Cal (S2)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 249,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay Polarity",
				Description: "If set, reverses all relay polarities.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal polarity",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reverse polarity",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Delta Autosend Threshold",
				Description: "how many degree change from the last AutoSend",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 5,
						Unit: "deg",
						Reserved: false,
						Description: "Set the amount of degrees.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Periodic Temperature Send Interval (min)",
				Description: "The parameter defines the time interval a temperature report is sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 120,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval in minutes.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "F/C Mode",
				Description: "The parameter defines which temperature scale is used by the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SI Temperature",
				Description: "Always reports in Fahrenheit",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SO Temperature",
				Description: "Always reports in Fahrenheit",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New001a00000000() *Device{
	return &Device{
		Brand: "Aspire RF",
		Product: "Handheld Controller",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0091,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001a44490000() *Device{
	return &Device{
		Brand: "Aspire RF",
		Product: "RF Smart Dimmer System Master",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "4449",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001a44490003() *Device{
	return &Device{
		Brand: "Aspire",
		Product: "Plug-In Dimming Module",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "4449",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001a52440000() *Device{
	return &Device{
		Brand: "Aspire RF",
		Product: "RF Split Control Duplex Receptacle",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "5244",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001a534c0000() *Device{
	return &Device{
		Brand: "Aspire RF",
		Product: "RF Single Pole Switch",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "534c",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001a574d0000() *Device{
	return &Device{
		Brand: "Aspire RF",
		Product: "RF 5-Scene Controller",
		Description: "/n            /n          ",

		ManufacturerID: "001a",
		ProductType: "574d",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001d01010316() *Device{
	return &Device{
		Brand: "Vizia rf &#43;TM",
		Product: "Scene Capable In-Wall Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "001d",
		ProductType: "0101",
		ProductID: "0316",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001d03010209() *Device{
	return &Device{
		Brand: "Leviton",
		Product: "Scene Capable Push On/Off",
		Description: "/n            /n          ",

		ManufacturerID: "001d",
		ProductType: "0301",
		ProductID: "0209",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001d04010209() *Device{
	return &Device{
		Brand: "Leviton",
		Product: "Scene Capable Push On/Off Dimmer",
		Description: "/n            /n          ",

		ManufacturerID: "001d",
		ProductType: "0401",
		ProductID: "0209",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001d07020261() *Device{
	return &Device{
		Brand: "Leviton",
		Product: "4-Zone Controller",
		Description: "/n            /n          ",

		ManufacturerID: "001d",
		ProductType: "0702",
		ProductID: "0261",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x007c,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New001e00020001() *Device{
	return &Device{
		Brand: "Express Control",
		Product: "EZMotion",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "001e",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Чувствительность",
				Description: "Задаёт чувствительность датчика движения. Значение 255 сделает датчик настолько чувствительным, что возмодны ложные срабатывания из-за шумов. Значение 0 сделает датчик слабо чувствительным к небольшим движениям.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Время ключения",
				Description: "Кличество минут после отправки включения BASIC_ON перед отправкой выключения BASIC_OFF. Значение 0 отключает отправку BASIC_OFF. При этом включенный EZMotion свет будет необходимо  выключиь другим устройством. Обратите внимание, что в этом режиме BASIC_ON будут отправлены при каждом обнаружении движения, что приведёт к быстрому истощению заряда батареек.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Минут",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Включить светодиот",
				Description: "Включать ли светодиод при обнаружении движения. Выключение светодиода позволит сэкономить заряд батареек.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включен",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Порог освещённости",
				Description: "Каждый раз при обнаружении движения измеряется уровень освещённости в комнате и в случае, если освещённость выше заданного порога, свет не будет включен. Данная функция делает детектор движения достаточно умным, чтобы включать свет лишь при недостаточном естественном освещении.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "% от максимальной яркости",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Оставаться пробуждённым",
				Description: "Выставление этого параметра на Да застваит EZMotion оставаться всё время пробуждённым. При постоянном питании от адаптера данная конфинурация позволит снимать показания датчиков в любое время. При включении выставляется бит Listening в пакете NodeInfo, а EZMotion будет полноценно участвовать в маршрутизации пакетов других Z-Wave устройств. Однако при питании от батареек заряда зватит не более, чем на 2 дня. Обратите внимание, что этот параметр НЕ сбрасывается при &#34;сбросе&#34; EZMotion (исключении из сети Z-Wave). Обычно данный параметр нужно выставить на заводское значение (выключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Значения включения",
				Description: "При обнаружении движения EZMotion отправит команду BASIC_SET с данным значением. Данный параметр позволяет пользователю задавать значение, посылаемое ассоциированному устройству при обнаружении движдения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New001e00020002() *Device{
	return &Device{
		Brand: "Express Control",
		Product: "EZMotion",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "001e",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x009b,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Чувствительность",
				Description: "Задаёт чувствительность датчика движения. Значение 255 сделает датчик настолько чувствительным, что возможны ложные срабатывания из-за шумов. Значение 0 сделает датчик слабо чувствительным к небольшим движениям.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Время выключения",
				Description: "Количество минут после отправки включения BASIC_ON перед отправкой выключения BASIC_OFF. Пока EZMotion не отправит устройству команду BASIC_OFF, он не будет включать устройство, при обнаружении движения, т.е. в течении заданного времени EZMotion не будет посылать команду включения BASIC_ON. Значение 0 отключает отправку BASIC_OFF. При этом включенный EZMotion свет будет необходимо выключить другим устройством. Обратите внимание, что в этом режиме BASIC_ON будут отправлены при каждом обнаружении движения, что приведёт к быстрому истощению заряда батареек.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Минут",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Включить светодиод",
				Description: "Включать ли светодиод при обнаружении движения. Выключение светодиода позволит сэкономить заряд батареек.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включен",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Порог освещённости",
				Description: "Каждый раз при обнаружении движения измеряется уровень освещённости в комнате и в случае, если освещённость выше заданного порога, свет не будет включен. Данная функция делает детектор движения достаточно умным, чтобы включать свет лишь при недостаточном естественном освещении.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "% от максимальной яркости",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Оставаться пробуждённым",
				Description: "Выставление этого параметра на Да застваит EZMotion оставаться всё время пробуждённым. При постоянном питании от адаптера данная конфигурация позволит снимать показания датчиков в любое время. При включении выставляется бит Listening в пакете NodeInfo, а EZMotion будет полноценно участвовать в маршрутизации пакетов других Z-Wave устройств. Однако при питании от батареек заряда хватит не более, чем на 2 дня. Обратите внимание, что этот параметр НЕ сбрасывается при &#34;сбросе&#34; EZMotion (исключении из сети Z-Wave). Обычно данный параметр нужно выставить на заводское значение (выключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Значение включения",
				Description: "При обнаружении движения EZMotion отправит команду BASIC_SET с данным значением. Данный параметр позволяет пользователю задавать значение, посылаемое ассоциированному устройству при обнаружении движения. Например для диммера можно задать значение 50, и тогда свет будет включаться на 50%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Корректировка температуры в десятых долях Фаренгейта. 10 = 1F",
				Description: "С помощью этого параметра можно скорректировать присылаемую датчиком температуру. Значение задается в десятых долях Фаренгейта. Показания температуры можно скорректировать до 12.7F в положительную и отрицательную сторону. Значение 1 прибавляет 0.1F к показанию температуры, значение -1 вычитает 0.1F из показания температуры, значение 123 добавит к показанию температуры датчика 12.3F. Например, EZMotion определил, что температура в комнате 77F, но более точный термометр показывает 79F, тогда чтобы скорректировать показания EZMotion на &#43;2F, нужно ввести значение: 20. Внимание! Этот параметр не сбрасывается после исключения EZMotion из сети.",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New001e00040001() *Device{
	return &Device{
		Brand: "Express Controls",
		Product: "EZMultiPli",
		Description: "/n            /n          ",

		ManufacturerID: "001e",
		ProductType: "0004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0033,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "OnTime",
				Description: "OnTime sets the number of minutes that the lights stay on when motion has not been detected./n/nRecommended values:/n5 min for hallways/n20 min for an office environment/n60 min for a library, office or other room where someone may be sitting still for a long time",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "min",
						Reserved: false,
						Description: "A value of 0 is a special mode where the lights are constantly sent a command to turn them on whenever motion is detected. EZMultiPli will NOT turn the lights off in this mode.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "min",
						Reserved: false,
						Description: "Number of minutes that the lights stay on when motion has not been detected.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "OnLevel",
				Description: "OnLevel is the value sent by the Z-Wave BASIC_SET command to all Group 2 nodes when motion is detected./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "%",
						Reserved: false,
						Description: "A value of 0 will turn the lights off (not recommended).",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "A value between 1 and 99 will set the dim level to between 1% and 99% (99% is full on).",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "A value of -1 will turn the light “on” which depends on the device but most will set the dim level to the last dim setting.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "LiteMin",
				Description: "A Luminance report is sent to the system controller every LiteMin minutes if the value has changed by more than 5% since the last reading./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "min",
						Reserved: false,
						Description: "A value between 1 and 127 sets time interval for luminance report.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "A value of zero turns this mode off. Luminance values can still be obtained at any time by the home-control application in this mode.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "TempMin",
				Description: "A Temperature report is sent to the system controller every TempMin minutes if the value has changed by more than 0.5F since the last reading./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "A value of zero turns this mode off. Temperature values can still be obtained at any time by the home-control application in this mode.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "min",
						Reserved: false,
						Description: "A value between 1 and 127 sets time interval for temperature report.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TempAdj",
				Description: "TempAdj is a twos-complement number that is used to adjust the temperature reading to make it more accurate. The value is in tenths of degree Fahrenheit. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 127,
						Unit: "F",
						Reserved: false,
						Description: "The value is in tenths of degree Fahrenheit. The temperature reading can be adjusted up to &#43;12.7F to -12.7F. A value of 1 will adjust the temperature reading by &#43;0.1F. A value of -1 will adjust the temperature by -0.1F. A value of 123 will adjust the temperature by &#43;12.3F.",
					},
				},
			},
		},
	}
}
func New002080071398() *Device{
	return &Device{
		Brand: "Monster",
		Product: "Revolution 200 Remote",
		Description: "/n            /n          ",

		ManufacturerID: "0020",
		ProductType: "8007",
		ProductID: "1398",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002d,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New003000010001() *Device{
	return &Device{
		Brand: "Comfort",
		Product: "Comfort 9000 with UCM/Zwave",
		Description: "/n            /n          ",

		ManufacturerID: "0030",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New003352503031() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "ABMHZ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0033",
		ProductType: "5250",
		ProductID: "3031",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Calibration",
				Description: "Starts the calibration sequence (1 = start)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Motor Direction",
				Description: "Defines the direction of the motor and starts calibration sequence",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reverse",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tilt Feature",
				Description: "Allows precision positioning for wood blinds",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
		},
	}
}
func New003352503032() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "DBMZ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0033",
		ProductType: "5250",
		ProductID: "3032",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Calibration",
				Description: "Starts the calibration sequence (1 = start)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Calibrate Command",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Motor Direction",
				Description: "Defines the direction of the motor and starts calibration sequence",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reverse",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tilt Feature",
				Description: "Allows precision positioning for wood blinds",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
		},
	}
}
func New003900000000() *Device{
	return &Device{
		Brand: "Honeywell",
		Product: "5800 Z Bridge",
		Description: "/n            /n          ",

		ManufacturerID: "0039",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New003900010001() *Device{
	return &Device{
		Brand: "Honeywell",
		Product: "Tuxedo Touch",
		Description: "/n            /n          ",

		ManufacturerID: "0039",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New003900110001() *Device{
	return &Device{
		Brand: "TH8320ZW1000",
		Product: "Z-Wave thermostat ",
		Description: "/n            /n          ",

		ManufacturerID: "0039",
		ProductType: "0011",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0045,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New003900110003() *Device{
	return &Device{
		Brand: "TH3220ZW1034",
		Product: "Z-Wave Thermostat 2012",
		Description: "/n            /n          ",

		ManufacturerID: "0039",
		ProductType: "0011",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0044,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00475a525400() *Device{
	return &Device{
		Brand: "Z-Wave to RTS Interface",
		Product: "ZRTSI",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0047",
		ProductType: "5a52",
		ProductID: "5400",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005600010001() *Device{
	return &Device{
		Brand: "Eminent",
		Product: "E-Centre 2",
		Description: "/n            /n          ",

		ManufacturerID: "0056",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900010001() *Device{
	return &Device{
		Brand: "Thermoplus ASR-RF Receiver",
		Product: "Thermoplus ASR-RF",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900010002() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "AS2-RF",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900010003() *Device{
	return &Device{
		Brand: "HRT4",
		Product: "HRT4-ZW ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enables Temperature Sensor",
				Description: "controls the use of  the temperature sensor on the device",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 255,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "Sensor will report temperature in this scale",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 255,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Delta T",
				Description: "defines the temperature steps of the heating control  value is 0.1 K",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "0.1 K",
						Reserved: false,
						Description: "Kelvin",
					},
				},
			},
		},
	}
}
func New005900010004() *Device{
	return &Device{
		Brand: "Secure",
		Product: "SRT 323",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0001",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Parameter Number 1",
				Description: "Disables/enables temperature sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Disables the temperature sensor",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enables the temperature sensor",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Parameter Number 2",
				Description: "Choose Celsius or Fahrenheit scale.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Parameter Number 3",
				Description: "Changes temperature setting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "°C",
						Reserved: false,
						Description: "Changes temperature in 0.1°C steps.",
					},
				},
			},
		},
	}
}
func New005900010005() *Device{
	return &Device{
		Brand: "Secure Controls",
		Product: "SRT-321 (Thermostat-HVAC)",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0001",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Temperature Sensor",
				Description: "The parameter enables/disables the temperature sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Disables the temperature sensor.",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enables temperature sensor.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "The parameter defines which scale is used by the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Delta Temperature",
				Description: "Value: 1 to 100 - Delta Temperature in 0.1˚C steps",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
		},
	}
}
func New005900020002() *Device{
	return &Device{
		Brand: "Secure",
		Product: "CentaurPlus C17-ZW",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900030001() *Device{
	return &Device{
		Brand: "HRT4 ",
		Product: "HRT4 ASR-ZW ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900030002() *Device{
	return &Device{
		Brand: "ASR2-RF",
		Product: "Thermoplus ASR2-RF",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900040001() *Device{
	return &Device{
		Brand: "Horstmann (Secure)",
		Product: "SCSC17",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Температурная единица",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "°C",
						Reserved: false,
						Description: "Градусы Цельсия",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "K",
						Reserved: false,
						Description: "Градусы Кельвины",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Нижняя граница температуры",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 30,
						Unit: " ̊C/ ̊F",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Верхняя граница температуры",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 30,
						Unit: " ̊C/ ̊F",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Шаг измерения температуры",
				Description: "С каким шагом измерять температуру, 1 = 0.1 °С.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "0.1  ̊C / ̊F",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New005900050001() *Device{
	return &Device{
		Brand: "S123R",
		Product: "E-Meter S123R",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0005",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008a,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0036,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New005900050005() *Device{
	return &Device{
		Brand: "Horstmann",
		Product: "Generation Meter Series P    ",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0005",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Delta instantaneous power",
				Description: "Define delta configuration for power report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 24000,
						Unit: "W",
						Reserved: false,
						Description: "Define delta parameter for reporting the instantaneous power.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Delta Energy",
				Description: "Define delta configuration for energy report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "Wh",
						Reserved: false,
						Description: "Define delta energy./n/nControllers may only allow configuring signed values. In order to set values in the range of 32768…65535, the value sent in the application should be equal to desired value minus 65536./nFor example, to set Delta Energy to 36000 Wh, you must set a value as 36000−65536=−29536.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Instantaneous power Reporting intervals",
				Description: "Defines time interval for power report. Default value is 10sec.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 18204,
						Unit: "sec",
						Reserved: false,
						Description: "Define time interval for power report.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Energy Reporting intervals",
				Description: "Defines time interval for energy report. Default value is 1h.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 18204,
						Unit: "sec",
						Reserved: false,
						Description: "Define time interval for energy report.",
					},
				},
			},
		},
	}
}
func New0059000d0001() *Device{
	return &Device{
		Brand: "Secure",
		Product: "SES301 Secure Temperature Sensor Z-Wave",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000d",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "Adjust the temperature scale",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Default",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Delta Temperature",
				Description: "Set degree steps",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "* 0,1 K",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "default is 10 (steps of 1,0C°) ",
					},
				},
			},
		},
	}
}
func New0059000d0002() *Device{
	return &Device{
		Brand: "Secure",
		Product: "Secure Environment Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000d",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature",
				Description: "Adjust delta temperature",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Configure delta temperature in 0.1 °C steps.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Temperature reporting intervals",
				Description: "Select temperature reporting intervals",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Set reporting intervals in 1 min steps.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity",
				Description: "Adjust delta humidity",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set delta humidity in 0.1 %Rh steps.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity reporting intervals",
				Description: "Select humidity reporting intervals",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Set delta humidity intervals in 1 min steps.",
					},
				},
			},
		},
	}
}
func New0059000d0003() *Device{
	return &Device{
		Brand: "Secure ",
		Product: "Secure Environment Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000d",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature",
				Description: "Adjust delta temperature ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable delta temperature",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "Configure delta temperature in 0.1 °C steps.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Temperature reporting intervals",
				Description: "Select temperature reporting intervals ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "mins",
						Reserved: false,
						Description: "Set reporting intervals in 1 min steps.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable temperature reporting intervals.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity ",
				Description: "Adjust delta humidity",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "%Rh",
						Reserved: false,
						Description: "Set delta humidity in 0.1 %Rh steps.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable delta humidity",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity reporting intervals",
				Description: "Select humidity reporting intervals",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "mins",
						Reserved: false,
						Description: "Set delta humidity intervals in 1 min steps.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable delta humidity intervals.",
					},
				},
			},
		},
	}
}
func New0059000e0001() *Device{
	return &Device{
		Brand: "Secure ",
		Product: "SSP 301",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000e",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delta based switch Status reporting",
				Description: "Sends a report if switch was used./nFunction is disabled by default.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = disable status reporting",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = enable status reporting",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Time interval based Switch Status Reporting",
				Description: "Sets time interval.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay &amp; LED configuration",
				Description: "Function is disabled by default.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay status after/npower cycle = off; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the/npower cycle; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay status after/npower cycle = off; LED status is ON for relay open and OFF for relay close.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the/npower cycle; LED status is ON for relay open and OFF for relay close.",
					},
				},
			},
		},
	}
}
func New0059000e0002() *Device{
	return &Device{
		Brand: "Secure",
		Product: "SSP 301",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000e",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Delta based switch Status reporting",
				Description: "Sends a report if switch was used.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch status report is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch status report is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Time interval based Switch Status Reporting",
				Description: "Sets time interval.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define time interval.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay &amp; LED configuration",
				Description: "Configure relay status after power cycle.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = off; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the power cycle; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = off; LED status is ON for relay open and OFF for relay close.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "	Retain last status over the power cycle; LED status is ON for relay open and OFF for relay close.",
					},
				},
			},
		},
	}
}
func New0059000f0001() *Device{
	return &Device{
		Brand: "SWM01",
		Product: "SWM01",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "000f",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Accumulated Register Value",
				Description: "shows the actual counter of the sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99999999,
						Unit: "",
						Reserved: false,
						Description: "m3/Hr",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Reading Reporting Interval",
				Description: "how often the meter reading is reported",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "",
						Reserved: false,
						Description: "minutes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Delta Configuration Reading",
				Description: "defines the minimal change until a new meter value is reported",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10000,
						Unit: "",
						Reserved: false,
						Description: "m3/Hr",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Serial Number Water Meter",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Serial Number Z-Wave Module",
				Description: "in Format YYMMxxxx with YYY as year, MM as month and xxx as id",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New005900100002() *Device{
	return &Device{
		Brand: "Secure",
		Product: "RF Countdown Timer",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0010",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0053,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Fail Save timer",
				Description: "Enable/Disable the Fail save timer",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivate the Fail Save timer",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "Set the Temperatur scale to Celsius or Fahrenheit.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Temperaturescale = Celsius",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Temperaturescale = Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature reporting intervals",
				Description: "Define the time interval for the temperature report that is sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Reportinginterval in sec.",
					},
					ConfigValue{
						From: 32768,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Reportinginterval in sec./nDefine time interval for temperature report. Values 128 to 255 are defined as -128 to -1.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Delta configuration temperature reporting",
				Description: "Set the delta-configuration of the temperature report in Celsius or Fahrenheit, e.g. 50°F = 0.1x500.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "C",
						Reserved: false,
						Description: "Set the delta-configuration of the temperature report in °C.",
					},
					ConfigValue{
						From: 1,
						To: 500,
						Unit: "F",
						Reserved: false,
						Description: "Set the delta-configuration of the temperature report in °F.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature Cutoff",
				Description: "Set the Cutoff in Celsius or Fahrenheit, e.g. 200°F = 0.01x2000",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "°C",
						Reserved: false,
						Description: "Temperatur Cutoff",
					},
					ConfigValue{
						From: 320,
						To: 2120,
						Unit: "°F",
						Reserved: false,
						Description: "Temperatur Cutoff",
					},
				},
			},
		},
	}
}
func New005900110001() *Device{
	return &Device{
		Brand: "Secure ",
		Product: "Secure Smart Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0011",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x003c,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x008a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Status",
				Description: "Sends a report if switch was used.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage",
				Description: "Sends a report if voltage parameter is exceeded. /nVoltage Delta 10V = 10/0.1 = 100",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 600,
						Unit: "",
						Reserved: false,
						Description: "Define delta parameter./nRange is from 0.1V to 60V./nResolution is 0.1.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Current",
				Description: "Sends a report if current parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1500,
						Unit: "",
						Reserved: false,
						Description: "Define current parameter./nRange is from 0.01A to 15A. /nResolution is 0.01.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Power Factor",
				Description: "Sends a report if power factor parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define parameter for Power Factor./nRange is from 0.1% to 100%./nResolution is 0.1.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Power",
				Description: "Sends a report if active power parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 4000,
						Unit: "W",
						Reserved: false,
						Description: "Define parameter for Active Power./n",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Energy",
				Description: "Sends a report if active energy parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "Wh",
						Reserved: false,
						Description: "Define parameter for Active Energy.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Apparent Energy",
				Description: "Sends a report if apparent energy parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "VAh",
						Reserved: false,
						Description: "Define parameter for Apparent Energy.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Switch Status",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage",
				Description: "Define time interval for metering./nControllers may only allow configuring signed/nvalues. In order to set values in the range 32768…/n65520, the value sent in the application shall be/nequal to desired value minus 65536.For example, to/nset time interval to 36000 seconds it may be needed/nto set a value 36000−65536=−29536.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Current",
				Description: "Define the time interval for metering./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Power Factor",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Power",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Energy",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Apparent Energy",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay and LED configuration",
				Description: "Configure the relay status after power cycle.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = Open; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the power cycle; LED status is ON for relay close and OFF for relay open.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = Open; LED status is ON for relay open and OFF for relay close.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the power cycle; LED status is ON for relay open and OFF for relay close.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Sleep current configuration",
				Description: "Define the parameter for sleep current.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter. Range is from 0A to 1A. Resolution is 0.001. Example: 0.5A = 0.5/.001 = 500",
					},
				},
			},
		},
	}
}
func New005900110002() *Device{
	return &Device{
		Brand: "Secure",
		Product: "Secure Smart Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0059",
		ProductType: "0011",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x003c,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x008a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Status",
				Description: "Sends a report if switch was used.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage",
				Description: "Sends a report if voltage parameter is exceeded. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 600,
						Unit: "",
						Reserved: false,
						Description: "Define delta parameter. Range is from 0.1V to 60V. Resolution is 0.1.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Current",
				Description: "Sends a report if current parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1500,
						Unit: "",
						Reserved: false,
						Description: "Define current parameter. Range is from 0.01A to 15A. Resolution is 0.01.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Power Factor",
				Description: "Sends a report if power factor parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define parameter for Power Factor. Range is from 0.1% to 100%. Resolution is 0.1.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Power",
				Description: "Sends a report if active power parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 4000,
						Unit: "W",
						Reserved: false,
						Description: "Define parameter for Active Power.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Energy",
				Description: "Sends a report if active energy parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "Wh",
						Reserved: false,
						Description: "Define parameter for Active Energy.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Apparent Energy",
				Description: "Sends a report if apparent energy parameter is exceeded.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "VAh",
						Reserved: false,
						Description: "Define parameter for Apparent Energy.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Switch Status",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage",
				Description: "Define the time interval for metering./nControllers may only allow configuring signed/nvalues. In order to set values in the range 32768…/n65520, the value sent in the application shall be/nequal to desired value minus 65536.For example, to/nset time interval to 36000 seconds it may be needed/nto set a value 36000−65536=−29536.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Current",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Power Factor",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Power",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Active Energy",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Apparent Energy",
				Description: "Define the time interval for metering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled./n",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Set a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay and LED configuration",
				Description: "Configure the relay status after power cycle.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = Open; LED status is ON for relay close and OFF for relay open./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the power cycle; LED status is ON for relay close and OFF for relay open./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay status after power cycle = Open; LED status is ON for relay open and OFF for relay close./n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Retain last status over the power cycle; LED status is ON for relay open and OFF for relay close./n",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Sleep current configuration",
				Description: "Define the parameter for sleep current.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled./n",
					},
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter. Range is from 0A to 1A. Resolution is 0.001. Example: 0.5A = 0.5/.001 = 500/n",
					},
				},
			},
		},
	}
}
func New006000010001() *Device{
	return &Device{
		Brand: "MK",
		Product: "Wave PIR Movement Sensor(EU) - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configuring the Phase Level of ON Command",
				Description: "Can be used to adjust that the phase level of ON command is transmitted.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device Off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Device On",
					},
					ConfigValue{
						From: 100,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Device On to the last phase (before the device was turned off)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enabling/Disabling Power Saving Function",
				Description: "When no movement has been detected for 10 seconds, the SP103 will enter the power saving mode. It can be disabled or enabled power saving function by setting this parameter. Note: As long as the batteries have been refitted, the Detector will enable the power saving function automatically.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power saving enabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Power saving disabled",
					},
				},
			},
		},
	}
}
func New006000010002() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave PIR Sensor(ANZ) - 300 Series",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006000020001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "SM103",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Level sent on open event",
				Description: "Defines which level to send when sensor triggers",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Level",
					},
					ConfigValue{
						From: 99,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "100%",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "On",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OFF Delay",
				Description: "Defines the time to wait before the sensor will send OFF command",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Immediately",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "sec",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
		},
	}
}
func New006000030001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave Dimmer/Lamp module Plug  – 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006000030002() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "In Wall Dimmer Module -500 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Basic Set Command Value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Time Delay",
				Description: "The parameter defines the time delay to report to Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 25,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time delay.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Last Status",
				Description: "The parameter defines if the last status is remembered or not.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "do not remember",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "remember",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch 1 Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " Single Pole Double Throw",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Toggle switch",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Mode",
				Description: "Parameter defines if output is set to dimming or switch only. Note: When set to 1, the operation mode is not changed; only the light would be turned on with/n100% brightness immediately. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "diming",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
				},
			},
		},
	}
}
func New006000030003() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave Dimmer Plug -500 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Basic Set Command value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Delay Time",
				Description: "The delaying time to report to Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 25,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time delay.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Last Status",
				Description: "The parameter defines if the last status is remembered or not.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Last status is not remembered.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Last status is remembered.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output mode setting",
				Description: "The parameter defines if the output mode is set as dimming mode or ON/OFF mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Dimming",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON/OFF",
					},
				},
			},
		},
	}
}
func New006000040001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "AN145",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006000040002() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "AN158",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0004",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "True Period",
				Description: "This is the time the switching status needs to remain unchanged after a change to cause the device to send out a status message",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 120,
						Unit: "* 100 ms",
						Reserved: false,
						Description: "10 * 100 ms  = 1 sec",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Send Out Basic Command",
				Description: "Enable or Disable the status message function when the local button press changes the switching state",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 3,
				Name: "Meter Report Period",
				Description: "The device will report its meter value within the interval set. Set to 0 will disable the autoreporting function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 3240,
						Unit: "* 10 s",
						Reserved: false,
						Description: "Interval = Wert * 10 sec",
					},
				},
			},
		},
	}
}
func New006000040006() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave Meter Mini Plug -500 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0004",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Basic Set Command value",
				Description: "Set Basic Set Command value",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Delay Time",
				Description: "Set the delaying time to report/nto Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 25,
						Unit: "sec",
						Reserved: false,
						Description: "Define the delay time.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Last Status",
				Description: "Set whether to remember the/nlast status.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The last status is not remembered.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The last status is remembered.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Wattage Auto Report",
				Description: "Set the interval for wattage auto/nreport.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The automatic report is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Energy Auto report",
				Description: "Set the interval for kW*h auto/nreport.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The automatic report is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Value of Wattage surpassed",
				Description: "Auto is sent report, when load/nsurpasses the set value of/nwattage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2500,
						Unit: "W",
						Reserved: false,
						Description: "Define the treshold of wattage.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Change of Wattage surpassed",
				Description: "Auto report is sent, when the change of/nwattage surpasses the set/npercentage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of change in percent.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
		},
	}
}
func New006000040007() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave On/Off  Mini Plug -500 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0004",
		ProductID: "0007",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Basic Set Command value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Delay Time",
				Description: "The parameter defines the delaying time to report to Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 25,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time delay.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Last Status",
				Description: "The parameter defines, if the last status is remembered or not.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The last status is not remembered.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The last status is remembered.",
					},
				},
			},
		},
	}
}
func New006000040008() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "In Wall On/Off Module -500 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0004",
		ProductID: "0008",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006000060001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Temperature/Humidity Sensor 2.0 ST814",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0006",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Уровень диммирования, отправляемый устройствам из группы 2",
				Description: "Отправлять устройствам из группы 2 заданный уровень диммирования. Так можно при срабатывании датчика влажности или температуры открытия включать свет на 50% или открывать жалюзи на 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Уровень диммирования",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Температура при которой отправляется команда Включить",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 236,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "Температура включения (-20 ... -1)",
					},
					ConfigValue{
						From: 0,
						To: 50,
						Unit: "°C",
						Reserved: false,
						Description: "Температура включения (0 ... 50)",
					},
					ConfigValue{
						From: 99,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Температура при которой отправляется команда Выключить",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 236,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "Температура выключения (-20 ... -1)",
					},
					ConfigValue{
						From: 0,
						To: 50,
						Unit: "°C",
						Reserved: false,
						Description: "Температура выключения (0 ... 50)",
					},
					ConfigValue{
						From: 99,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Влажности при которой отправляется команда Включить",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 20,
						To: 90,
						Unit: "%",
						Reserved: false,
						Description: "Влажность включения",
					},
					ConfigValue{
						From: 99,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Влажности при которой отправляется команда Выключить",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 20,
						To: 90,
						Unit: "%",
						Reserved: false,
						Description: "Влажность выключения",
					},
					ConfigValue{
						From: 99,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Время автоматического отчета о температуре и влажности",
				Description: "Интервал времени через который будет отправляться автоматический отчет о температуре и влажности",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1439,
						Unit: "min",
						Reserved: false,
						Description: "Время отчета",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Температура при изменении на которую отправляется отчет",
				Description: "Если задать 1°C, то при изменении температуры на 1°C будет отправлен отчет контроллеру с текущей температурой",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 70,
						Unit: "deg",
						Reserved: false,
						Description: "Температура отчета",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Влажность при изменении на которую отправляется отчет",
				Description: "Если задать 1%, то при изменении влажности на 1°C будет отправлен отчет контроллеру с текущей влажностью",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 70,
						Unit: "%",
						Reserved: false,
						Description: "Влажность отчета",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
				},
			},
		},
	}
}
func New006000070001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave Illumination Sensor(US)-300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0007",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Send Basic Set level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "Dimmer level",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Lux trigger on value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 30,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Lux",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Lux Trigger off value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 30,
						To: 1000,
						Unit: "Lux",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Lux Trigger off Time value",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 480,
						Unit: "minutes",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto Report Time Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1439,
						Unit: "minutes",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Auto Report",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto Report Lux Trigger Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 30,
						To: 1000,
						Unit: "Lux",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Auto Report",
					},
				},
			},
		},
	}
}
func New0060000b0001() *Device{
	return &Device{
		Brand: "Everspring Flood Detector",
		Product: "Z-Wave Flood Sensor (US) - 300 Series",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "000b",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Basic Level Set",
				Description: "The value sent with Basic commands in case of detected flood",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "on for binary switch, dim level for dimmers and motor control",
					},
				},
			},
		},
	}
}
func New0060000c0001() *Device{
	return &Device{
		Brand: "EVERSPRING",
		Product: "Z-WAVE INDOOR SIREN (ANZ) - 300 SERIES",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "000c",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0060000d0001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "Z-Wave Smoke Sensor (ANZ) - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "000d",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x009c,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0060000e0001() *Device{
	return &Device{
		Brand: "Flex-Control Z-Wave Products",
		Product: "Z-Wave Gateway (EU) w/ Casiva Server Solution",
		Description: "/n            /n          ",

		ManufacturerID: "0060",
		ProductType: "000e",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006000100001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "In-wall remote module HAC01",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0010",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Basic Set Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "On (binary switch device);/ndim level (multilevel switch device)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Amount of delay",
				Description: "determine the delay time setting to send the Basic Set Off command when manual switch opens",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "immediately Off",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "1s",
						Reserved: false,
						Description: "delay 1 ~ 127 second to Off",
					},
				},
			},
		},
	}
}
func New006001010001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "SP103",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0101",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Phase Level for ON Command",
				Description: "Defines which command to send when sensor triggers",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Set Off",
					},
					ConfigValue{
						From: 1,
						To: 96,
						Unit: "",
						Reserved: false,
						Description: "Set On",
					},
					ConfigValue{
						From: 97,
						To: 239,
						Unit: "",
						Reserved: false,
						Description: "Set On to the last Dimmer phase",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Unterdrücke Schlaf-Funktion",
				Description: "Enables/Disables sleeping for debug purposes",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
		},
	}
}
func New006001030001() *Device{
	return &Device{
		Brand: "Everspring",
		Product: "AN142",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0103",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006002020001() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "ST812 old",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0060",
		ProductType: "0202",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006344503030() *Device{
	return &Device{
		Brand: "GE",
		Product: "Lamp Module",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "4450",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Load Sensing",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Load sensing is disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable load sensing function",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments when receiving a Z-Wave Dim Command/ number of steps",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments when receiving a Z-Wave Dim Command/ timing of the steps",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Manual Control Dimming/ number of steps or levels",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Manual Control Dimming/ timing of steps",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments when receiving an All-On or All-Off Command/ number of steps or levels",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments when receiving an All-On or All-Off Command/ timing of steps",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore start level when receiving dim commands",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Setting parameter 5 to a value of 0 will cause the/n45602 to dim or brighten from the start level embedded/nin the command.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore start level.",
					},
				},
			},
		},
	}
}
func New006344503130() *Device{
	return &Device{
		Brand: "GE",
		Product: "Energy Monitoring Lamp Module",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "4450",
		ProductID: "3130",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Number of steps or levels when receiving a dim command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Timing of steps when receiving a Dim Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Number of steps or levels when controlling manually",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Timing of steps when controlling manually",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Number of steps or levels when receiving All-On/All-Off Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Timing of steps when receiving All-On/All-Off Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10miliseconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore Start Level when receiving dim commands",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Dim or brighten from the Start Level embedded in the command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore Start Level when receiving dim command",
					},
				},
			},
		},
	}
}
func New006344573230() *Device{
	return &Device{
		Brand: "GE",
		Product: "In-Wall Dimmer",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "4457",
		ProductID: "3230",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED is set to turn ON when the connected light is turned OFF. This allows the LED to indicate the switch’s location in a dark room.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To make the LED turn ON when the light is turned ON, change parameter 3’s value to “1”",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal rocker settings.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "If the switch is accidentally installed upside down with “On” at the bottom and “Off” at the top, the default On/Off rocker settings can be reversed by changing parameter 4’s value to “1”.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments when receiving a Z-Wave Dim Command/ Number of steps or levels",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments when receiving a Z-Wave Dim Command/ Timing of steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Manual Control Dimming/ Number of steps or levels",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Manual Control Dimming/ Timing of the steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments when receiving an All-On or All-Off Command/ Number of steps or levels",
				Description: " 	Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments when receiving an All-On or All-Off Command/ Timing of steps",
				Description: " 	Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore start level when receiving dim commands",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Dim or brighten from the start level embedded in the command.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore the start level.",
					},
				},
			},
		},
	}
}
func New006350443131() *Device{
	return &Device{
		Brand: "Jasco",
		Product: "Plug-in Dual Smart Dimmer With USB Charging",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5044",
		ProductID: "3131",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "All On/All Off ",
				Description: "Depending upon your primary controller, the dimmer switch can be set to respond to ALL ON and ALL OFF commands in up to four different ways. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "It will respond to ALL ON and the ALL OFF command.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "It will not respond to ALL ON or ALL OFF commands. ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "It will respond to the ALL OFF command but will not respond to the ALL ON command. ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "It will respond to the ALL ON command but will not respond to the ALL OFF command. ",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments Endpoint 1 Number of Steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences. The timing of the steps can be adjusted in 10 millisecond intervals. As an example, the default setting for parameter 8 is “3”. This means that the lighting level will change every 30 milliseconds when the Dim Command is received. A value of 255 would mean that the level would change every 2.55 seconds. Combined, the two parameters allow dim rate adjustments from 10 milliseconds to 4.2 minutes to go from maximum-to-minimum or minimum-to-maximum brightness levels.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the number of steps.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments Endpoint 1 Timing of Steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences. The timing of the steps can be adjusted in 10 millisecond intervals. As an example, the default setting for parameter 8 is “3”. This means that the lighting level will change every 30 milliseconds when the Dim Command is received. A value of 255 would mean that the level would change every 2.55 seconds. Combined, the two parameters allow dim rate adjustments from 10 milliseconds to 4.2 minutes to go from maximum-to-minimum or minimum-to-maximum brightness levels.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 10ms",
						Reserved: false,
						Description: "Define the timing of the steps.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments Endpoint 2 Number of Steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences. The timing of the steps can be adjusted in 10 millisecond intervals. As an example, the default setting for parameter 8 is “3”. This means that the lighting level will change every 30 milliseconds when the Dim Command is received. A value of 255 would mean that the level would change every 2.55 seconds. Combined, the two parameters allow dim rate adjustments from 10 milliseconds to 4.2 minutes to go from maximum-to-minimum or minimum-to-maximum brightness levels.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the number of steps.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments Endpoint 2 Timing of Steps",
				Description: "Both the number of steps (or levels) that the dimmer will change and the timing of the steps can be modified to suit personal preferences. The timing of the steps can be adjusted in 10 millisecond intervals. As an example, the default setting for parameter 8 is “3”. This means that the lighting level will change every 30 milliseconds when the Dim Command is received. A value of 255 would mean that the level would change every 2.55 seconds. Combined, the two parameters allow dim rate adjustments from 10 milliseconds to 4.2 minutes to go from maximum-to-minimum or minimum-to-maximum brightness levels.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 10ms",
						Reserved: false,
						Description: "Define the timing of the steps.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Rate Adjustments ALL Command Speed",
				Description: "When Receiving an All-On or All-Off Command",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Adjust the all command speed.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dim Rate Adjustments ALL Command Timer",
				Description: "When Receiving an All-On or All-Off Command",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Adjust the all command timer.",
					},
				},
			},
		},
	}
}
func New006352503030() *Device{
	return &Device{
		Brand: "GE",
		Product: "Fluorescent Light &amp; Appliance Module",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5250",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006352503031() *Device{
	return &Device{
		Brand: "GE",
		Product: "Energy Monitoring Fluorescent Light &amp; Appliance Module",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5250",
		ProductID: "3031",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006352503130() *Device{
	return &Device{
		Brand: "GE",
		Product: "Outdoor Module",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5250",
		ProductID: "3130",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006352523530() *Device{
	return &Device{
		Brand: "GE",
		Product: "Duplex Receptacle 3.0b",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5252",
		ProductID: "3530",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED on the 45605 is/nset to turn ON when the connected outlet is turned OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED turns ON when the light is turned ON",
					},
				},
			},
		},
	}
}
func New006352573533() *Device{
	return &Device{
		Brand: "GE",
		Product: "In-Wall Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0063",
		ProductType: "5257",
		ProductID: "3533",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED is set to turn ON when the connected light is turned OFF. ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED is set to ON when the connected light is turned ON.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Default rocker settings.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Reverses the default On/Off rocker settings, if the switch is accidentally installed upside down with On at the bottom and Off at the top. ",
					},
				},
			},
		},
	}
}
func New006400010000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Insert dimmer",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "0001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006410000002() *Device{
	return &Device{
		Brand: "Duwi",
		Product: "Flush-Mountable Switch for two-wire electric system 3.0",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "1000",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Игнорировать начальный уровень",
				Description: "Определяет игнорировать ли начальный уровень димминга в коммандах StartLevelChange (начать изменение яркости) даже если он указан или нет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Время диммирования",
				Description: "Время димирования при нажатии на кнопки и при получении команды Set (если она не содержит времени включения). Если не 0, то диммирование будет плавным, что сбережёт лампочку дольше.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время долгого диммирования",
				Description: "Время димирования при удержании кнопок и при получении команды StartLevelChange (начать изменение яркости; если она не содержит времени включения).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Устанавливать максимальный уровень яркости при включении",
				Description: "Определяет устанавливать ли максимальную яркость при получении команды Включить. По умолчанию по команде Включить диммер восстанавливает последний уровень яркости. Настройка этого параметра позволяет устанавливать максимальную яркость по второй команде Включить (если уже включен) или всегда включать диммер на максимальную яркость",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Если уже включен",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Всегда",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время диммирования Баю-бай",
				Description: "Время димирования при двойном нажатии на кнопку выключения для функции Баю-бай. Данная функция работает только если нагрузка управляется одинарным нажатием или удержанием кнопок. Если включено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "в минутах",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Конечный уровень диммирования функции Баю-бай",
				Description: "Конечный уровень, до которого диммировать функции Баю-бай. Используйте 0 для полного выключения света.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включать/выключать нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ограничивать минимальный уровень яркости",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Ограничивать максимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Работать как реле: только выключен или на полную",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включаться на заданном уровне яркости",
				Description: "Эта функция работает, только если в параметре &#34;Устанавливать максимальный уровень яркости при включении&#34; выбрано &#34;Нет&#34; или &#34;Если уже включен&#34;, иначе этот параметр игнорируется и свет всегда будет включаться на 100%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Использовать предыдущий уровень яркости",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Задать уровень",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Измерение электропотребления",
				Description: "Для подсчета потребляемой электроэнергии нужно задать мощность потребляемой нагрузкой. Например, если диммер управляет одной лампочкой 60 Вт, то задайте 60, если в люстре 5 лампочек по 60 Вт, то задайте 5*60=300. Значение потребляемой электроэнергии обновляется каждые 10 минут.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 300,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза до импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза после импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Ширина импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 20,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Длинный импульс",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Короткий импульс",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы: Выключатель или Диммер",
				Description: "Позволяет настроить режим работы: выключатель или диммер. В режиме выключатьтель (по умолчанию) при нажатии на кнопку вверх свет включается на максимум мгновенно, подходит для работы с энергосберегающими лампками и LED. В режиме диммер, свет можно плавно регулировать, подходит для ламп накаливания и диимируемых трансформаторов. ЭТОТ ПАРАМЕТР СОХРАНЯЕТСЯ ПОСЛЕ ИСКЛЮЧЕНИЯ. ПОСЛЕ ИЗМЕНЕНИЯ ПАРАМЕТРА НУЖНО ОБЕСТОЧИТЬ УСТРОЙСТВО И ЗАПРОСИТЬ NIF ПАКЕТ.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Диммер",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Выключатель",
					},
				},
			},
		},
	}
}
func New006410010000() *Device{
	return &Device{
		Brand: "Duewi Z-Wave",
		Product: "Schuko Plug Dimmer",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "1001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006420010000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Insert switch",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "2001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006430010000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Schuko Plug Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "3001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006440010000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Insert blind control",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "4001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006450010000() *Device{
	return &Device{
		Brand: "Düwi Z-Wave",
		Product: "Remote Control",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "5001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006450020000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Wall controller",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "5002",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006450030000() *Device{
	return &Device{
		Brand: "Düwi",
		Product: "Switching Centre",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0064",
		ProductType: "5003",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006800000000() *Device{
	return &Device{
		Brand: "Good Way",
		Product: "SerialAPI PC Controller ",
		Description: "/n            /n          ",

		ManufacturerID: "0068",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006800000004() *Device{
	return &Device{
		Brand: "Good Way",
		Product: "Z-Wave Power Monitor Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0068",
		ProductType: "0000",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0032,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006800000005() *Device{
	return &Device{
		Brand: "Good Way",
		Product: "Z-Wave Power Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0068",
		ProductType: "0000",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006800000006() *Device{
	return &Device{
		Brand: "Good Way",
		Product: "Z-Wave Power Monitor",
		Description: "/n            /n          ",

		ManufacturerID: "0068",
		ProductType: "0000",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New006b00000000() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "Remote Control",
		Description: "/n            /n            /n          ",

		ManufacturerID: "006b",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00710002035d() *Device{
	return &Device{
		Brand: "",
		Product: "E861C",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0071",
		ProductType: "0002",
		ProductID: "035d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delta Percentage",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 56,
						Unit: "%",
						Reserved: false,
						Description: "Delta",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Celsius/Fahrenheit",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 64,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Send setpoint when wakeup",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "send",
					},
					ConfigValue{
						From: 64,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "do not send",
					},
				},
			},
		},
	}
}
func New00710004035d() *Device{
	return &Device{
		Brand: "LS Control",
		Product: "E861H",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0071",
		ProductType: "0004",
		ProductID: "035d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delta Percentage",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 10,
						Unit: "%",
						Reserved: false,
						Description: "Delta",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Send setpoint when wakeup",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "send",
					},
					ConfigValue{
						From: 64,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "do not send",
					},
				},
			},
		},
	}
}
func New00710005035d() *Device{
	return &Device{
		Brand: "LS Control",
		Product: "E861P",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0071",
		ProductType: "0005",
		ProductID: "035d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a00000000() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "506923",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x007b,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a00010002() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "5051xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель/диммер/управление жалюзи",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель с одной клавишей",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Функция звонка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Управление жалюзи с одной кнопки",
				Description: "Направление движения меняется при каждом нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Опускать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поднимать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a00010004() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "5052xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0001",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель/диммер/управление жалюзи",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель с одной клавишей",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Функция звонка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Управление жалюзи с одной кнопки",
				Description: "Направление движения меняется при каждом нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Опускать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поднимать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a00020001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "5082xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель с одной клавишей",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Функция звонка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Управление жалюзи с одной кнопки",
				Description: "Направление движения меняется при каждом нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Опускать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поднимать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a00020004() *Device{
	return &Device{
		Brand: "Schneider",
		Product: "Remote Control",
		Description: "/n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0002",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone1",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 1",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 1",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 2",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 2",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 3",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 3",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 3",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 4",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 4",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 4",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 5",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 5",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 5",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 6",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 6",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 6",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 6",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 7",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 7",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 7",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 7",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 8",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 8",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 8",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 8",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 9",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 9",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 9",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 9",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 10",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 10",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 10",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 10",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 11",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 11",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 11",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 11",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Group/Scene representation of zone 12",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No group or scene in zone 12",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Group is assigned in zone 12",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Scene is assigned in zone 12",
					},
				},
			},
		},
	}
}
func New007a00030004() *Device{
	return &Device{
		Brand: "Merten",
		Product: "506004",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "0003",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0060,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель/диммер/управление жалюзи",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включатель с одной клавишей",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Функция звонка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Управление жалюзи с одной кнопки",
				Description: "Направление движения меняется при каждом нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Опускать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поднимать жалюзи пока кнопка удерживается",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a40020001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "5044xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "4002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a40030001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "5046xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "4003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a40030002() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "507900",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "4003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0029,
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 196,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a40040001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "50x5xx",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "4004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
			},
			&CommandClass{
				ID: 0x0050,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x009e,
				Version: "0",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 176,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 177,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 178,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 179,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 180,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a80010001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "508519",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a80018002() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "507501",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8001",
		ProductID: "8002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 176,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 177,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 183,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a80018003() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "507601",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8001",
		ProductID: "8003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 176,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 177,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 183,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a80018004() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "507502",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8001",
		ProductID: "8004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 176,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 177,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 183,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007a80020001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "508619",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0029,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New007a80030001() *Device{
	return &Device{
		Brand: "CONNECT",
		Product: "507801",
		Description: "/n            /n            /n          ",

		ManufacturerID: "007a",
		ProductType: "8003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0050,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x009e,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 177,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 178,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 179,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 180,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New007f00010001() *Device{
	return &Device{
		Brand: "Harmony",
		Product: "Harmony Home Hub Extender",
		Description: "/n            /n          ",

		ManufacturerID: "007f",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x004d,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0034,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0054,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008000040001() *Device{
	return &Device{
		Brand: "DUCO",
		Product: "Z-Wave RH Sensor ",
		Description: "/n            /n          ",

		ManufacturerID: "0080",
		ProductType: "0004",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x007a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Measure Level",
				Description: "How often the value is measured(example: if value=60, the sensor value is measured every/n60 seconds)",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "CO² set point",
				Description: "Set point CO2: Used in ‘automatic mode’. (button 4) if the device is a CO2 sensor./nThe CO2 level in a room is a good indication of the air quality in this room./nWhen the CO2 level is above this set point, the room needs more ventilation./nConsequently, the CO2 sensor will open the associated grating unit.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 70,
				Name: "Humidity set point",
				Description: "Setpoint Humidity: Used in ‘automatic mode’ (button 4) if the device is a RH sensor. RH: Relative/nHumidity. When the RH in the room is above this set point, the RH sensor will ask the IQ unit for/nmore ventilation.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Button 1",
				Description: "The value when button1 is pressed. Values above 0x63 will be capped to 0x63 (maximum) used in/nassociation group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Button 2",
				Description: "The value when button2 is pressed. Values above 0x63 will be capped to 0x63 (maximum) used in/nassociation group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Button 3",
				Description: "The value when button3 is pressed. Values above 0x63 will be capped to 0x63 (maximum) used in/nassociation group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Rooster Min Open",
				Description: "The minimum value that can be send by the CO2 sensor when it is in automatic mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature high setpoint",
				Description: "Temperature highset point: used in association group 2 or 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature low setpoint",
				Description: "Temperature low set point: used in association group 2 or 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 2,
				Name: "Temperature delta setpoint",
				Description: "Temperature delta set point: used in association group 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "RH high setpoint",
				Description: "RH high set point: used in association group 5 or 6",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "RH low setpoint",
				Description: "RH low set point: used in group5 or 6",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "RH delta setpoint",
				Description: "RH delta set point: used in group7",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "CO2 high setpoint",
				Description: "CO2 high set point: not available in RH senor",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "CO2 lowsetpoint",
				Description: "CO2 low set point: not available in RH senor",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 500,
				Name: "CO2deltasetpoint",
				Description: "CO2 delta set point: not available in RH senor",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New008100140001() *Device{
	return &Device{
		Brand: "Siegenia-Aubi",
		Product: "Aeropac wave",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0081",
		ProductType: "0014",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Таймер рабочего времени",
				Description: "Установка времени работы",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4080218932,
						Unit: "sec",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Продолжительность работы",
				Description: "Устанавливает длительность проветривания",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1080,
						Unit: "sec",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Таймер",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32769,
						Unit: "sec",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Настройки устройств",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Включить таймер",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Повторять включение по таймеру каждые 24 часа",
					},
				},
			},
		},
	}
}
func New008100a00001() *Device{
	return &Device{
		Brand: "SensoAir",
		Product: "Siegenia-Aubi",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0081",
		ProductType: "00a0",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x009e,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 141,
				Name: "Конфигурация",
				Description: "Содержит битовые настройки устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отправлять отчёт при достижении уровня CO2 значений 600, 800, 100, 1500, 2000 or 2500 промилле.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить отправку периодических отчётов без запросов.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Отправлять BASIC Set команду при достижении заданных значений CO2",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить широковещательные отчёты",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Включить светодиоды",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Интервал отправки отчётов без запроса",
				Description: "Интервал времени между отправками отчётов без запроса (если разрешено параметром 1)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
		},
	}
}
func New008400210109() *Device{
	return &Device{
		Brand: "Fortrezz",
		Product: "WWA-02 Wireless Water &amp; Temperature Alarm - EU",
		Description: "/n            /n          ",

		ManufacturerID: "0084",
		ProductType: "0021",
		ProductID: "0109",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Low Temperature Trigger Point",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 246,
						To: 127,
						Unit: "degrees",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 70,
				Name: "High Temperature Trigger Point",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 70,
						Unit: "degrees",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New00840021010a() *Device{
	return &Device{
		Brand: "Fortrezz",
		Product: "WWA-2",
		Description: "/n            /n          ",

		ManufacturerID: "0084",
		ProductType: "0021",
		ProductID: "010a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00840023010a() *Device{
	return &Device{
		Brand: "Fortrezz",
		Product: "WWA-02 Wireless Water &amp; Temperature Alarm - US",
		Description: "/n            /n          ",

		ManufacturerID: "0084",
		ProductType: "0023",
		ProductID: "010a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Low Temperature Trigger Point",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 246,
						To: 127,
						Unit: "degrees",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 70,
				Name: "High Temperature Trigger Point",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 70,
						Unit: "degrees",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New008403130108() *Device{
	return &Device{
		Brand: "FortrezZ",
		Product: "Siren &amp; Strobe Alarm",
		Description: "/n            /n          ",

		ManufacturerID: "0084",
		ProductType: "0313",
		ProductID: "0108",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delay before accept of Basic Set Off",
				Description: "Delay, from the time the siren-strobe turns on, before the Basic Set Off command is accepted. This could be used, for example, to avoid the situation where an associated window/door sensor turns the SSA1 alarm on and then immediately off when the window/door is/nopened and then quickly closed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "seconds",
						Reserved: false,
						Description: "Interpreted as unsigned integer for negative values sent in set command.",
					},
				},
			},
		},
	}
}
func New008500030001() *Device{
	return &Device{
		Brand: "ZWS12",
		Product: "CHAIN ACTUATOR ZWS12 ",
		Description: "/n            /n          ",

		ManufacturerID: "0085",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008500160001() *Device{
	return &Device{
		Brand: "Part of roller shutter ARZ-Solar Z-Wave",
		Product: "ZWRS MODULE",
		Description: "/n            /n          ",

		ManufacturerID: "0085",
		ProductType: "0016",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008600000000() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Water Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "sensor binary report",
				Description: "Toggle the sensor binary report value when the Magnet switch/nis opened /closed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Open: 00, Close: FF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Open: FF, Close: 00",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up",
				Description: "Enable wake up 10 minutes when the power is switched on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Basic set value",
				Description: "Toggle the basic set value when the Magnet switch is opened/n/closed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Close-&gt;Open: 00, Open-&gt;Close: FF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Close-&gt;Open: FF, Open-&gt;Close: 00",
					},
				},
			},
			ConfigParam{
				ID: 121,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reports that will be sent",
				Description: "Determines which report will be sent when the water level/nfluctuates./nDefault value = 0x00000100",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery: The Battery flag signals that whether the Water Sensor sends (1) or not sends (0) the battery Report when/nthe probe touches the water.",
					},
					ConfigValue{
						From: 1,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Sensor/nBinary: The Sensor Binary flag signals that whether the Water Sensor sends (1) or not sends (0) the Sensor Binary/nReport when the probe touches the water.",
					},
					ConfigValue{
						From: 5,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Basic/nSet: The Basic set flag signals that whether the Water Sensor sends (1) or not sends (0) the Basic Set Command/nwhen the probe touches the water.",
					},
					ConfigValue{
						From: 9,
						To: 11,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Alarm: The Alarm flag signals that whether the Water Sensor sends (1) or not sends (0) the Alarm Command when/nthe probe touches the water.",
					},
					ConfigValue{
						From: 13,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset",
				Description: "Reset configuration settings to factory defaults.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008600010003() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Minimote EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008600010058() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Key Fob Gen5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0001",
		ProductID: "0058",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 250,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Group/Scene Mode",
				Description: "Enable selective Group Mode or Scene Mode when the/nKey Fob is in Use mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Group mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene mode",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset to Default Settings",
				Description: "Resets the configuration parameter to default factory setting",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860001005a() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Z-Stick Gen 5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0001",
		ProductID: "005a",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008600020001() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Z-Stick EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008600020004() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Door/Window Sensor",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008600020005() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Multi Sensor 1.18",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor report type on Get without instances",
				Description: "Which type of multi sensor report should be sent on multi sensor Get command without instances",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Temperature, humidity and luminance",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "sec",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable motion sensor",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery report",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Luminosity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery report",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Luminosity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery report",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Luminosity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "sec",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "sec",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "sec",
					},
				},
			},
		},
	}
}
func New008600020009() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Home Energy Meter",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0009",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage",
				Description: "Voltage to calculate wattage from amperage. Values/nrepresent voltage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 120,
						To: 120,
						Unit: "",
						Reserved: false,
						Description: "US",
					},
					ConfigValue{
						From: 240,
						To: 240,
						Unit: "",
						Reserved: false,
						Description: "EU, ANZ",
					},
				},
			},
		},
	}
}
func New00860002001c() *Device{
	return &Device{
		Brand: "AeonLabs",
		Product: "HEMG2",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "001c",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "If the reverse clamping pliers, negative power is detected.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Automated Report only when power is changed",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt) for the whole HEM",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt) for clamp 1",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt) for clamp 2",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt) for clamp 3",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%) for the whole HEM",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%) for clamp 1",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%) for clamp 2",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%) for clamp 3",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable /disable reporting CRC-16 Encapsulation Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Report type send in Reporting Group 1",
				Description: "Defines the type of report sent for the Reporting Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Battery Report",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report for the whole device",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for the whole device",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for the whole device",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 1",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 3",
					},
					ConfigValue{
						From: 2048,
						To: 2048,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 1",
					},
					ConfigValue{
						From: 4096,
						To: 4096,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 8192,
						To: 8192,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 3",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 2",
				Description: "Defines the type of report sent for the Reporting Group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Battery Report",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report for the whole device",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for the whole device",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for the whole device",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 1",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 3",
					},
					ConfigValue{
						From: 2048,
						To: 2048,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 1",
					},
					ConfigValue{
						From: 4096,
						To: 4096,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 8192,
						To: 8192,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 3",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 3",
				Description: "Defines the type of report sent for the Reporting Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Battery Report",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report for the whole device",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for the whole device",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for the whole device",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 1",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 3",
					},
					ConfigValue{
						From: 2048,
						To: 2048,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 1",
					},
					ConfigValue{
						From: 4096,
						To: 4096,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt for clamp 2",
					},
					ConfigValue{
						From: 8192,
						To: 8192,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh for clamp 3",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send Interval for Reporting Group 1",
				Description: "Defines the time interval when the defined report of Reporting Group 1 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send Interval for Reporting Group 2",
				Description: "Defines the time interval when the defined report of Reporting Group 2 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send Interval for Reporting Group 3",
				Description: "Defines the time interval when the defined report of Reporting Group 3 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Set 101-103 to default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Set 111-113 to default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Partner ID",
				Description: "(0= Aeon Labs Standard Product,/n1= AT&amp;T).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable/disable Configuration Locked",
				Description: "0 =disable, 1 = enable",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = enabled",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset",
				Description: "Reset configuration set up to default setting",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008600020036() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "DSB54",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0036",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "sensor binary report for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open =  0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "basic set for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open = 0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "low battery voltage check function",
				Description: "parameter defines, if battery check function is possible, when battery is below warning voltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 112,
				Name: "battery low check Interval time",
				Description: "minimum battery low check Interval time is 4 minutes/n(240 seconds)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 121,
				Type: "",
				Size: 4,
				Default: 256,
				Name: "Flag values for triggered magnet switch",
				Description: "Flag values for which reports to send when the magnet/nswitch is triggered",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "permit other configurations",
				Description: "Lock or Unlock other configuration set function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "unlock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "lock",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Reset to default",
				Description: "Reset to the default configuration",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860002004a() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Multi Sensor Gen5",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "004a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor report type on Get without instances",
				Description: "Which type of multi sensor report should be sent on multi sensor Get command without instances",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Temperature, humidity and luminance",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable motion sensor",
				Description: "Enable motion sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008600020059() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Recessed Door Sensor Gen5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0059",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "sensor binary report for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open =  0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "basic set for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open = 0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "low battery voltage check function",
				Description: "parameter defines, if battery check function is possible, when battery is below warning voltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 86640,
				Name: "battery low check Interval time",
				Description: "minimum battery low check Interval time is 4 minutes/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval to check the battery status.",
					},
				},
			},
			ConfigParam{
				ID: 121,
				Type: "",
				Size: 4,
				Default: 256,
				Name: "Command to Associated Nodes",
				Description: "To set which command will be sent to the associated nodes when the magnet switch is triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Sensor/nBinary",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Basic/nSet ",
					},
					ConfigValue{
						From: 9,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Lock/ unlock all configuration parameters. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Unlock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Lock",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008600020064() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "MultiSensor 6 EU",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0002",
		ProductID: "0064",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Enable/disable the function of motion sensor. ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=1. (minimum level) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level = 2.   ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=3.   ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=4.  ",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=5. (maximum level) ",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " low battery value.",
				Description: "Configure low battery value. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 50,
						Unit: "%",
						Reserved: false,
						Description: "default value = 20 %",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Threshold change in ultraviolet to induce an automatic report. ",
				Description: "Default Value = 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 201,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =25.3℃ and the standard value = 23.2℃, so the/ncalibration value= 23.2℃ - 25.3℃= -2.1℃ (0xFFEB)./nIf the measure value =30.1℃ and the standard value = 33.2℃, so the calibration/nvalue= 33.2℃ - 30.1℃=3.1℃ (0x001F).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 202,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Humidity sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =80RH and the standard value = 75RH, so the calibration/nvalue= 75RH – 80RH= -5RH (0xFFFB)./nIf the measure value =85RH and the standard value = 90RH, so the calibration/nvalue= 90RH – 85RH=5RH (0x0005).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 203,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Luminance sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =800Lux and the standard value = 750Lux, so the/ncalibration value= 750 – 800= -50 (0xFFCE)./nIf the measure value =850Lux and the standard value = 900Lux, so the calibration/nvalue= 900 – 850=50 (0x0032).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 204,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ultraviolet sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =9 and the standard value = 8, so the calibration value= 8 –/n9= -1 (0xFE)./nIf the measure value =7 and the standard value = 9, so the calibration value= 9 –/n7=2 (0x02).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008600030006() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Smart Energy Switch 1.43",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multilevel Sensor Report Content",
				Description: "The content of &#34;Multilevel Sensor Report Command&#34;/nafter SES receives &#34;Multilevel Sensor Get/nCommand&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Voltage",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Blink",
				Description: "Make SES blink",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Configuration Value 1 is/nto Specify the time/nthat SES need/nblink,The unit is/nSecond;",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Configuration Value 2 is/nto Specify the Cycle/nof on/off,the unit of it/nis 0.1 second.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Automatic Notifications",
				Description: "Enables automatic notifications to associated devices/nwhenever there is a state change.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "hail",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Parameter 91 ",
				Description: "Enables/disables parameter 91 and 92 below",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum change in wattage",
				Description: "The value here represents minimum change in wattage (in/nterms of wattage) for a REPORT to be sent (default 50W,/nsize 2 bytes).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum change in wattage (%)",
				Description: "The value here represents minimum change in wattage/npercent (in terms of percentage) for a REPORT to be/nsent (default 10%, size 1 byte).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set 101-103 to default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Reports group 1",
				Description: "Which reports need to send in Report group1",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report group 2",
				Description: "Which reports need to send in Report group2",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report group 3",
				Description: "Which reports need to send in Report group3",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set 111-113 to default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Interval group 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "seconds",
						Reserved: false,
						Description: "interval (in seconds) to/nsend out Report group 1",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Interval group 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "seconds",
						Reserved: false,
						Description: "interval (in seconds) to/nsend out Report group 2",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Interval group 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "seconds",
						Reserved: false,
						Description: "interval (in seconds) to/nsend out Report group 3",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Tag",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Factory Reset",
				Description: "Reset to the default Configuration",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860003000a() *Device{
	return &Device{
		Brand: "Binary Power Switch",
		Product: "HDS",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "000a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Защита от перегрузки",
				Description: "Если ток будет больше 39,5 А в течении 5 секунд, то модуль выключится.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Защита от перегрузки включена",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Защита от перегрузки выключена",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Восстанавливать состояние после отключения питания",
				Description: "Определяет восстанавливать ли состояние модуля (включено/выключено) на то, которое было до отключения питания модуля.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать состояние",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Всегда включено",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Всегда выключено",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отчет о включении/выключении",
				Description: "Каким классом команд отправлять отчет о включении/выключении",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять отчет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail (Сказать контроллеру Привет!)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic Report",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Управление параметрами 91/92",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Параметры 91/92 включены",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Параметры 91/92 выключены",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Отчет о изменении энергопотребления",
				Description: "Минимальное значение на которое должно измениться энергопотребление, чтобы отправился отчет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Отчет о изменении энергопотребления (%)",
				Description: "Минимальное значение на которое должно измениться энергопотребление в процентах, чтобы отправился отчет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "AT&amp;T",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировка настроек",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Настройка параметров заблокирована",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Настройка параметров разблокирована",
					},
				},
			},
		},
	}
}
func New00860003000b() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Aeon Labs Smart Strip",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "000b",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x00ef,
			},
			&CommandClass{
				ID: 0x0082,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Wattage Report",
				Description: "Enable selective reporting only when/npower change reaches a certain/nthreshold or percentage set in parameterrs 4‐11./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Whole Smart Strip",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 1",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 2",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 3",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 4",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 5",
				Description: "Threshold change in wattage to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report Socket 6",
				Description: "Threshold change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Whole Smart Strip",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 1",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 2",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 3",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 4",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 5",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report Socket 6",
				Description: "Percentage change in wattage to induce an/nautomatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a change in wattage to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Status of Load",
				Description: "Status of load changed，send group 1/nassociate nodes Hail CC or Basic report/nCC.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No send.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Hail CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Basic report.",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Get Temperature",
				Description: "Get temperature of Smart Strip（Only GET/nis valid).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "2^-8",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "2^-7",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2^-6",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "2^-5",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2^-4",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "2^-3",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "2^-2",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "2^-1",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "2^0",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "2^1",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "2^2",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "2^3",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "2^4",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "2^5",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "2^6",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "-(2^7)",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset Parameters 0x65~0x67",
				Description: "Reset 0x65~0x67 to default value",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Auto Report Item 1",
				Description: "Configure auto report which information/nas item 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nconsum/nption of/nall/nchannels/nwith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsump/ntion with/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsump/ntion with/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsump/ntion with/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsump/ntion with/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsump/ntion with/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nlevel of/nall/nchannels/nWith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Auto Report Item 2",
				Description: "Configure auto report which information/nas item 2, equivalent to parameter 101",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nconsum/nption of/nall/nchannels/nwith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nlevel of/nall/nchannels/nWith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Auto Report Item 3",
				Description: "Configure auto report which information/nas item 3, equivalent to parameter 101",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nconsum/nption of/nall/nchannels/nwith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nconsum/nption/nwith/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/nthe total/npower/nlevel of/nall/nchannels/nWith/nspecified/ntime/ninterval",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n1)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n2)",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n3)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n4)",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n5)",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Auto/nreport/npower/nlevel/nwith/nspecified/ntime/ninterval/n(channel/n6)",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset Parameters 0x6F~0x71",
				Description: "Reset parameter 0x6F~0x71 to/nfactory default",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Auto Report Time Interval Item 1",
				Description: "Configure auto report time interval of/nitem 1",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Auto Report Time Interval Item 2",
				Description: "Configure auto report time interval of/nitem 2",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Auto Report Time Interval Item 3",
				Description: "Configure auto report time interval of/nitem 3",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Parameter",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "unlock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Lock",
					},
				},
			},
			ConfigParam{
				ID: 253,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Enter Meter Calibration Mode",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "Device tag，inclusion and/or reset will/nnot change the value.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Restore All",
				Description: "Restore Configuration parameters to/nfactory default, except parameter 254.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860003000c() *Device{
	return &Device{
		Brand: "Micro Modules",
		Product: "MSES",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "000c",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Sensor Report",
				Description: "Defines the value type to be sent as Sensor Report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Voltage",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Blinking Behavior",
				Description: "This is a double byte value. The LSB defines the total time the device need to blink. The value if set in seconds. The MSB defines the on/off interval of the blinking. The unit is 0.1 s.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Configuration Bytes",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notification on Status Change",
				Description: "Defines the automated status notification of an associated device when status changes ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail sent",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASIC Report Sent",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disables Function of automated sending of a Report triggered by minimal change of value.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt)",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%)",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Report type send in Reporting Group 1",
				Description: "Defines the type of report sent for the Reporting Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 2",
				Description: "Defines the type of report sent for the Reporting Group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 3",
				Description: "Defines the type of report sent for the Reporting Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 1",
				Description: "Defines the time interval when the defined report of Reporting Group 1 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 2",
				Description: "Defines the time interval when the defined report of Reporting Group 2 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 65535,
				Name: "Send Interval for Reporting Group 3",
				Description: "Defines the time interval when the defined report of Reporting Group 3 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
		},
	}
}
func New00860003000d() *Device{
	return &Device{
		Brand: "Micro Modules",
		Product: "MSEI",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "000d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Sensor Report",
				Description: "Defines the value type to be sent as Sensor Report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Voltage",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Blinking Behavior",
				Description: "This is a double byte value. The LSB defines the total time the device need to blink. The value if set in seconds. The MSB defines the on/off interval of the blinking. The unit is 0.1 s.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Configuration Bytes",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notification on Status Change",
				Description: "Defines the automated status notification of an associated device when status changes ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail sent",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASIC Report Sent",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disables Function of automated sending of a Report triggered by minimal change of value.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt)",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%)",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Report type send in Reporting Group 1",
				Description: "Defines the type of report sent for the Reporting Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 2",
				Description: "Defines the type of report sent for the Reporting Group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 3",
				Description: "Defines the type of report sent for the Reporting Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 1",
				Description: "Defines the time interval when the defined report of Reporting Group 1 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 2",
				Description: "Defines the time interval when the defined report of Reporting Group 2 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 65535,
				Name: "Send Interval for Reporting Group 3",
				Description: "Defines the time interval when the defined report of Reporting Group 3 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
		},
	}
}
func New00860003000e() *Device{
	return &Device{
		Brand: "Micro Modules",
		Product: "MSEM",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "000e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Sensor Report",
				Description: "Defines the value type to be sent as Sensor Report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Voltage",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Blinking Behavior",
				Description: "This is a double byte value. The LSB defines the total time the device need to blink. The value if set in seconds. The MSB defines the on/off interval of the blinking. The unit is 0.1 s.  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Configuration Bytes",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notification on Status Change",
				Description: "Defines the automated status notification of an associated device when status changes ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail sent",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASIC Report Sent",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disables Function of automated sending of a Report triggered by minimal change of value.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Minimum Change to send Report (Watt)",
				Description: "The value represents the minimum change in Wattage for a Report to be sent .",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Minimum Change to send Report (%)",
				Description: "The value represents the minimum change in Watage Percent for a report to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "W",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Report type send in Reporting Group 1",
				Description: "Defines the type of report sent for the Reporting Group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 2",
				Description: "Defines the type of report sent for the Reporting Group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Report Type send in Reporting Group 3",
				Description: "Defines the type of report sent for the Reporting Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MultiSensor Report",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for Watt",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Meter Report for kWh",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 1",
				Description: "Defines the time interval when the defined report of Reporting Group 1 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 720,
				Name: "Send Interval for Reporting Group 2",
				Description: "Defines the time interval when the defined report of Reporting Group 2 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 65535,
				Name: "Send Interval for Reporting Group 3",
				Description: "Defines the time interval when the defined report of Reporting Group 3 is sent out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "s",
						Reserved: false,
						Description: "Interval",
					},
				},
			},
		},
	}
}
func New008600030018() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Aeon Labs Smart Switch (2nd Edition)",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "0018",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x00ef,
			},
			&CommandClass{
				ID: 0x0082,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Make Smart Switch blink",
				Description: "Configuration Value 1：1-255/nConfiguration Value 1 Specifies the time that Smart Switch/nblinks, The unit is Second;/nConfiguration Value 2：1-255/nConfiguration Value 2 Specifies the on/off status of the/ncycle, its unit is 0.1 second./n For example: if we set Configuration Value 1 to &#39;15&#39;,Configuration Value 2 to/n&#39;10&#39;,then Smart Switch will open for 0.5 seconds, close for 0.5/nseconds, and repeat for 14 times.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "The load will be closed when/nthe Current is more than 15.5A and the time is more than 2/nminutes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Micro Switch’s load is changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "send nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enables/disables parameter 91 and 92",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Automatic Report(W)",
				Description: "The value here represents minimum change in wattage (in/nterms of wattage) for a REPORT to be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a  treshold to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Automatic Report(%)",
				Description: "The value here represents minimum change in wattage/npercent (in terms of percentage) for the REPORT to be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a  treshold to induce a report.",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set Paremeters 101-103 to Default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reports in Group 1",
				Description: "Which reports will be sent in Report group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reports in Group 2",
				Description: "Which reports will be sent in Report group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reports in Group 3",
				Description: "Which reports will be sent in Report group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set Parameters 111-113 to Default",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 3,
				Name: "Report Interval Group 1",
				Description: "The time interval of sending Report group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 4294967295,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Report Interval Group 2",
				Description: "The time interval of sending Report group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 4294967295,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Report Interval Group 3",
				Description: "The time interval of sending Report group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 4294967295,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "AT&amp;T",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable/disable the Lock Configuration",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset All",
				Description: "Reset configuration settings to factory defaults.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860003001a() *Device{
	return &Device{
		Brand: "Aeolabs MES",
		Product: "MES",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "001a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00860003003e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Garage Door Controller Gen5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "003e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0066,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Startup Ringtone",
				Description: "Configure the default startup ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable the startup ringtone. /n",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Enable and select a startup ringtone for the Garage Door Controller.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor Calibration",
				Description: "Calibration Steps:/n1. Let the garage door move to full close position./n2. Send this parameter (0x22) with “value=1” to Garage Door/nController./n3. Let the garage door move to full open position./n4. Let the garage door move to full close position after the/nstep 3 is completed./nAfter the step 4 is complete, all calibration steps are complete.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable calibration.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Timeout of Calibration Steps",
				Description: "Set the timeout of all calibration steps for the Sensor. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Set the timeout of calibration.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Alarm Music",
				Description: "Get the numbers of alarm music.(not support Set CC) ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Get the number of alarm music.",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Opening",
				Description: "Configure the alarm mode for when the garage door is/nopening. /n Value1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 10./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 1./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Closing",
				Description: "Configure the alarm mode when the garage door is closing./nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 6./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 2./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Unknown Position",
				Description: "Configuration alarm mode when the garage door is in/n&#34;Unknown&#34; state:/nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 4./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 3./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Closed Position",
				Description: "Configure the alarm mode when the garage door is in closed/nposition. /nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 2./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 4./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tamper Switch State",
				Description: "Configuration report for the tamper switch State.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is installed on the garage door.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is removed from the garage door.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery State of Sensor",
				Description: "Configuration report for the battery state of Sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery is in normal state.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Battery is in low battery state.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone",
				Description: "Start playing or Stop playing the ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "stop playing ringtone",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Start playing the ringtone that you/nselected. /n",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone Volume",
				Description: "Test the volume of the current ringtone. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "There are 10 volume levels can be set for testing.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature",
				Description: "Get the environment temperature:/nThe temperature value contains one decimal point./nE.g. If the report value=252(0x00FC), the temperature is/n25.2℃./nRang is 0 to 500 (0 to 50.0℃). ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Function of Button- or Button&#43;",
				Description: "Define the function of Button- and Button&#43;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be used to increase and decrease the volume. Press and hold it, the Button&#43; and Button- are defined to be the control item of Next and Previous.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be the control item of Next and Previous. Press and hold it, the Button&#43; and Button- are defined to be used to increase and decrease the volume.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications to Associated Devices",
				Description: "Enable/Disable to send notifications to associated devices.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BARRIER OPERATOR Report Command",
					},
				},
			},
			ConfigParam{
				ID: 241,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pair Sensor with Garage Door Controller",
				Description: "Send Configuration Set:/nValue=0x55555501, which will trigger to start the pairing of/nSensor (installed on the top of the garage door), at this time,/nthe Network LED on the Garage Door Controller will blink/nslowly and then short press Temper Switch back of the Sensor./nIf pairing is successful, the Network LED will stop blinking and/nthe Garage Door Controller will send the configuration report/nwith value=0x01FF to primary controller/gateway. Otherwise,/nrepeat the operation. /nNote:/n1. If you do not press the Temper Switch when starting the/npairing mode, the pairing status will keep for 8 second and/n- 4 /n9/n/nthen exit the pairing status automatically./n2. The Sensor has been paired with the Garage Door Controller/nafter factory. /n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1431655681,
						To: 1431655681,
						Unit: "",
						Reserved: false,
						Description: "Start the Sensor pairing mode.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Reset all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860003004b() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Smart Switch Gen5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "004b",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Make Smart Switch blink.",
				Description: "Configuration Value 1：1‐255/nConfiguration Value 1 is to specify the time that Smart Switch/nneed blink, The unit is Second;  /nConfiguration Value 2：1‐255/nConfiguration Value 2 is to specify the cycle of on/off, the/nunit of it is 0.1 second. For example: if we set Configuration/nValue 1 to &#39;15&#39;,Configuration Value 2 to &#39;10&#39;,then Smart/nSwitch will open 0.5 second, close 0.5 second, and repeat for/n14 times.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Overload Protection",
				Description: "Current Overload Protection. Load will be closed when the/nCurrent overrun (US: 15.5A, other country: 16.2A) and the/ntime more than 2 minutes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Micro Switch’s load changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "Enable/Disable the function of parameter 91 and 92.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report(W)",
				Description: "The value here represents minimum change in wattage that/nwill induce an automatic report (Meter Report for wattage)/nwhen the change of the current power is more/less than the/nthreshold in wattage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report(%)",
				Description: "The value here represents minimum change in wattage/npercent will induce an automatic report (Meter Report for/nwattage) when the change of the current power is more/less/nthan the threshold in percentage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860003004e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Heavy Duty Smart Switch Gen5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "004e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "Current Overload Protection. Load will be closed when the/nCurrent more than 39.5A and the time more than 5 seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The load status after power on",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The load state will back to the last state after power on.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The load state will always on after re-power on.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The load state will always off stare after re-power on.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Heavy Duty Smart Switch Gen5’s load/nchanged.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "Enable/Disable the function of parameter 91 and 92",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report (W)",
				Description: "The value here represents minimum change in wattage (in/nterms of wattage) for a REPORT to be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report (%)",
				Description: "The value here represents minimum change in wattage/npercent (in terms of percentage) for a REPORT to be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval ",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nwatt) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 2",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 3",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008600030060() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Smart Switch 6 EU",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "0060",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "Load will be closed when the Current overrun (US: 15.5A, other country: 16.2A) and the time more than 2 minutes. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Load Status",
				Description: "Configure the output load status after re-power on ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last status",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "always on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "always off",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Set the RGB LED color value for testing",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Range of red color value.",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Range of green color value.",
					},
					ConfigValue{
						From: 16777216,
						To: 2147483647,
						Unit: "",
						Reserved: false,
						Description: "Range of blue color value.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "notifications to associated devices",
				Description: "Enable to send notifications to associated devices (Group 1) /nwhen the state of Micro Switch’s load changed ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure the state of LED",
				Description: "Configure the state of LED when it is in 3 modes ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED will follow the status (on/off) of its load (Energy /nmode). /n/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When the state of Switch’s load changed, The LED will /nfollow the status (on/off) of its load, but the red LED will /nturn off after 5 seconds if there is no any switch action /n(momentary indicate mode)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Night light mode",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "RGB value",
				Description: "Configure the RGB value when it is in Night light mode. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of red Led./n/n",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of green Led./n",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of blue Led.",
					},
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Configure the brightness level of RGB LED",
				Description: "Configure the brightness level of RGB LED (0%-100%) when /nit is in Energy Mode/momentary indicate mode. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a brightness level./n/n",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enables/disables parameter 91/92",
				Description: "Enables/disables parameter 91 and 92 below ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 4,
				Default: 25,
				Name: "Report of minimum change in wattage ",
				Description: "The value here represents minimum change in wattage (in /nterms of wattage) for a REPORT to be sent",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60000,
						Unit: "W",
						Reserved: false,
						Description: " minimum change in wattage",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Minimum change in wattage in percent ",
				Description: "The value here represents minimum change in wattage /npercent (in terms of percentage) for a REPORT to be sent. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "minimum change in wattage /npercent ",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 101-103 to default",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 1 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nwatt)/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval ",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 2 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nwatt)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nvoltage/nat the/ngroup/ntime/ninterval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/ncurrent)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPOR/nT (for/nwatt)/nat the/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for/nkWh) at/nthe/ngroup/ntime/ninterval /n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 111-113 to default. ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 600,
				Name: " time interval 1",
				Description: "The time interval of sending Report group 1 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: " time interval 2",
				Description: "The time interval of sending Report group 2 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: " time interval 3",
				Description: "The time interval of sending Report group 3  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner  ID ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Enable/disable Configuration Locked",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset configuration",
				Description: "Reset configuration set up to default setting. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008600030062() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "LED Bulb EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "0062",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0033,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Use of External Switch",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulb./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Use of External Switch(Color)",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulbs color./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of LED Bulb is changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "send nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAll configuration parameters are not configurable (Locked)./n",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset Parameters",
				Description: "Reset to default factory setting",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nReset all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008600030063() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Smart Dimmer 6",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0003",
		ProductID: "0063",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0081,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Make Dimmer blink.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "seconds",
						Reserved: false,
						Description: "Specify the time that Dimmer /nneed blink",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "seconds",
						Reserved: false,
						Description: "Specify the Cycle of on/off,/nUnit of it is 0.1 second./nFor example: if we set Configuration Value 1 to /n&#39;15&#39;,Configuration Value 2 to &#39;10&#39;,then Dimmer will open 0.5 /nsecond, close 0.5 second, and repeat for 14 times. ",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: " Load will be closed when the /nCurrent overrun (US: 15.5A, other country: 16.2A) and the /ntime more than 2 minutes",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Load Status",
				Description: "Configure the output load status after re-power on ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last status",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "always on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "always off",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Set the RGB LED color value for testing. ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reserved",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Red value ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Green value",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Blue value ",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "notifications to associated devices",
				Description: "Enable to send notifications to associated devices (Group 1) /nwhen the state of Micro Switch’s load changed ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure the state of LED",
				Description: "Configure the state of LED when it is in 3 modes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " The LED will follow the status (on/off) of its load (Energy /nmode). ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " When the state of Dimmer’s load changed, The LED will /nfollow the status (on/off) of its load, but the red LED will /nturn off after 5 seconds if there is no any switch action /n(momentary indicate mode). ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Night light mode",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Configure the RGB value",
				Description: "Configure the RGB value when it is in Night light mode. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Red color value /n(default = 0xDD)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Green color value /n(default = 0xA0)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Blue color value /n(default = 0xDD)",
					},
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 4,
				Default: 50,
				Name: "Configure the brightness level of RGB LED",
				Description: "Configure the brightness level of RGB LED (0%-100%) when /nit is in Energy Mode/momentary indicate mode. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "green color value=50",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "yellow color value=50",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "red color value=50",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enables/disables parameter 91/92",
				Description: "Enables/disables parameter 91 and 92 below ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 4,
				Default: 25,
				Name: "Report of minimum change in wattage",
				Description: "The value here represents minimum change in wattage (in /nterms of wattage) for a REPORT to be sent",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60000,
						Unit: "",
						Reserved: false,
						Description: " minimum change in wattage",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: " minimum change in wattage percent",
				Description: "The value here represents minimum change in wattage /npercent (in terms of percentage) for a REPORT to be sent ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "minimum change in wattage /npercent ",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 101-103 to default. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "0= auto send meter report (for voltage) at the group time interval/n1= auto send meter report (for current) at the group time interval/n2= auto send meter report (for watt) at the group time interval/n3= auto send meter report (for kWh) at the group time interval/n4-7=reserved",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 2 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "0= auto send meter report (for voltage) at the group time interval/n1= auto send meter report (for current) at the group time interval/n2= auto send meter report (for watt) at the group time interval/n3= auto send meter report (for kWh) at the group time interval/n4-7=reserved",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "0-7=reserved",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "0= auto send meter report (for voltage) at the group time interval/n1= auto send meter report (for current) at the group time interval/n2= auto send meter report (for watt) at the group time interval/n3= auto send meter report (for kWh) at the group time interval/n4-7=reserved",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 111-113 to default. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 0,
				Name: " time interval 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "time interval 1",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 0,
				Name: " time interval 2",
				Description: "The time interval of sending Report group 2 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "time interval 2",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 0,
				Name: " time interval 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "time interval 3",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner  ID ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "others",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Enable/disable Configuration Locked ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value 0",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset configuration",
				Description: "Reset configuration set up to default setting. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
		},
	}
}
func New008600040025() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Repeater",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0004",
		ProductID: "0025",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "The parameter defines the partner,/n that is used by the repeater.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0= Aeon Labs’s Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1= AT&amp;T",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2= Jean",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3= Telefonica",
					},
					ConfigValue{
						From: 4,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "4-255 = Reserved for other Partner",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Device Tag",
				Description: "When Repeater removed from z-wave network, device Tag will not change.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset",
				Description: "Reset configuration settings to default values, except parameter is 254",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008600040050() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Siren Gen 5 EU",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0004",
		ProductID: "0050",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Siren Sound/Volume",
				Description: "Configure the Siren sound and its volume./n1, The value1 (low byte) is used to select the Siren sound :/nValue1=0, do not change the current Siren sound./nValue1=1, Siren sound 1 is selected./nValue1=2, Siren sound 2 is selected./nValue1=3, Siren sound 3 is selected./nValue1=4, Siren sound 4 is selected./nValue1=5, Siren sound 5 is selected./nOther values will be ignored. Default = 1/n2, The value2 (high byte) is used to adjust the volume:/nValue2=0, do not change the current volume./nValue2=1, set the volume to 88 dB./nValue2=2, set the volume to 100 dB./nValue2=3, set the volume to 105 dB./nOther values will be ignored. Default = 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 88 dB",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 100 dB",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 105 dB",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 1 is selected",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 2 is selected",
					},
					ConfigValue{
						From: 768,
						To: 768,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 3 is selected",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 4 is selected",
					},
					ConfigValue{
						From: 1280,
						To: 1280,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 5 is selected",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Siren changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable Lock Configuration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Settings",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008601010058() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Key Fob Gen5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0101",
		ProductID: "0058",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 250,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Group/Scene Mode",
				Description: "Enable selective Group Mode or Scene Mode when the/nKey Fob is in Use mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Group mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene mode",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset to Default Settings",
				Description: "Resets the configuration parameter to default factory setting",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860101005a() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Z-Stick Gen 5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0101",
		ProductID: "005a",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00860102004a() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Multi Sensor Gen5 US",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0102",
		ProductID: "004a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor report type on Get without instances",
				Description: "Which type of multi sensor report should be sent on multi sensor Get command without instances",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Temperature, humidity and luminance",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable motion sensor",
				Description: "Enable motion sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008601020059() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Recessed Door Sensor Gen5 US",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0102",
		ProductID: "0059",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "sensor binary report for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open =  0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "basic set for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open = 0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "low battery voltage check function",
				Description: "parameter defines, if battery check function is possible, when battery is below warning voltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 86640,
				Name: "battery low check Interval time",
				Description: "minimum battery low check Interval time is 4 minutes/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval to check the battery status.",
					},
				},
			},
			ConfigParam{
				ID: 121,
				Type: "",
				Size: 4,
				Default: 256,
				Name: "Command to Associated Nodes",
				Description: "To set which command will be sent to the associated nodes when the magnet switch is triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Sensor/nBinary",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Basic/nSet ",
					},
					ConfigValue{
						From: 9,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Lock/ unlock all configuration parameters. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Unlock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Lock",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860102005f() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Home Energy Meter Gen5",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0102",
		ProductID: "005f",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Energy Detection Mode Configuration",
				Description: "This parameter is used to configure the energy detection/nmode when the parameter 101~103 have been configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "report Wattage and the absolute KWH value",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "report positive/negative Wattage and the algebraic sum KWH value",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "report positive/negative Wattage and the positive KWH value (consuming electricity)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "report positive/negative Wattage and the negative KWH value (generating electricity)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable/Disable the Function of Parameters 4 to 10.",
				Description: "Enable selective reporting only when power change reaches/na certain threshold or percentage set in 4‐10 below.  This is/nused to reduce network traffic.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report of whole HEM.",
				Description: "Threshold change in wattage to induce an automatic report/n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "W",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report for Clamp 1.",
				Description: "Threshold change in wattage to induce an automatic report/n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "W",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report for Clamp 2.",
				Description: "Threshold change in wattage to induce an automatic report/n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "W",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report of whole HEM(%)",
				Description: "Percentage change in wattage to induce an automatic report./n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report for Clamp 1(%)",
				Description: "Percentage change in wattage to induce an automatic report./n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report for Clamp 2(%)",
				Description: "Percentage change in wattage to induce an automatic report./n(Whole HEM).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable /Disable CRC-16 Encapsulation",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 2,
				Name: "Reports Group 1",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for KWH)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for/nwattage)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for V) at/nthe/ngroup/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 4,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 13,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 21,
						To: 23,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reports Group 2",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for KWH)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for/nwattage)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for V) at/nthe/ngroup/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 4,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 13,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 21,
						To: 23,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reports Group 3",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for KWH)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for/nwattage)/nat the/ngroup time/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto/nsend/nMeter/nREPORT/n(for V) at/nthe/ngroup/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Whole/nHEM)",
					},
					ConfigValue{
						From: 4,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for Watt)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for kWh)/nat the/ngroup time/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 13,
						To: 15,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for V) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 1)",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Auto send/nMeter/nREPORT/n(for A) at/nthe group/ntime/ninterval/n(Clamp 2)",
					},
					ConfigValue{
						From: 21,
						To: 23,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 60,
				Name: "Time Interval Report Group 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Report Group 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Report Group 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Others",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset to Default Factory Setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008601020064() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "MultiSensor 6 US",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0102",
		ProductID: "0064",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Enable/disable the function of motion sensor. ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=1. (minimum level) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level = 2.   ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=3.   ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=4.  ",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=5. (maximum level) ",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " low battery value.",
				Description: "Configure low battery value. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 50,
						Unit: "%",
						Reserved: false,
						Description: "default value = 20 %",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Threshold change in ultraviolet to induce an automatic report. ",
				Description: "Default Value = 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 201,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =25.3℃ and the standard value = 23.2℃, so the/ncalibration value= 23.2℃ - 25.3℃= -2.1℃ (0xFFEB)./nIf the measure value =30.1℃ and the standard value = 33.2℃, so the calibration/nvalue= 33.2℃ - 30.1℃=3.1℃ (0x001F).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 202,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Humidity sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =80RH and the standard value = 75RH, so the calibration/nvalue= 75RH – 80RH= -5RH (0xFFFB)./nIf the measure value =85RH and the standard value = 90RH, so the calibration/nvalue= 90RH – 85RH=5RH (0x0005).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 203,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Luminance sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =800Lux and the standard value = 750Lux, so the/ncalibration value= 750 – 800= -50 (0xFFCE)./nIf the measure value =850Lux and the standard value = 900Lux, so the calibration/nvalue= 900 – 850=50 (0x0032).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 204,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ultraviolet sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =9 and the standard value = 8, so the calibration value= 8 –/n9= -1 (0xFE)./nIf the measure value =7 and the standard value = 9, so the calibration value= 9 –/n7=2 (0x02).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860103003e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Garage Door Controller Gen5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0103",
		ProductID: "003e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0066,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Startup Ringtone",
				Description: "Configure the default startup ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable the startup ringtone. /n",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Enable and select a startup ringtone for the Garage Door Controller.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor Calibration",
				Description: "Calibration Steps:/n1. Let the garage door move to full close position./n2. Send this parameter (0x22) with “value=1” to Garage Door/nController./n3. Let the garage door move to full open position./n4. Let the garage door move to full close position after the/nstep 3 is completed./nAfter the step 4 is complete, all calibration steps are complete.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable calibration.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Timeout of Calibration Steps",
				Description: "Set the timeout of all calibration steps for the Sensor. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Set the timeout of calibration.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Alarm Music",
				Description: "Get the numbers of alarm music.(not support Set CC) ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Get the number of alarm music.",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Opening",
				Description: "Configure the alarm mode for when the garage door is/nopening. /n Value1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 10./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 1./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Closing",
				Description: "Configure the alarm mode when the garage door is closing./nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 6./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 2./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Unknown Position",
				Description: "Configuration alarm mode when the garage door is in/n&#34;Unknown&#34; state:/nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 4./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 3./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Closed Position",
				Description: "Configure the alarm mode when the garage door is in closed/nposition. /nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 2./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 4./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tamper Switch State",
				Description: "Configuration report for the tamper switch State.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is installed on the garage door.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is removed from the garage door.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery State of Sensor",
				Description: "Configuration report for the battery state of Sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery is in normal state.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Battery is in low battery state.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone",
				Description: "Start playing or Stop playing the ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "stop playing ringtone",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Start playing the ringtone that you/nselected. /n",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone Volume",
				Description: "Test the volume of the current ringtone. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "There are 10 volume levels can be set for testing.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature",
				Description: "Get the environment temperature:/nThe temperature value contains one decimal point./nE.g. If the report value=252(0x00FC), the temperature is/n25.2℃./nRang is 0 to 500 (0 to 50.0℃). ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Function of Button- or Button&#43;",
				Description: "Define the function of Button- and Button&#43;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be used to increase and decrease the volume. Press and hold it, the Button&#43; and Button- are defined to be the control item of Next and Previous.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be the control item of Next and Previous. Press and hold it, the Button&#43; and Button- are defined to be used to increase and decrease the volume.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications to Associated Devices",
				Description: "Enable/Disable to send notifications to associated devices.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BARRIER OPERATOR Report Command",
					},
				},
			},
			ConfigParam{
				ID: 241,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pair Sensor with Garage Door Controller",
				Description: "Send Configuration Set:/nValue=0x55555501, which will trigger to start the pairing of/nSensor (installed on the top of the garage door), at this time,/nthe Network LED on the Garage Door Controller will blink/nslowly and then short press Temper Switch back of the Sensor./nIf pairing is successful, the Network LED will stop blinking and/nthe Garage Door Controller will send the configuration report/nwith value=0x01FF to primary controller/gateway. Otherwise,/nrepeat the operation. /nNote:/n1. If you do not press the Temper Switch when starting the/npairing mode, the pairing status will keep for 8 second and/n- 4 /n9/n/nthen exit the pairing status automatically./n2. The Sensor has been paired with the Garage Door Controller/nafter factory. /n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1431655681,
						To: 1431655681,
						Unit: "",
						Reserved: false,
						Description: "Start the Sensor pairing mode.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Reset all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860103004b() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Smart Switch Gen5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0103",
		ProductID: "004b",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Make Smart Switch blink.",
				Description: "/nConfiguration Value 1：1‐255 Configuration Value 1 is to specify the time that Smart Switch need blink, The unit is Second;   Configuration Value 2：1‐255 Configuration Value 2 is to specify the cycle of on/off, the unit of it is 0.1 second. For example: if we set Configuration Value 1 to &#39;15&#39;,Configuration Value 2 to &#39;10&#39;,then Smart Switch will open 0.5 second, close 0.5 second, and repeat for 14 times./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Overload Protection",
				Description: "/nCurrent Overload Protection. Load will be closed when the Current overrun (US: 15.5A, other country: 16.2A) and the time more than 2 minutes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of Micro Switch’s load changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "/nEnable/Disable the function of parameter 91 and 92./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report(W)",
				Description: "/nThe value here represents minimum change in wattage that will induce an automatic report (Meter Report for wattage) when the change of the current power is more/less than the threshold in wattage./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report(%)",
				Description: "/nThe value here represents minimum change in wattage percent will induce an automatic report (Meter Report for wattage) when the change of the current power is more/less than the threshold in percentage./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAll configuration parameters are not configurable (Locked)./n",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nResets all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New00860103004e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Heavy Duty Smart Switch Gen5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0103",
		ProductID: "004e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "/nCurrent Overload Protection. Load will be closed when the Current more than 39.5A and the time more than 5 seconds./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The load status after power on",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nThe load state will back to the last state after power on./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The load state will always on after re-power on.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nThe load state will always off stare after re-power on./n",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of Heavy Duty Smart Switch Gen5’s load changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "Enable/Disable the function of parameter 91 and 92",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report (W)",
				Description: "/nThe value here represents minimum change in wattage (in terms of wattage) for a REPORT to be sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report (%)",
				Description: "/nThe value here represents minimum change in wattage percent (in terms of percentage) for a REPORT to be sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 2",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 3",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nResets all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008601030060() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Smart Switch 6 US",
		Description: "/n      /n    ",

		ManufacturerID: "0086",
		ProductType: "0103",
		ProductID: "0060",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0033,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "Load will be closed when the Current overrun (US: 15.5A, other country: 16.2A) and the time more than 2 minutes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Load Status",
				Description: "Configure the output load status after re-power on",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last status",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "always on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "always off",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Set the RGB LED color value for testing",
				Description: "/n        ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: true,
						Description: "/n          ",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Range of red color value.",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Range of green color value.",
					},
					ConfigValue{
						From: 16777216,
						To: 2147483647,
						Unit: "",
						Reserved: false,
						Description: "Range of blue color value.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "notifications to associated devices",
				Description: "Enable to send notifications to associated devices (Group 1) when the state of Micro Switch’s load changed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure the state of LED",
				Description: "Configure the state of LED when it is in 3 modes",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED will follow the status (on/off) of its load (Energy mode).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When the state of Switch’s load changed, The LED will follow the status (on/off) of its load, but the red LED will turn off after 5 seconds if there is no any switch action (momentary indicate mode)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Night light mode",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "RGB value",
				Description: "Configure the RGB value when it is in Night light mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of red Led.",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of green Led.",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of blue Led.",
					},
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Configure the brightness level of RGB LED",
				Description: "Configure the brightness level of RGB LED (0%-100%) when it is in Energy Mode/momentary indicate mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a brightness level.",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enables/disables parameter 91/92",
				Description: "Enables/disables parameter 91 and 92 below",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 4,
				Default: 25,
				Name: "Report of minimum change in wattage",
				Description: "The value here represents minimum change in wattage (in terms of wattage) for a REPORT to be sent",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60000,
						Unit: "W",
						Reserved: false,
						Description: "minimum change in wattage",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Minimum change in wattage in percent",
				Description: "The value here represents minimum change in wattage percent (in terms of percentage) for a REPORT to be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "minimum change in wattage percent",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "/n        ",
				Description: "Set 101-103 to default",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "/n        ",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for voltage at the group time interval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for current) at the group time interval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for watt) at the group time interval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for kWh) at the group time interval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "/n          ",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "/n        ",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for voltage at the group time interval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for current) at the group time interval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for watt) at the group time interval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for kWh) at the group time interval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "/n          ",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "/n        ",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for voltage at the group time interval",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for current) at the group time interval",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPOR T (for watt) at the group time interval",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto send Meter REPORT (for kWh) at the group time interval",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "/n          ",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "/n        ",
				Description: "Set 111-113 to default.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "/n        ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "/n        ",
				Description: "Enable/disable Configuration Locked",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "/n        ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset configuration",
				Description: "Reset configuration set up to default setting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008601030062() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "LED Bulb US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0103",
		ProductID: "0062",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0033,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Use of External Switch",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulb./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Use of External Switch(Color)",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulbs color./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of LED Bulb is changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "send nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAll configuration parameters are not configurable (Locked)./n",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset Parameters",
				Description: "Reset to default factory setting",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nReset all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008601040038() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Doorbell Gen5",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0104",
		ProductID: "0038",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x009b,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0090,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Doorbell Repetitions",
				Description: "Set the repetitions for playing doorbell ringtone. Note: If the time of playing doorbell ringtone is more than 20s,/nthe volume of ringtone will reduce to silence no matter how/nmany repetitions of doorbell ringtone are set.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ignore ",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define number of repetitions.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Doorbell Ringtone",
				Description: "Set the default doorbell ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a ringtone.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Select a Ringtone to Play",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Stop playing.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Play the specified ringtone.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Control Items",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "play ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "stop",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "pause",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "next ",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "previous",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Volume",
				Description: "Set the volume of ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Define the volume.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button Functions",
				Description: "Define functions of “Button -” and “Button&#43;”.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "“Button -” is previous, “Button&#43;” is next",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Swap functions of the two buttons.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button Functions/ Input Options",
				Description: "Define the function of Button- and Button&#43; when pressing it once and long pressing it.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, which will change the volume. Long pressing it, which will change the default ringtone.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, which will change the default ringtone. Long pressing it, which will change the the volume.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery Status",
				Description: "Get Wireless Button battery status.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Read only: Normal battery level",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Read only: Low battery level",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Set value: Low battery alarm is cancelled",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Notifications",
				Description: "Enable/disable to send notifications to associated devices when the state of Doorbell is changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Notifications Low Battery State",
				Description: "Enable/disable to send notifications to associated devices (Group/n1) when the Wireless Button’s battery is in low battery state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 241,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pair the Wireless Button with Doorbell",
				Description: "Start the Wireless Button pairing mode and/nthe blue Led will blink slowly, short press the Wireless Button/nonce, if the blue Led change to be solid, which means the pairing/nis successful. Otherwise, repeat the steps./nIt will automatically exit the pairing mode after 8s if there is no/npressing action of the Wireless Button./nNote:/nYou can send this configuration Get CC to ask the pairing result:/nIf configuration report value=0x00000000, which means the/npairing is failed./nIf configuration report value =0xFFFFFFFF, which means the/npairing is successful.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Start the Wireless Button pairing mode.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008601040050() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Siren Gen 5 US",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0104",
		ProductID: "0050",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Siren Sound/Volume",
				Description: "Configure the Siren sound and its volume./n1, The value1 (low byte) is used to select the Siren sound :/nValue1=0, do not change the current Siren sound./nValue1=1, Siren sound 1 is selected./nValue1=2, Siren sound 2 is selected./nValue1=3, Siren sound 3 is selected./nValue1=4, Siren sound 4 is selected./nValue1=5, Siren sound 5 is selected./nOther values will be ignored. Default = 1/n2, The value2 (high byte) is used to adjust the volume:/nValue2=0, do not change the current volume./nValue2=1, set the volume to 88 dB./nValue2=2, set the volume to 100 dB./nValue2=3, set the volume to 105 dB./nOther values will be ignored. Default = 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 88 dB",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 100 dB",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 105 dB",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 1 is selected",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 2 is selected",
					},
					ConfigValue{
						From: 768,
						To: 768,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 3 is selected",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 4 is selected",
					},
					ConfigValue{
						From: 1280,
						To: 1280,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 5 is selected",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Siren changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable Lock Configuration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Settings",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008602010058() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Key Fob Gen5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0201",
		ProductID: "0058",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 250,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Group/Scene Mode",
				Description: "Enable selective Group Mode or Scene Mode when the/nKey Fob is in Use mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Group mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene mode",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset to Default Settings",
				Description: "Resets the configuration parameter to default factory setting",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New00860201005a() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Z-Stick Gen 5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0201",
		ProductID: "005a",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00860202004a() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Multi Sensor Gen5 ANZ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0202",
		ProductID: "004a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor report type on Get without instances",
				Description: "Which type of multi sensor report should be sent on multi sensor Get command without instances",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Temperature, humidity and luminance",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable motion sensor",
				Description: "Enable motion sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 1800,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008602020059() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Recessed Door Sensor Gen5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0202",
		ProductID: "0059",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "sensor binary report for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open =  0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "basic set for magnet switch",
				Description: "value, which is send when Magnet switch open/close",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "open = 00; close = 0xFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "open = 0xFF; close = 00",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "low battery voltage check function",
				Description: "parameter defines, if battery check function is possible, when battery is below warning voltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 86640,
				Name: "battery low check Interval time",
				Description: "minimum battery low check Interval time is 4 minutes/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval to check the battery status.",
					},
				},
			},
			ConfigParam{
				ID: 121,
				Type: "",
				Size: 4,
				Default: 256,
				Name: "Command to Associated Nodes",
				Description: "To set which command will be sent to the associated nodes when the magnet switch is triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Sensor/nBinary",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Basic/nSet ",
					},
					ConfigValue{
						From: 9,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Lock/ unlock all configuration parameters. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Unlock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Lock",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008602020064() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "MultiSensor 6 ANZ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0202",
		ProductID: "0064",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wake up 10 minutes when batteries are inserted",
				Description: "Stay awake for 10 minutes after batteries are inserted",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "On time",
				Description: "How long should the device associated to multi senor keep state On before sending it Off command (if the value is bigger than 255, the value would be rounded to next integer in minutes)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15300,
						Unit: "seconds",
						Reserved: false,
						Description: "delay",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Enable/disable the function of motion sensor. ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=1. (minimum level) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level = 2.   ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " enable, the current PIR sensitivity level=3.   ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=4.  ",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "enable, the current PIR sensitivity level=5. (maximum level) ",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Motion Detection",
				Description: "Which command would be sent when the motion/nsensor triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send Basic Set CC.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Sensor Binary Report CC.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " low battery value.",
				Description: "Configure low battery value. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 50,
						Unit: "%",
						Reserved: false,
						Description: "default value = 20 %",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reports for Parameters 41-44",
				Description: "Enable/disable the selective reporting only when/nmeasurements reach a certain threshold or percentage/nset in 41‐44 below.  This is used to reduce network/ntraffic. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature Automatic Report",
				Description: "Threshold change in temperature to induce an automatic report./nNote:/n1. When the unit is Celsius, threshold=Value./n2. When the unit is Fahrenheit, threshold=Value*1.8/nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Humidity Automatic Report",
				Description: "Threshold change in humidity to induce an automatic report./nThe accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "% RH",
						Reserved: false,
						Description: "Define a treshold for the humidity reports.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Luminance Automatic Report",
				Description: "Threshold change in luminance to induce an automatic report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold for the luminance reports.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Battery Automatic Report",
				Description: "Threshold change in battery level to induce an automatic report. The accuracy is 0.1./nThe high byte is the part of integer, the low byte is/nthe fractional part.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold for the battery level reports.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Threshold change in ultraviolet to induce an automatic report. ",
				Description: "Default Value = 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Low Temperature Alarm Report",
				Description: "1.Enable/disable to send the alarm report of low/ntemperature(&lt;‐15℃)/n2. Value=1, enable (The MultiSensor will report the/nMulti Level Temperature CC with the value=0xFFFF to/ncontroller if the current temperature is less than ‐/n15℃)./nNote: The battery activity will be reduced at low/ntemperatures (‐15 degrees Celsius and below), which/nwill lead to the product may not work normally. It is/nrecommended to use USB power at low temperatures.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable to send the alarm report of low temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable to send the alarm report of low temperature",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 225,
				Name: "Send unsolicited reports periodicaly. Interval group 1",
				Description: "Which reports need to send automatically in timing intervals for group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperatur/ne",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminan/nce",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 2",
				Description: "Which reports need to send automatically in timing intervals for group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Send unsolicited reports periodicaly. Intervcal group 3",
				Description: "Which reports need to send automatically in timing intervals for group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Ultraviolet",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Temperature",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Humidity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Luminance",
					},
					ConfigValue{
						From: 8,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 1",
				Description: "Interval to send out reports to timing group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 2",
				Description: "Interval to send out reports to timing group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 3600,
				Name: "Unsolicitate reports interval for timing groups 3",
				Description: "Interval to send out reports to timing group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 2678400,
						Unit: "seconds",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 201,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =25.3℃ and the standard value = 23.2℃, so the/ncalibration value= 23.2℃ - 25.3℃= -2.1℃ (0xFFEB)./nIf the measure value =30.1℃ and the standard value = 33.2℃, so the calibration/nvalue= 33.2℃ - 30.1℃=3.1℃ (0x001F).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 202,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Humidity sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =80RH and the standard value = 75RH, so the calibration/nvalue= 75RH – 80RH= -5RH (0xFFFB)./nIf the measure value =85RH and the standard value = 90RH, so the calibration/nvalue= 90RH – 85RH=5RH (0x0005).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 203,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Luminance sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =800Lux and the standard value = 750Lux, so the/ncalibration value= 750 – 800= -50 (0xFFCE)./nIf the measure value =850Lux and the standard value = 900Lux, so the calibration/nvalue= 900 – 850=50 (0x0032).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 204,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ultraviolet sensor calibration",
				Description: "The calibration value = standard value - measure value./nE.g. If measure value =9 and the standard value = 8, so the calibration value= 8 –/n9= -1 (0xFE)./nIf the measure value =7 and the standard value = 9, so the calibration value= 9 –/n7=2 (0x02).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable all configuration parameters to be locked.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable all configuration parameters to be locked.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable all configuration parameters to be locked.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860203003e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Garage Door Controller Gen5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0203",
		ProductID: "003e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0066,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Startup Ringtone",
				Description: "Configure the default startup ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable the startup ringtone. /n",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Enable and select a startup ringtone for the Garage Door Controller.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor Calibration",
				Description: "Calibration Steps:/n1. Let the garage door move to full close position./n2. Send this parameter (0x22) with “value=1” to Garage Door/nController./n3. Let the garage door move to full open position./n4. Let the garage door move to full close position after the/nstep 3 is completed./nAfter the step 4 is complete, all calibration steps are complete.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable calibration.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Timeout of Calibration Steps",
				Description: "Set the timeout of all calibration steps for the Sensor. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Set the timeout of calibration.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Alarm Music",
				Description: "Get the numbers of alarm music.(not support Set CC) ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Get the number of alarm music.",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Opening",
				Description: "Configure the alarm mode for when the garage door is/nopening. /n Value1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 10./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 1./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode When Closing",
				Description: "Configure the alarm mode when the garage door is closing./nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 6./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 2./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Unknown Position",
				Description: "Configuration alarm mode when the garage door is in/n&#34;Unknown&#34; state:/nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 4./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 3./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm Mode Closed Position",
				Description: "Configure the alarm mode when the garage door is in closed/nposition. /nValue1: configure the frequency of blinking for the Alarm/nLED, there are 10 levels that 1 to10 level, the minimum/nfrequency is level 1 and the max frequency is level 10. Default is level 2./n Value2: configure the alarm sound (there are 4 types sound/nsaved in EEPROM and user also can update it). Default is type 4./n Value3: configure the volume of alarm sound (there are 10/nlevels, the min volume is 1 level and the max volume is 10/nlevels). Default is set to 8./nValue4=0, disable the alarm prompt./nValue4=1, enable the alarm prompt.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Configure the flash frequency of the alarm LED, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 256,
						To: 356,
						Unit: "",
						Reserved: false,
						Description: "Select an alarm sound, there are 4 alarm sounds in the flash memory card can be selected.",
					},
					ConfigValue{
						From: 65535,
						To: 65545,
						Unit: "",
						Reserved: false,
						Description: "Configure the volume of alarm sound, there are 10 levels can be set.",
					},
					ConfigValue{
						From: 16777215,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Disable the alarm mode.",
					},
					ConfigValue{
						From: 16777216,
						To: 16777216,
						Unit: "",
						Reserved: false,
						Description: "Enable the alarm mode.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tamper Switch State",
				Description: "Configuration report for the tamper switch State.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is installed on the garage door.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "The Sensor is removed from the garage door.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery State of Sensor",
				Description: "Configuration report for the battery state of Sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery is in normal state.",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Battery is in low battery state.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone",
				Description: "Start playing or Stop playing the ringtone.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "stop playing ringtone",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Start playing the ringtone that you/nselected. /n",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ringtone Volume",
				Description: "Test the volume of the current ringtone. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "There are 10 volume levels can be set for testing.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature",
				Description: "Get the environment temperature:/nThe temperature value contains one decimal point./nE.g. If the report value=252(0x00FC), the temperature is/n25.2℃./nRang is 0 to 500 (0 to 50.0℃). ",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Function of Button- or Button&#43;",
				Description: "Define the function of Button- and Button&#43;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be used to increase and decrease the volume. Press and hold it, the Button&#43; and Button- are defined to be the control item of Next and Previous.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Pressing it once, the Button&#43; and Button- are defined to be the control item of Next and Previous. Press and hold it, the Button&#43; and Button- are defined to be used to increase and decrease the volume.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications to Associated Devices",
				Description: "Enable/Disable to send notifications to associated devices.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BARRIER OPERATOR Report Command",
					},
				},
			},
			ConfigParam{
				ID: 241,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pair Sensor with Garage Door Controller",
				Description: "Send Configuration Set:/nValue=0x55555501, which will trigger to start the pairing of/nSensor (installed on the top of the garage door), at this time,/nthe Network LED on the Garage Door Controller will blink/nslowly and then short press Temper Switch back of the Sensor./nIf pairing is successful, the Network LED will stop blinking and/nthe Garage Door Controller will send the configuration report/nwith value=0x01FF to primary controller/gateway. Otherwise,/nrepeat the operation. /nNote:/n1. If you do not press the Temper Switch when starting the/npairing mode, the pairing status will keep for 8 second and/n- 4 /n9/n/nthen exit the pairing status automatically./n2. The Sensor has been paired with the Garage Door Controller/nafter factory. /n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1431655681,
						To: 1431655681,
						Unit: "",
						Reserved: false,
						Description: "Start the Sensor pairing mode.",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are not configurable (Locked).",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Reset all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New00860203004b() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Smart Switch Gen5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0203",
		ProductID: "004b",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Make Smart Switch blink.",
				Description: "/nConfiguration Value 1：1‐255 Configuration Value 1 is to specify the time that Smart Switch need blink, The unit is Second;   Configuration Value 2：1‐255 Configuration Value 2 is to specify the cycle of on/off, the unit of it is 0.1 second. For example: if we set Configuration Value 1 to &#39;15&#39;,Configuration Value 2 to &#39;10&#39;,then Smart Switch will open 0.5 second, close 0.5 second, and repeat for 14 times./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Overload Protection",
				Description: "/nCurrent Overload Protection. Load will be closed when the Current overrun (US: 15.5A, other country: 16.2A) and the time more than 2 minutes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of Micro Switch’s load changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "/nEnable/Disable the function of parameter 91 and 92./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 25,
				Name: "Automatic Report(W)",
				Description: "/nThe value here represents minimum change in wattage that will induce an automatic report (Meter Report for wattage) when the change of the current power is more/less than the threshold in wattage./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Automatic Report(%)",
				Description: "/nThe value here represents minimum change in wattage percent will induce an automatic report (Meter Report for wattage) when the change of the current power is more/less than the threshold in percentage./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "Time Interval Group 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAll configuration parameters are not configurable (Locked)./n",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nResets all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New00860203004e() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Heavy Duty Smart Switch Gen5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0203",
		ProductID: "004e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "/nCurrent Overload Protection. Load will be closed when the Current more than 39.5A and the time more than 5 seconds./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The load status after power on",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nThe load state will back to the last state after power on./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The load state will always on after re-power on.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nThe load state will always off stare after re-power on./n",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications to Associated Devices",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of Heavy Duty Smart Switch Gen5’s load changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send Nothing (Disabled)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Function of Parameters 91 and 92",
				Description: "Enable/Disable the function of parameter 91 and 92",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Configuration Parameters 91 and 92 are Enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Induce an automatic report (W)",
				Description: "/nThe value here represents minimum change in wattage (in terms of wattage) for a REPORT to be sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 38303,
						Unit: "W",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Induce an automatic report (%)",
				Description: "/nThe value here represents minimum change in wattage percent (in terms of percentage) for a REPORT to be sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 4,
				Name: "Group 1 Reports",
				Description: "Which reports need to send in Report group 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 8,
				Name: "Group 2 Reports",
				Description: "Which reports need to send in Report group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Group 3 Reports",
				Description: "Which reports need to send in Report group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Time Interval Group 1",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 2",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 120,
				Name: "Time Interval Group 3",
				Description: "Set the interval time of sending report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2147483647,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to default factory setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nResets all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008602030060() *Device{
	return &Device{
		Brand: "Aeon Labs",
		Product: "Smart Switch 6 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0203",
		ProductID: "0060",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Overload Protection",
				Description: "Load will be closed when the Current overrun (US: 15.5A, other country: 16.2A) and the time more than 2 minutes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Load Status",
				Description: "Configure the output load status after re-power on",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last status",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "always on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "always off",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Set the RGB LED color value for testing",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Range of red color value.",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Range of green color value.",
					},
					ConfigValue{
						From: 16777215,
						To: 2147483647,
						Unit: "",
						Reserved: false,
						Description: "Range of blue color value.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "notifications to associated devices",
				Description: "Enable to send notifications to associated devices (Group 1) when the state of Micro Switch’s load changed/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure the state of LED",
				Description: "Configure the state of LED when it is in 3 modes",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nThe LED will follow the status (on/off) of its load (Energy mode)./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nWhen the state of Switch’s load changed, The LED will follow the status (on/off) of its load, but the red LED will turn off after 5 seconds if there is no any switch action (momentary indicate mode)/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Night light mode",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "RGB value",
				Description: "Configure the RGB value when it is in Night light mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of red Led.",
					},
					ConfigValue{
						From: 256,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of green Led.",
					},
					ConfigValue{
						From: 65536,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Set the indication value of blue Led.",
					},
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Configure the brightness level of RGB LED",
				Description: "Configure the brightness level of RGB LED (0%-100%) when it is in Energy Mode/momentary indicate mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a brightness level.",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enables/disables parameter 91/92",
				Description: "Enables/disables parameter 91 and 92 below",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 91,
				Type: "",
				Size: 4,
				Default: 25,
				Name: "Report of minimum change in wattage",
				Description: "The value here represents minimum change in wattage (in terms of wattage) for a REPORT to be sent/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60000,
						Unit: "W",
						Reserved: false,
						Description: "minimum change in wattage",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Minimum change in wattage in percent",
				Description: "The value here represents minimum change in wattage percent (in terms of percentage) for a REPORT to be sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "minimum change in wattage percent",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 101-103 to default",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default value not available",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 103,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Which reports need to send in Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for voltage at the group time interval/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for current) at the group time interval/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPOR T (for watt) at the group time interval/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nAuto send Meter REPORT (for kWh) at the group time interval/n",
					},
					ConfigValue{
						From: 4,
						To: 31,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set 111-113 to default.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 111,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 1",
				Description: "The time interval of sending Report group 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 112,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 2",
				Description: "The time interval of sending Report group 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 113,
				Type: "",
				Size: 4,
				Default: 600,
				Name: "time interval 3",
				Description: "The time interval of sending Report group 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 268435456,
						Unit: "s",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Enable/disable Configuration Locked",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Device Tag",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Reset configuration",
				Description: "Reset configuration set up to default setting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nResets all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008602030062() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "LED Bulb ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0203",
		ProductID: "0062",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0033,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Use of External Switch",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulb./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Use of External Switch(Color)",
				Description: "/nEnable/disable the function of using external switch to turn on/off the bulbs color./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Notifications",
				Description: "/nEnable to send notifications to associated devices (Group 1) when the state of LED Bulb is changed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "send nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send HAIL Command",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send BASIC Report Command",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/Disable Lock Configuration",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All configuration parameters are configurable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nAll configuration parameters are not configurable (Locked)./n",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset Parameters",
				Description: "Reset to default factory setting",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nReset all configuration parameters to default setting./n",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "/nReset the product to default factory setting and be excluded from the Z-wave network./n",
					},
				},
			},
		},
	}
}
func New008602040050() *Device{
	return &Device{
		Brand: "Aeotec",
		Product: "Siren Gen 5 ANZ",
		Description: "/n            /n          ",

		ManufacturerID: "0086",
		ProductType: "0204",
		ProductID: "0050",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Siren Sound/Volume",
				Description: "Configure the Siren sound and its volume./n1, The value1 (low byte) is used to select the Siren sound :/nValue1=0, do not change the current Siren sound./nValue1=1, Siren sound 1 is selected./nValue1=2, Siren sound 2 is selected./nValue1=3, Siren sound 3 is selected./nValue1=4, Siren sound 4 is selected./nValue1=5, Siren sound 5 is selected./nOther values will be ignored. Default = 1; /n/n2, The value2 (high byte) is used to adjust the volume:/nValue2=0, do not change the current volume./nValue2=1, set the volume to 88 dB./nValue2=2, set the volume to 100 dB./nValue2=3, set the volume to 105 dB./nOther values will be ignored. Default = 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 88 dB",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 100 dB",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Set the volume to 105 dB",
					},
					ConfigValue{
						From: 256,
						To: 256,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 1 is selected",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 2 is selected",
					},
					ConfigValue{
						From: 768,
						To: 768,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 3 is selected",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 4 is selected",
					},
					ConfigValue{
						From: 1280,
						To: 1280,
						Unit: "",
						Reserved: false,
						Description: "The siren sound 5 is selected",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Notifications",
				Description: "Enable to send notifications to associated devices (Group 1)/nwhen the state of Siren changed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "nothing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hail CC",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic CC report",
					},
				},
			},
			ConfigParam{
				ID: 200,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Partner ID",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Aeon Labs Standard Product",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Partner ID of Partner Product",
					},
				},
			},
			ConfigParam{
				ID: 252,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lock Configuration",
				Description: "Enable/disable Lock Configuration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 4,
				Default: 1,
				Name: "Reset to Default Factory Settings",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Resets all configuration parameters to default setting.",
					},
					ConfigValue{
						From: 1431655765,
						To: 1431655765,
						Unit: "",
						Reserved: false,
						Description: "Reset the product to default factory setting and be excluded from the Z-wave network.",
					},
				},
			},
		},
	}
}
func New008900010101() *Device{
	return &Device{
		Brand: "Easy Light",
		Product: "Switch Link",
		Description: "/n            /n          ",

		ManufacturerID: "0089",
		ProductType: "0001",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Last Status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to resume the last status/nbefore the AC power goes down.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to always turn the lights/nON when the AC power goes up.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to always turn the light/nOFF when AC power line goes up.",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Night Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When the light is turn ON, LED on the module is/nturn ON and vice versa.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When the light is turn ON, LED on the module is/nturn OFF and vice versa.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable LED",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable LED.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable LED to operate according to night light/nparameter.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Enable All ON/All OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable both All ON and All OFF command.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable only All OFF command.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable only All ON command.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enable both All ON and All OFF command.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button Protection",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "User can use button for ON/OFF manual control.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "This setting value is used to protect a module/nagainst unintentional control. To operate a/nmanual control requires pressing button 3 times/nwithin 1.5 seconds, the light will toggle to the/nnext stage. The light will turn off instantly if it is/nbeing on before setting.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable button from manual control. The light/nwill turn off instantly if it is being on before/nsetting.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delay In Time",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The light will be ON instantaneously once ON/ncommand is received.",
					},
					ConfigValue{
						From: 1,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "The module will detain the ON process for 1-5/nseconds up to user preferences.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Delay Out Time",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The light will be OFF instantaneously once OFF/ncommand is received.",
					},
					ConfigValue{
						From: 1,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "The module will detain the OFF process for 1-5/nseconds up to user preferences.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "FACTORY DEFAULT",
				Description: "Valid Values = Ignore configuration value/nThis command will reset the whole above command values to the/ndefault factory values",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008900020101() *Device{
	return &Device{
		Brand: "Easy Light",
		Product: "Dimmer Link",
		Description: "/n            /n          ",

		ManufacturerID: "0089",
		ProductType: "0002",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Last Status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to resume the last status/nbefore the AC power goes down.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to always turn the lights/nON when the AC power goes up.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "To enable the module to always turn the lights/nOFF when AC power line goes up.",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Night Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When the light is turn ON, LED on the module is/nturn ON and vice versa.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When the light is turn ON, LED on the module is/nturn OFF and vice versa.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable LED",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable LED.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable LED to operate according to night light/nparameter.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Enable All ON/All OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable both All ON and All OFF command.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable only All OFF command.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable only All ON command.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enable both All ON and All OFF command.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button Protection",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "User can use button for ON/OFF manual control.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "This setting value is used to protect a module/nagainst unintentional control. To operate a/nmanual control requires pressing button 3 times/nwithin 1.5 seconds, the light will toggle to the/nnext stage. The light will turn off instantly if it is/nbeing on before setting.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable button from manual control. The light/nwill turn off instantly if it is being on before/nsetting.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Fade In Slope",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "These valid values control a ramp up time/nperiod. With default value (7), the lights will/nturn on from zero to the last dimming level by 7/nseconds. Usually this command designed for/nprolonging a filament and making the room to/nbe more attraction.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Fade Out Slope",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Fade in Slope and Fade Out Slope is the same/nconcept in which Fade Out Slope command/ncontrols a turn off time period, so Fade Out/nSlope will ramp an intensity of the light down to/nzero within 7 seconds if the valid value sets to/nthe default.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Dim Slope",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Dim Slope command can control a dim step by/nshrinking or extending dimming time period. If/nthe value sets to the default, the dimming step/nduration will be 7 seconds from minimum to/nmaximum level or vice versa.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Minimum Dim Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "This is a minimum threshold value to avoid the/nconfusion between low dim value stage and/nturn-off stage especially with the low wattage/nlamps. The light bulbs will illuminate a little/nportion of intensity if the value sets to the/ndefault (20).",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum Dim Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 51,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Maximum dim level is a mirror of minimum dim/nlevel that means it is used to defining the/nheadroom of the light level which does not/nexceed default value (99). The Maximum dim/nlevel will influence the value of maximum on/nlevel in multilevel switch command class.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore Start Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "This value indicated to use the start level/nspecified in the Multilevel Switch Start Level/nChange Command.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "This indicates to start dimming from the latest/nlight level.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Jump to Dim",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Jump to dim level. The master remote/ncontrol cannot dim the lights from the off stage",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable Jump to dim level which means user can/njump to dim stage from the off stage without/nturning on the light.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Dim Direction",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The first time user dims the light, it will go in/nthe dim up direction to the maximum dim level/nand follow by dim down direction respectively.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The first time user dims the light, it will go in/nthe dim down direction to the minimum dim/nlevel and follow by dim up direction respectively.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The dim direction will be a toggle mode. The/nfirst time user dims the light it will go in/nopposite direction of previous dim direction.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "FACTORY DEFAULT",
				Description: "Valid Values = Ignore configuration value/n/nThis command will reset the whole above command values to the/ndefault factory values",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008900030001() *Device{
	return &Device{
		Brand: "Easy Light",
		Product: "Zuper Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0089",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008900030101() *Device{
	return &Device{
		Brand: "Easy Light",
		Product: "Zuper Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0089",
		ProductType: "0003",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008a00010100() *Device{
	return &Device{
		Brand: "myGate",
		Product: "myGate",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0001",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008a,
			},
			&CommandClass{
				ID: 0x008c,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009a,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0093,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Current Lifestyle",
				Description: "Obtain / Change the current lifestyle (set of active rules) of the myGate. / Sending 0x21 will cause lifestyle Home (0x20) to be activated./nSending 0x41 will cause lifestyle Home (0x40) to be activated. Not listed values will reset the lifestyle-system to disabled (0x00).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No lifestyle selected",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Home 1",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Home 2",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Home 3",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Home 4",
					},
					ConfigValue{
						From: 64,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "Away 1",
					},
					ConfigValue{
						From: 66,
						To: 66,
						Unit: "",
						Reserved: false,
						Description: "Away 2",
					},
					ConfigValue{
						From: 67,
						To: 67,
						Unit: "",
						Reserved: false,
						Description: "Away 3",
					},
					ConfigValue{
						From: 68,
						To: 68,
						Unit: "",
						Reserved: false,
						Description: "Away 4",
					},
					ConfigValue{
						From: 96,
						To: 96,
						Unit: "",
						Reserved: false,
						Description: "Sleep",
					},
					ConfigValue{
						From: 128,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "Party",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lifestyle lock",
				Description: "Check if lifestyles are locked for security reasons.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No Lock",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Locked",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "External Screen page",
				Description: "Obtain/Change the current page displayed on external displays using/nthe Screen Meta Data Command Class./nWhat is displayed on each of these pages can be configured using the/n2MyHome Graphical Web interface.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New008a00020100() *Device{
	return &Device{
		Brand: "myDisplay",
		Product: "myDisplay",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0002",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0093,
			},
			&CommandClass{
				ID: 0x0092,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "myDisplay ",
				Description: "This device supports 4004 configuration paramenters. A detailed description would exceed this data entry. Please refer to &#34;Quickstart &amp; Technical Manual&#34;.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New008a00030100() *Device{
	return &Device{
		Brand: "MoLiTe Sensor",
		Product: "MoLiTe Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0003",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0071,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set to default",
				Description: "Set all config values to default values (factory settings). Read more in/nchapter configuration Reset.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "set to default",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "Mode timeout",
				Description: "The time used in mode 2 to turn the sensor off. This/nTime will start running as soon as detection is seen.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "seconds",
						Reserved: false,
						Description: "time until the sensor turns off",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 2700,
				Name: "Switch off time",
				Description: "The switch off time will start running as soon as mode timeout is done./nMotion sensor is turned on and when movement is/ndetected again the mode timeout (cfg param 1) will start running all/nover again./nWhen switch off time is done a basic off message is sent to the/nassociated node.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "time until the switch turns off",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "Sensitivity",
				Description: "Sensitivity value between 0 and 127 (values above 127 will be reported/nas the set value but will be handled in SW as 127).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "sensitivity value",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "The mode",
				Description: "The mode that is entered after detection. If mode is 0 or higher then 3, that value will be reported after a get but/nwill be handled in SW as mode 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "no detection possible. Battery save mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "normal operation mode: send on after detection and off after/ngiven time no detection",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Z-Wave chip is always on to request e.g. version or/nmanufacturer id",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "The temperature offset",
				Description: "A offset for the temperature",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "A signed integer to determine the offset off the temperature",
					},
				},
			},
		},
	}
}
func New008a00040100() *Device{
	return &Device{
		Brand: "Door Sensor",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0004",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set to default",
				Description: "Set all config values to default values (factory settings)./nRead more in chapter Configuration Reset.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "If 0xFF then set to default",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "External contact",
				Description: "Configure what the external contact sends when trigger.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Send a alarm report with type 2",
					},
					ConfigValue{
						From: 255,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send a Basic set frame to all nodes in association group 2.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The mode",
				Description: "The operating mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal operating mode.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Z-Wave chip is always on to request e.g. version or/nmanufacturer id.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "If any mode other then 3, that value will be reported after a get but/nwill be handled in SW as mode 1.",
					},
					ConfigValue{
						From: 4,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "If any mode other then 3, that value will be reported after a get but/nwill be handled in SW as mode 1.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "The temperature offset",
				Description: "A offset for the temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "A signed integer to determine the offset off the temperature.",
					},
				},
			},
		},
	}
}
func New008a00060100() *Device{
	return &Device{
		Brand: "Energy Switch",
		Product: "Energy Switch",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0006",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set to default",
				Description: "Set all config values to default values (factory settings). Read more in chapter Factory Reset.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set to default",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Measure Decimals",
				Description: "The number of decimals the instant energy is reported",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 decimals",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 decimal",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 decimals",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 decimals. Every value higher then 3 will be reported as the value that is set but/nhandled in SW as if it was 3",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Power limit",
				Description: "The relay automatically switches off when the instant measured/npowered is higher then configured value",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no power limit is selected",
					},
					ConfigValue{
						From: 1,
						To: 3600,
						Unit: "",
						Reserved: false,
						Description: "variable power limit. &gt; 3600 will be reported as the set value but will be handled in SW as/n3600",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Startup with last known socket status",
				Description: "The state in what the switch is when power is supplied",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "when power applied socket is always off",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "when power applied socket is the state bevore power was disconnected",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature offset",
				Description: "A offset for the temperature",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "A signed integer to determine the offset off the temperature",
					},
				},
			},
		},
	}
}
func New008a00070100() *Device{
	return &Device{
		Brand: "Tag Reader",
		Product: "Tag Reader",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0007",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set to default",
				Description: "Set all configuration values to default values (factory settings)./nRead more in chapter Configuration Reset.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "If 0xFF (-1) then set to default",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Feedback time",
				Description: "To configure the time the beep is automatically turned off in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Endless",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Feedback timeout",
				Description: "To configure the timeout to wait for a/nWAKEUP_NO_MORE_INFORMATION before the error beep is automatically sound. The error beep are fixed 8 beeps shortly after each other.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "0x00 means disabled ",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Feedback beeps per second",
				Description: "To configure the number of beeps per second. Every beep is fixed about 10ms.",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "10ms",
						Reserved: false,
						Description: "Number of beeps per second",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The mode",
				Description: "To configure the operating mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal operating mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Z‐Wave chip is always on to request e.g. version or manufacturer id.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "If any mode other then 3, that value will be reported after a get but/nwill be handled in SW as mode 1.",
					},
					ConfigValue{
						From: 4,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "If any mode other then 3, that value will be reported after a get but/nwill be handled in SW as mode 1.",
					},
				},
			},
		},
	}
}
func New008a00080100() *Device{
	return &Device{
		Brand: "Power Switch",
		Product: "Power Switch",
		Description: "/n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0008",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 85,
				Name: "Set to default",
				Description: "Set all config values to default values (factory settings).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "All values (0x00 – 0xFF) except for 0x55 can be used to default all the/nconfiguration params.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Startup with last known socket status",
				Description: "The state in what the switch is when power is supplied.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When power applied socket is always off.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "When power applied socket is the state before power/nwas disconnected.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature offset",
				Description: "A offset for the temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "A signed integer to determine the offset off the temperature.",
					},
				},
			},
		},
	}
}
func New008a00180100() *Device{
	return &Device{
		Brand: "BeNext",
		Product: "Plug-in Dimmer",
		Description: "/n            /n            /n          ",

		ManufacturerID: "008a",
		ProductType: "0018",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008c00010001() *Device{
	return &Device{
		Brand: "MIOS",
		Product: "Vera Lite",
		Description: "/n            /n            /n          ",

		ManufacturerID: "008c",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0081,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New008e01010101() *Device{
	return &Device{
		Brand: "Raritan",
		Product: "SM 230",
		Description: "/n            /n            /n          ",

		ManufacturerID: "008e",
		ProductType: "0101",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0028,
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x007a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Frequency",
				Description: "Frequency of Mains",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "Hz",
						Reserved: false,
						Description: "50 Hz mains",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "hz",
						Reserved: false,
						Description: "60 Hz mains",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Protection",
				Description: "Remote Protection",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on",
					},
				},
			},
		},
	}
}
func New009000010001() *Device{
	return &Device{
		Brand: "Kwikset",
		Product: "Smart Code with Home Connect Technology 2012",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0090",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x004c,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008b,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005d,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 3",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 4",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 5",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 6",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)Reserved ",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 7",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 8",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 9",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 10",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 11",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 12",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 13",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 14",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 15",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 16",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 17",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 18",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 19",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 20",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 21",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 22",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 23",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 24",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 25",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 26",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 27",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 28",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 29",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code Type 30",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Owner",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Worker (Required for Week Day Schedules)",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Reserved ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Value of 0xFF is returned when there is no corresponding user/ncode for the requested. (Ignored for write)",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dipswitches state",
				Description: "Read only bit mask field that returns the state of the user accessible dipswitches on the door look",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power level",
				Description: "Set the power level of the door lock for inclusion/exclusion to/from a Z-Wave network",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Low power inclusion/exclusion",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal power inclusion/exclusion",
					},
					ConfigValue{
						From: 2,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Undefined (ignored)",
					},
				},
			},
		},
	}
}
func New009000010236() *Device{
	return &Device{
		Brand: "Kwikset",
		Product: "Smart Code with Home Connect Technology",
		Description: "/n            /n          ",

		ManufacturerID: "0090",
		ProductType: "0001",
		ProductID: "0236",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x004c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005d,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "User Code",
				Description: "Parameter is used to set the User Code Type for their corresponding user codes. The door lock will only retain valid user code types (0x01, 0x03, and 0x04), all other values will be ignored. If a user code does not exist for the corresponding configuration parameter the lock will report a configuration value of 0xFF, attempts to change the user code type will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Owner (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "User Code Type: Reserved",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Guest (Required for Year Day Schedules)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nUser Code Type: Worker (Required for Week Day Schedules)/n",
					},
					ConfigValue{
						From: 5,
						To: 254,
						Unit: "",
						Reserved: true,
						Description: "User Code Type: Reserved",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dip Switches",
				Description: "Configuration parameter 31 is one byte read only bit mask field that returns the state of the user accessible/nDip-switches on the door look.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SKU Part Numbers",
				Description: "The Configuration Parameter 33 and 34 are used to set the SKU part numbers to the Kwikset locks. Configuration parameter 33 sets the first four most significant bytes (MSB)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SKU Part Numbers",
				Description: "The Configuration Parameter 33 and 34 are used to set the SKU part numbers to the Kwikset locks. Configuration parameter 34 sets the least four significant bytes (LSB)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Default Factory Set",
				Description: "The configuration Parameter 40 is used to set the lock to its default factory, except for the anti-theft setting./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "read only",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "perform factory reset.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Inclusion/Exclusion",
				Description: "Configuration parameter 32 is a one byte field used to set the power level of the door lock for inclusion/exclusion to/nform a Z-Wave network. Note: The parameter is not reset to the default value of low power inclusion if the parameter/nis set to normal power inclusion/exclusion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Low power inclusion/exclusion (default value)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal power inclusion/exclusion",
					},
					ConfigValue{
						From: 2,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Undefined (ignored)",
					},
				},
			},
		},
	}
}
func New009201010001() *Device{
	return &Device{
		Brand: "FZ1-A-230",
		Product: "APz- Empfänger",
		Description: "/n            /n          ",

		ManufacturerID: "0092",
		ProductType: "0101",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009201020002() *Device{
	return &Device{
		Brand: "FZ1-U-230",
		Product: "UPz- Empfänger",
		Description: "/n            /n          ",

		ManufacturerID: "0092",
		ProductType: "0102",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 180,
				Name: "Self-retaining time &#34;Up&#34; ",
				Description: "Low-Byte",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Self-retaining time &#34;Up&#34;",
				Description: "High-Byte",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 180,
				Name: "Self-retaining time &#34;Down&#34;",
				Description: "Low-Byte",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Self-retaining time &#34;Down&#34;",
				Description: "High-Byte",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 25,
				Name: "Switch-over time",
				Description: "Up-Down / Down-Up",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "20ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Change of direction",
				Description: "Switching-operation-bit for change of direction",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "On",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Change-Direction-Duration ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "Sec",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New009400010101() *Device{
	return &Device{
		Brand: "Alarm.com",
		Product: "Alarm.com Interlogix Simon XT/i Radio Module",
		Description: "/n            /n          ",

		ManufacturerID: "0094",
		ProductType: "0001",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x004e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0047,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009400010102() *Device{
	return &Device{
		Brand: "Alarm.com",
		Product: "Alarm.com Hub",
		Description: "/n            /n          ",

		ManufacturerID: "0094",
		ProductType: "0001",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009500000000() *Device{
	return &Device{
		Brand: "QEES",
		Product: "QEES MyKey (EU)",
		Description: "/n            /n          ",

		ManufacturerID: "0095",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009500010000() *Device{
	return &Device{
		Brand: "QEES",
		Product: "QEES Ring",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0095",
		ProductType: "0001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009500010001() *Device{
	return &Device{
		Brand: "ai power",
		Product: "QEES Ring",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0095",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "??Network rediscovery",
				Description: "??This parameter determent if the device should start a rediscovery process after power on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Double press delay",
				Description: "This parameter determines how long should the device wait for second press to distingush press from double press: greater the value - shorte the time to wait.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Delay",
					},
				},
			},
		},
	}
}
func New009500030000() *Device{
	return &Device{
		Brand: "ai power",
		Product: "QEES Power",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0095",
		ProductType: "0003",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x00ef,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Network rediscovery",
				Description: "This parameter determent if the device should start a rediscovery process after power on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 168,
				Name: "Automatic network update delay",
				Description: "This parameter determent the time between automatic network update initiated by the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Time = (256 * value) seconds",
					},
				},
			},
		},
	}
}
func New009531010001() *Device{
	return &Device{
		Brand: "",
		Product: "RETO Switch Plus 2013",
		Description: "/n            /n          ",

		ManufacturerID: "0095",
		ProductType: "3101",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009531030001() *Device{
	return &Device{
		Brand: "",
		Product: "Schuko Switch Plus 2013",
		Description: "/n            /n          ",

		ManufacturerID: "0095",
		ProductType: "3103",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009600010001() *Device{
	return &Device{
		Brand: "NorthQ",
		Product: "Electrical Meter (Energy Guard)",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0096",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 1024,
				Name: "Pulse Factor",
				Description: "How many pulses are counted per 10  kWh",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Pulses",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR listening period",
				Description: "Additional time for measuring feedback (only for wheel meters)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR pulse width",
				Description: "Infrared output power feedback target (increase IR power until we reach this level in average feedback)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Poll frequency",
				Description: "How many times to wakeup per second",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "times",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Pulse Threshold Low",
				Description: "Low detection threshold for wheel meters  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 143,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Pulse Threshold High",
				Description: "High detection threshold for wheel meters",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 143,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Wakeup Interval",
				Description: "like WAKEUP command class",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 3,
				Name: "Keep Alive Period",
				Description: "How many seconds of inactivity to be awake before going back to sleep",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Realtime Mode",
				Description: "How many seconds before going out of realtime / always on mode. Can be set to start realtime mode. Will be set by pressing button on device once. (twice clears realtime mode)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pulse Count",
				Description: "By setting this value the meter received a defined start value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4294967295,
						Unit: "",
						Reserved: false,
						Description: "Pulses",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Sensor Type",
				Description: "Defines the type of sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Pulse Meter",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Rotating Wheel",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Debug",
				Description: "Debug Mode",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED blinks at pulse counting",
					},
				},
			},
		},
	}
}
func New009600100001() *Device{
	return &Device{
		Brand: "NorthQ",
		Product: "Gas Meter (Energy Guard)",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0096",
		ProductType: "0010",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 1024,
				Name: "Pulse Factor",
				Description: "How many pulses are counted per 10  kWh",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Pulses",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Sensor Type",
				Description: "Defines the type of sensor",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "magnetic contact",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "silver spot meter",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR listening period",
				Description: "Additional time for measuring feedback (only for wheel meters)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR pulse width",
				Description: "Infrared output power feedback target (increase IR power until we reach this level in average feedback)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Poll frequency",
				Description: "How many times to wakeup per second",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "times",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Pulse Threshold Low",
				Description: "Low detection threshold for wheel meters  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 143,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Pulse Threshold High",
				Description: "High detection threshold for wheel meters",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 143,
						Unit: "",
						Reserved: false,
						Description: ".",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Wakeup Interval",
				Description: "like WAKEUP command class",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 3,
				Name: "Keep Alive Period",
				Description: "How many seconds of inactivity to be awake before going back to sleep",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Realtime Mode",
				Description: "How many seconds before going out of realtime / always on mode. Can be set to start realtime mode. Will be set by pressing button on device once. (twice clears realtime mode)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "s",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Pulse Count",
				Description: "By setting this value the meter received a defined start value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4294967295,
						Unit: "",
						Reserved: false,
						Description: "Pulses",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Debug",
				Description: "Debug Mode",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED blinks at pulse counting",
					},
				},
			},
		},
	}
}
func New009700000000() *Device{
	return &Device{
		Brand: "Wintop",
		Product: "iLED",
		Description: "/n            /n          ",

		ManufacturerID: "0097",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send NIF and start re-inclusion on",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "power on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "magnet button",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatically switch off after",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "in seconds",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Interpret RF Off command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "switch on",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "switch on if off else off",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore start level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Dimming speed",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Instantly",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "in 10ms",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Dimming long speed",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "in 1s",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set maximum light level on On command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "If alredy on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Always",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dimmer calibration bottom level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Dimmer calibration top level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Work as switch: only off and maximum",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Default on level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled (use previous)",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
		},
	}
}
func New009700240045() *Device{
	return &Device{
		Brand: "Wintop",
		Product: "iShutter",
		Description: "/n            /n          ",

		ManufacturerID: "0097",
		ProductType: "0024",
		ProductID: "0045",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Buttons Mode ",
				Description: "One button is used (chose any), press while moving up and down stops, while stopped moves to opposite direction to previous. // /nTwo buttons with neutral position: Up click moves up if stopped and stops if moving down, Down click moves down if stopped and stops if moving up, Hold Up/Down moves in up/down, Release stops. ///nTwo toggle switch: Switch to Up/Down moves up/down. // /nTwo paddles with Power and Direction: Hold Up button to move blinds up. If Down button is pressed, blinds will move down. Release Up button to stop. ///nTwo paddles with Power and Direction toggle: Hold Up button to move blinds up. Down button toggle between up and down motion./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "One push button (default)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Two paddles with Power and Direction",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Two toggle switch",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Two buttons with neutral position",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Two paddles with Power and Direction toggle",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatically close after ",
				Description: "If not zero, automatically switch off / close blind after a user defined time",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled (default)",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "seconds",
						Reserved: false,
						Description: "Close after this time (in s)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "What to do on RF off command ",
				Description: "Defines how to interpret RF Off command. Can be used in conjunction with Auto Close function: Ignore - to open the door by motion detectors and close it back after some amount of time: in case of multiple motion detectors each would try to open that would break logics; Open - to open on both On and Off paddle press on the remote and close after some amount of time. Button close click will still work (if button operations are not disabled). Note that Dim Down command will still begin close motion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off (default)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Open if close, otherwise close",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Typical click timeout ",
				Description: "Typical time used to differentiate click, hold, double and triple clicks",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert buttons ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No (default)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Action on button  press or hold ",
				Description: "Defines which command should be sent to Association group on button press or hold. Scene mode will send 1 for Up event, 2 for Stop, 3 for Down.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On, Off and dim using Multilevel start/stop (default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Send Scene",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED mode ",
				Description: "Set LED indication mode",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Show working state (default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "always on",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "show opened state",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Indicator Command Class",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Full close time ",
				Description: "Time to go from opened to closed state. Used to estimate the current level. Note that in permanent motion mode the reported value would be closed or opened, while all Basic and Multilevel Set values (1…99, 255) would open except 0 value that would close.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "keep in permanent motion",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "seconds",
						Reserved: false,
						Description: "in s",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Full open time ",
				Description: "Time to go from closed to opened state. Used to estimate the current level. Note that in permanent motion mode the reported value would be closed or opened, while all Basic and Multilevel Set values (1…99, 255) would open except 0 value that would close.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "keep in permanent motion",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "seconds",
						Reserved: false,
						Description: "in s",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Node Id of the blocking device ",
				Description: "Id of the blocking device. Commands from this device would be interpreted not as Open/Close, but as block/unblock. Useful with door opening detector: if the door is open, block the blind not to break shades while they move.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled (default)",
					},
					ConfigValue{
						From: 1,
						To: 232,
						Unit: "",
						Reserved: false,
						Description: "Node Id of the blocking device ",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "On which command from blocking node to enable the protection ",
				Description: "Defines which command from blocking device to interpret as closed door and hence, unprotected. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on “On” (default)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on “Off” ",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Open and Close relays ",
				Description: "Allow exchanging open and close relays if blind control is wired to the motor incorrectly",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No (default)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 254,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset to factory Default ",
				Description: "Attention: This will delete all your configuration, but the device will remain in the network. Handle with care.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New009711824501() *Device{
	return &Device{
		Brand: "Wintop",
		Product: "iTemp",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0097",
		ProductType: "1182",
		ProductID: "4501",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset",
				Description: "Resets the device",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal operation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reset",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command Sent on Dry Input",
				Description: "Defines the type of command sent when dry input triggers",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Alarm Report Type 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Basic On or Off",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Defines ￼if the sensor is in normal – ￼wakeup- mode or always on. This ￼function shall be used only for testing ￼since its draining the battery very fast",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "normal mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "always awake",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Offset",
				Description: "Allows to calibrate the temperature measurement function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 K",
					},
					ConfigValue{
						From: 206,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Temperature Offset in K",
					},
				},
			},
		},
	}
}
func New009761314501() *Device{
	return &Device{
		Brand: "Zipato (Wintop)",
		Product: "Mini Keypad &amp; RFID Reader",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0097",
		ProductType: "6131",
		ProductID: "4501",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0063,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сброс на заводские настройки",
				Description: "Сбросить все конфигурационные параметры на значения по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Сбросить на заводские настройки",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Длительность звукового сигнала при отправке команды Вкл (SwitchBinary)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время через которое панель уходит в сон",
				Description: "Если в течении заданного времени от контроллера не придет команды уйти в сон (WAKEUP_NO_MORE_INFORMATION), панель издаст 8 коротких звуковых сигнала и уйдет в сон.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Количество звуковых сигналов в секунду",
				Description: "Количество звуковых сигналов, которое издает панель в секунду. Длительность каждого звукового сигнала 10мс. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы: спящее/постоянно работающее",
				Description: "В спящем режиме панель периодически просыпается и принимает команды, например включить звуковой сигнал, в таком режиме панель проработает от батареек больше 1 года. В режиме постоянной работы панель мгновенно реагирует на команды, но батарейки могут сеть за несколько дней.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Спящий режим",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Режим постоянной работы",
					},
				},
			},
		},
	}
}
func New009761315101() *Device{
	return &Device{
		Brand: "Zipato (Wintop)",
		Product: "Mini Keypad &amp; RFID Reader",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0097",
		ProductType: "6131",
		ProductID: "5101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0063,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сброс на заводские настройки",
				Description: "Сбросить все конфигурационные параметры на значения по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Сбросить на заводские настройки",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Длительность звукового сигнала при отправке команды Вкл (SwitchBinary)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время через которое панель уходит в сон",
				Description: "Если в течении заданного времени от контроллера не придет команды уйти в сон (WAKEUP_NO_MORE_INFORMATION), панель издаст 8 коротких звуковых сигнала и уйдет в сон.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Количество звуковых сигналов в секунду",
				Description: "Количество звуковых сигналов, которое издает панель в секунду. Длительность каждого звукового сигнала 10мс. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 128,
						To: 127,
						Unit: "10ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы: спящее/постоянно работающее",
				Description: "В спящем режиме панель периодически просыпается и принимает команды, например включить звуковой сигнал, в таком режиме панель проработает от батареек больше 1 года. В режиме постоянной работы панель мгновенно реагирует на команды, но батарейки могут сеть за несколько дней.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Спящий режим",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Режим постоянной работы",
					},
				},
			},
		},
	}
}
func New009769415501() *Device{
	return &Device{
		Brand: "Wintop",
		Product: "iPlug",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0097",
		ProductType: "6941",
		ProductID: "5501",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Set to default",
				Description: "Set all config values to default values (factory settings)./nRead more in chapter Configuration Reset.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 84,
						Unit: "",
						Reserved: false,
						Description: "default all the/nconfiguration parameters",
					},
					ConfigValue{
						From: 86,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "default all the/nconfiguration parameters",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Startup with last known socket status",
				Description: "The state in what the switch is when power is supplied.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When power applied socket is always off.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "When power applied socket is the state before power was disconnected.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature offset",
				Description: "A offset for the temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32768,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "A signed integer to determine the offset off the temperature.",
					},
				},
			},
		},
	}
}
func New00980001001e() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "RTM Z-Wave Module",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "0001",
		ProductID: "001e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0093,
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0044,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00981e12015e() *Device{
	return &Device{
		Brand: "Radio Thermostat",
		Product: "CT 30",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "1e12",
		ProductID: "015e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Reporting Threshold",
				Description: "The Temperature Reporting Threshold Configuration Set Command sets the reporting threshold for changes in the ambient temperature as detected by the thermostat.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5 °F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1.0 °F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5 °F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2.0°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "HVAC Settings",
				Description: "Read-only",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "HVAC Setup: Normal (0x01) or Heat Pump (0x02)",
					},
					ConfigValue{
						From: 8,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Number of Auxiliary Stages (Heat Pump) / Number of Heat Stages (Normal)",
					},
					ConfigValue{
						From: 12,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Aux Setup:/nGas (0x01) or Electric (0x02)",
					},
					ConfigValue{
						From: 16,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Number of Heat Pump Stages",
					},
					ConfigValue{
						From: 24,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Number of Cool Stages",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock Enable/Disable",
				Description: "The Utility Lock Configuration Set command enables or disables the utility lock. If the utility lock is enabled, the setpoint cannot be modified directly via the thermostat screen.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Utility lock disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Utility lock enable",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire / Battery Status",
				Description: "Read-only",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "C-Wire",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Humidity Reporting Threshold",
				Description: "The Humidity Threshold Configuration Set Command sets the reporting threshold for changes in the relative humidity as detected by the thermostat.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10%RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "The Auxiliary/Emergency configuration command enables or disables auxiliary / emergency heating in the thermostat. Auxiliary / emergency heating is only available if the thermostat is configured in heat pump mode and with at least one stage of auxiliary heating. This command enables auxiliary / emergency heating when the thermostat is in Auto mode. The Thermostat Set Mode command with mode Auxiliary/Emergency Heat will enable emergency heating but only if the thermostat is in Heat mode. This command should only be used on thermsotats that support Auxiliary/Emergency Heat thermostat mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auxiliary/Emergency heat disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auxiliary/Emergency heat enabled",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Thermostat Swing Temperature",
				Description: "The Thermostat Swing Temperature configuration command sets swing temperature on the thermostat. The swing temperature is applied to the setpoint to determine when the thermostat will turn on the HVAC system. If the thermostat is heating, the swing temperature is subtracted from the heat setpoint. If the thermostat is cooling, the swing temperature is added to the cool setpoint.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "1 = 0.05F, 2 = 0.1F, 8 = 4F",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Thermostat Diff Temperature",
				Description: "The Thermostat Differential Temperature configuration command sets the differential temperature for multi-stage HVAC systems. The differential temperature delta defines when the thermostat will turn on additional stages. There are two differential temperatures, one for multistage cool systems and one for multistage heat systems. If the thermostat is not configured for multistage HVAC systems then these parameters have no effect.",
				Values: []ConfigValue{
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2.0F",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "4.0F",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "6.0F",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Thermostat Recovery Mode",
				Description: "The Thermostat Recovery Mode configuration command sets the HVAC recovery mode type. The recovery mode determines when additional HVAC stages are turned off as the ambient temperature returns to the target temperature. If the recovery mode is set to economy, the thermostat will turn off additional HVAC stages when the ambient temperature reaches the target temperature plus/minus the differential temperature. If the recovery mode is set to fast, the thermostat will leave all stages on (assuming they were already on) until the ambient temperature reaches the target temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode fast ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode economy ",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 124,
				Name: "Temperature Reporting Filter",
				Description: "The Temperature Reporting Filter configuration command sets upper and lower bounds of the ambient temperature reporting. The thermostat will not report ambient temperature changes if the ambient temperature falls between these bounds. For example, if the upper bound is 80F and the lower bound is 60F, the thermostat will not send SENSOR_MULTI_LEVEL_REPORTS for ambient temperature values between 60F and 80F. The thermostat will only send ambient temperature changes if the thermostat has been added to an association group (see Command Class Association) and the temperature reporting threshold is non-zero (see Temperature Reporting Threshold).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 124,
						Unit: "F",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New009820020100() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "2002",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temp Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "HVAC Settings (get only)",
				Description: "Byte 1 = HVAC Setup: Normal (0x01) or Heat Pump (0x02)/nByte 2 = Aux Setup(Gas (0x01) or Electric (0x02)) &amp; Number of Auxiliary Stages (Heat Pump)/Number of Heat Stages (Normal)/nByte 3 = Number of Heat Pump Stages/nByte 4 = Number of Cool Stages",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock Enable/Disable ",
				Description: "The parameter defines the state of the utility lock./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire/Battery Status",
				Description: "The parameter defines the power mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered from a C-wire.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered off of batteries.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Humidity Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10% RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "If set to 0, auxiliary / emergency heat is disabled, all other values, 1-255, will enable the auxiliary / emergency heat. This can only be enabled when the thermostat is set to Heat Pump mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Swing Temp",
				Description: "The swing temperature is applied to the setpoint to determine when the thermostat/nwill turn on the HVAC system. If the thermostat is heating, the swing temperature is subtracted/nfrom the heat setpoint. If the thermostat is cooling, the swing temperature is added to the cool/nsetpoint./n/n/nThe thermostat swing temperature is in units of 0.5 degrees Fahrenheit. A value of 0x01 is 0.05F and 0x02 is 1.0F. The supported values may vary from thermostat to thermostat but typically the allowed values are 0.5F (0x01) to 4.0F (0x08)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "2.5°F",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "3°F",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "3.5°F",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "4°F",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "Thermostat Diff Temp",
				Description: "The Thermostat Differential Mode determines which differential temperature to set. Valid values are 0x00 (Heat) or Cool (0x01) Thermostat Differential Temperature (8-bit): The thermostat differential temperature is in units of 0.5 degrees Fahrenheit. A value of 0x04 is 2.0F and 0x06 is 3.0F. The differential temperature must be an integer value. Non-integer values, such as 1.5F (0x03), should not be used. The supported values may vary from thermostat to thermostat but typically, the allowed values are 2.0F (0x04) to 6.0F (0x0C)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Recovery Mode",
				Description: "The parameter defines the thermostat recovery mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to fast.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to economy.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temp Reporting Filter",
				Description: "Parameter (8-bit): The parameter is set to 10 (0x0A) for the temperature reporting filter. Default (1-bit): If the default bit is set, the upper bound is zero (0) and the lower bound is 124. This disables the filter. Size (3-bit): The Size field must be set to 4 (100b). Precision (3-bits): The precision field describes what the precision of the temperature filter value. The filter must be zero (0x00). Scale (2-bits): The scale field indicates the temperature scale used, 0 indicate the use of the Celsius temperature scale and 1 indicates use of the Fahrenheit scale. Bound Size (3-bits): The size field indicates the number of bytes used for the temperature filter value. This field must be one (0x01). Temperature Filter Lower Bound (8-bit): The thermostat will report ambient temperature changes for temperature values less than the lower bound. This field must be between 0F and 124F. By default, this value is 124F (report all temperature changes). Temperature Filter Upper Bound (8-bit): The thermostat will report ambient temperature changes for temperature values greater than the upper bound. This field must be between 0F and 124F. By default, this value is 0F (report all temperature changes)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Simple UI Mode Enable/Disable",
				Description: "If set to 0, Simple UI Mode is disabled, if set to 1, will enable the Simple UI Mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multicast Enable/Disable",
				Description: "If set to 0, multicast is disabled, if set to 1, will enable the multicast./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
		},
	}
}
func New009820120100() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "2012",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temp Reporting Threshold",
				Description: "/nThis value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "HVAC Settings (get only)",
				Description: "/nByte 1 = HVAC Setup: Normal (0x01) or Heat Pump (0x02) Byte 2 = Aux Setup(Gas (0x01) or Electric (0x02)) and Number of Auxiliary Stages (Heat Pump)/Number of Heat Stages (Normal) Byte 3 = Number of Heat Pump Stages Byte 4 = Number of Cool Stages/n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock Enable/Disable",
				Description: "/nThe parameter defines the state of the utility lock./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire/Battery Status",
				Description: "The parameter defines the power mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered from a C-wire.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered off of batteries.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Humidity Reporting Threshold",
				Description: "/nThis value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10% RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "/nIf set to 0, auxiliary / emergency heat is disabled, all other values, 1-255, will enable the auxiliary / emergency heat. This can only be enabled when the thermostat is set to Heat Pump mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Swing Temp",
				Description: "/nThe swing temperature is applied to the setpoint to determine when the thermostat will turn on the HVAC system. If the thermostat is heating, the swing temperature is subtracted from the heat setpoint. If the thermostat is cooling, the swing temperature is added to the cool setpoint. The thermostat swing temperature is in units of 0.5 degrees Fahrenheit. A value of 0x01 is 0.05F and 0x02 is 1.0F. The supported values may vary from thermostat to thermostat but typically the allowed values are 0.5F (0x01) to 4.0F (0x08)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "2.5°F",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "3°F",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "3.5°F",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "4°F",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "Thermostat Diff Temp",
				Description: "/nThe Thermostat Differential Mode determines which differential temperature to set. Valid values are 0x00 (Heat) or Cool (0x01) Thermostat Differential Temperature (8-bit): The thermostat differential temperature is in units of 0.5 degrees Fahrenheit. A value of 0x04 is 2.0F and 0x06 is 3.0F. The differential temperature must be an integer value. Non-integer values, such as 1.5F (0x03), should not be used. The supported values may vary from thermostat to thermostat but typically, the allowed values are 2.0F (0x04) to 6.0F (0x0C)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Recovery Mode",
				Description: "/nThe parameter defines the thermostat recovery mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to fast.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to economy.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temp Reporting Filter",
				Description: "/nParameter (8-bit): The parameter is set to 10 (0x0A) for the temperature reporting filter. Default (1-bit): If the default bit is set, the upper bound is zero (0) and the lower bound is 124. This disables the filter. Size (3-bit): The Size field must be set to 4 (100b). Precision (3-bits): The precision field describes what the precision of the temperature filter value. The filter must be zero (0x00). Scale (2-bits): The scale field indicates the temperature scale used, 0 indicate the use of the Celsius temperature scale and 1 indicates use of the Fahrenheit scale. Bound Size (3-bits): The size field indicates the number of bytes used for the temperature filter value. This field must be one (0x01). Temperature Filter Lower Bound (8-bit): The thermostat will report ambient temperature changes for temperature values less than the lower bound. This field must be between 0F and 124F. By default, this value is 124F (report all temperature changes). Temperature Filter Upper Bound (8-bit): The thermostat will report ambient temperature changes for temperature values greater than the upper bound. This field must be between 0F and 124F. By default, this value is 0F (report all temperature changes)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Simple UI Mode Enable/Disable",
				Description: "/nIf set to 0, Simple UI Mode is disabled, if set to 1, will enable the Simple UI Mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multicast Enable/Disable",
				Description: "/nIf set to 0, multicast is disabled, if set to 1, will enable the multicast./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
		},
	}
}
func New009850020100() *Device{
	return &Device{
		Brand: "Radio Thermostat",
		Product: "CT 80 - 7 Day Programmable",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "5002",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0088,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0093,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009864010015() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "CT100 Z-Wave Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "6401",
		ProductID: "0015",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0042,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00986501000d() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "CT101",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "6501",
		ProductID: "000d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x005d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temp Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "HVAC Settings (get only)",
				Description: "Byte 1 = HVAC Setup: Normal (0x01) or Heat Pump (0x02)/nByte 2 = Aux Setup(Gas (0x01) or Electric (0x02)) &amp; Number of Auxiliary Stages (Heat Pump)/Number of Heat Stages (Normal)/nByte 3 = Number of Heat Pump Stages/nByte 4 = Number of Cool Stages",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock Enable/Disable",
				Description: "The parameter defines the state of the utility lock.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire/Battery Status",
				Description: "The parameter defines the power mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered from a C-wire.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered off of batteries.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Humidity Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10% RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "If set to 0, auxiliary / emergency heat is disabled, all other values, 1-255, will enable the auxiliary / emergency heat. This can only be enabled when the thermostat is set to Heat Pump mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Swing Temp",
				Description: "The thermostat swing temperature is in units of 0.5 degrees Fahrenheit. A value of 0x01 is 0.05F and 0x02 is 1.0F. The supported values may vary from thermostat to thermostat but typically the allowed values are 0.5F (0x01) to 4.0F (0x08).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "2.5°F",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "3°F",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "3.5°F",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "4°F",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Thermostat Diff Temp",
				Description: "Parameter (8-bit):/nThe parameter is set to 8 for the thermostat differential temperature./nDefault (1-bit):/nIf the default bit is set, the thermostat heat differential temperature will be set to 2.0 degree Fahrenheit./nSize (3-bit):/nThe Size field must be set to 2 (010b)./nThermostat Differential Mode (8-bit):/nThe Thermostat Differential Mode determines which differential temperature to set. Valid values are 0x00 (Heat) or Cool (0x01)/nThermostat Differential Temperature (8-bit):/nThe thermostat differential temperature is in units of 0.5 degrees Fahrenheit. A value of 0x04 is 2.0F and 0x06 is 3.0F. The differential temperature must be an integer value. Non-integer values, such as 1.5F (0x03), should not be used. The supported values may vary from thermostat to thermostat but typically, the allowed values are 2.0F (0x04) to 6.0F (0x0C).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Recovery Mode",
				Description: "The parameter defines the thermostat recovery mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to fast.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to economy.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temp Reporting Filter",
				Description: "Parameter (8-bit):/nThe parameter is set to 10 (0x0A) for the temperature reporting filter./nDefault (1-bit):/nIf the default bit is set, the upper bound is zero (0) and the lower bound is 124. This disables the filter./nSize (3-bit):/nThe Size field must be set to 4 (100b)./nPrecision (3-bits):/nThe precision field describes what the precision of the temperature filter value. The filter must be zero (0x00)./nScale (2-bits):/nThe scale field indicates the temperature scale used, 0 indicate the use of the Celsius temperature scale and 1 indicates use of the Fahrenheit scale./nBound Size (3-bits):/nThe size field indicates the number of bytes used for the temperature filter value. This field must be one (0x01)./nTemperature Filter Lower Bound (8-bit):/nThe thermostat will report ambient temperature changes for temperature values less than the lower bound. This field must be between 0F and 124F. By default, this value is 124F (report all temperature changes)./nTemperature Filter Upper Bound (8-bit):/nThe thermostat will report ambient temperature changes for temperature values greater than the upper bound. This field must be between 0F and 124F. By default, this value is 0F (report all temperature changes)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Simple UI Mode Enable/Disable",
				Description: "If set to 0, Simple UI Mode is disabled, if set to 1, will enable the Simple UI Mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multicast Enable/Disable",
				Description: "If set to 0, multicast is disabled, if set to 1, will enable the multicast.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
		},
	}
}
func New00986e010100() *Device{
	return &Device{
		Brand: "RTCOA",
		Product: "Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "6e01",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temp Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "HVAC Settings (get only)",
				Description: "Byte 1 = HVAC Setup: Normal (0x01) or Heat Pump (0x02) Byte 2 = Aux Setup(Gas (0x01) or Electric (0x02)) and Number of Auxiliary Stages (Heat Pump)/Number of Heat Stages (Normal) Byte 3 = Number of Heat Pump Stages Byte 4 = Number of Cool Stages/n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock Enable/Disable",
				Description: "The parameter defines the state of the utility lock./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire/Battery Status",
				Description: "The parameter defines the power mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered from a C-wire.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The thermostat is being powered off of batteries.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Humidity Reporting Threshold",
				Description: "This value determines the reporting threshold when association reporting is enabled. Unsupported values will be ignored./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10% RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "If set to 0, auxiliary / emergency heat is disabled, all other values, 1-255, will enable the auxiliary / emergency heat. This can only be enabled when the thermostat is set to Heat Pump mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Swing Temp",
				Description: "The swing temperature is applied to the setpoint to determine when the thermostat will turn on the HVAC system. If the thermostat is heating, the swing temperature is subtracted from the heat setpoint. If the thermostat is cooling, the swing temperature is added to the cool setpoint. The thermostat swing temperature is in units of 0.5 degrees Fahrenheit. A value of 0x01 is 0.05F and 0x02 is 1.0F. The supported values may vary from thermostat to thermostat but typically the allowed values are 0.5F (0x01) to 4.0F (0x08)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "1°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "2°F",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "2.5°F",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "3°F",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "3.5°F",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "4°F",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "Thermostat Diff Temp",
				Description: "The Thermostat Differential Mode determines which differential temperature to set. Valid values are 0x00 (Heat) or Cool (0x01) Thermostat Differential Temperature (8-bit): The thermostat differential temperature is in units of 0.5 degrees Fahrenheit. A value of 0x04 is 2.0F and 0x06 is 3.0F. The differential temperature must be an integer value. Non-integer values, such as 1.5F (0x03), should not be used. The supported values may vary from thermostat to thermostat but typically, the allowed values are 2.0F (0x04) to 6.0F (0x0C)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Recovery Mode",
				Description: "The parameter defines the thermostat recovery mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to fast.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Recovery Mode is set to economy.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temp Reporting Filter",
				Description: "Parameter (8-bit): The parameter is set to 10 (0x0A) for the temperature reporting filter. Default (1-bit): If the default bit is set, the upper bound is zero (0) and the lower bound is 124. This disables the filter. Size (3-bit): The Size field must be set to 4 (100b). Precision (3-bits): The precision field describes what the precision of the temperature filter value. The filter must be zero (0x00). Scale (2-bits): The scale field indicates the temperature scale used, 0 indicate the use of the Celsius temperature scale and 1 indicates use of the Fahrenheit scale. Bound Size (3-bits): The size field indicates the number of bytes used for the temperature filter value. This field must be one (0x01). Temperature Filter Lower Bound (8-bit): The thermostat will report ambient temperature changes for temperature values less than the lower bound. This field must be between 0F and 124F. By default, this value is 124F (report all temperature changes). Temperature Filter Upper Bound (8-bit): The thermostat will report ambient temperature changes for temperature values greater than the upper bound. This field must be between 0F and 124F. By default, this value is 0F (report all temperature changes)./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Simple UI Mode Enable/Disable",
				Description: "If set to 0, Simple UI Mode is disabled, if set to 1, will enable the Simple UI Mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multicast Enable/Disable",
				Description: "If set to 0, multicast is disabled, if set to 1, will enable the multicast./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
		},
	}
}
func New0098c801000c() *Device{
	return &Device{
		Brand: "Vivint",
		Product: "CT200",
		Description: "/n            /n          ",

		ManufacturerID: "0098",
		ProductType: "c801",
		ProductID: "000c",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temperature Reporting Threshold",
				Description: "This value determines the reporting threshold when association/nreporting is enabled. Unsupported values are ignored.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "0.5°F",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1.0°F",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "1.5°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "HVAC Settings (get only)",
				Description: "Byte 1 = HVAC Setup: Normal (0x01) or Heat Pump (0x02), /nByte 2 = Aux Setup (Gas (0x01) or Electric (0x02)) &amp; Number of/nAuxiliary Stages (Heat Pump)/Number of Heat Stages/n(Normal), /nByte 3 = Number of Heat Pump Stages, /nByte 4 = Number of Cool Stages",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Utility Lock",
				Description: "If set to 0, the utility lock is disabled. All other values (1-255) enable/nthe utility lock.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Lock is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C-Wire/Battery Status(get only)",
				Description: "If 0x01, the thermostat is powered by a C-wire. If 0x02, the/nthermostat is powered by batteries.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Humidity Reporting Threshold",
				Description: "This value determines the reporting threshold when association/nreporting is enabled. Unsupported values are ignored.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3% RH",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "5% RH",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "10% RH",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auxiliary/Emergency",
				Description: "If set to 0, auxiliary / emergency heat is disabled. All other values/n(1-255) enable auxiliary / emergency heat. This can only be/nenabled when the thermostat is set to Heat Pump mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "auxiliary / emergency heat is disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "auxiliary / emergency heat is enabled",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Swing Temp",
				Description: "The thermostat swing temperature is in units of 0.5 degrees/nFahrenheit. A value of 0x01 is 0.5F and 0x02 is 1.0F. The supported/nvalues may vary from thermostat to thermostat but typically the/nallowed values are 0.5F (0x01) to 4.0F (0x08).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Thermostat Diff Temp",
				Description: "The thermostat differential temperature is in units of 0.5 degrees/nFahrenheit. A value of 0x04 is 2.0F and 0x06 is 3.0F. The differential/ntemperature must be an integer value. Non-integer values, such/nas 1.5F (0x03), should not be used. The supported values may vary/nfrom thermostat to thermostat but typically, the allowed values are/n2.0F (0x04) to 6.0F (0x0C).",
				Values: []ConfigValue{
					ConfigValue{
						From: 4,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Thermostat Recovery Mode",
				Description: "The Thermostat Recovery Mode can be either fast (0x01) or/neconomy (0x02).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "fast ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "economy",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "",
				Description: "When setting parameter 10, the set command must contain 4/nbytes whereas the report frame will only contain 2 bytes. This is/nbecause the additional 2 bytes in the set command qualify the/nvalues being set. In this way the temperature threshold values can/nbe set in either Fahrenheit or Celsius./nSo a set command will look like this: 0A 04 aa bb cc dd, where:/naa = either 01 to indicate that bb is in Celsius, or 09 to indicate that/nbb is in Fahrenheit, /nbb = the value of the lower bound (0 to 124), /ncc = either 01 to indicate Celsius that dd is in, or 09 to indicate that/ndd is in Fahrenheit, /ndd = the value of the upper bound (0 to 124)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multicast Enable/Disable",
				Description: "If set to 0, Multicast is disabled. If set to 1, Multicast is enabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Fan Timer",
				Description: "This configuration is used to activate the fan with an automatic/nshut-off timer.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Humidity Activation",
				Description: "This parameter is a pass-through. All the logic is handled by the/nthermostat based on the A terminal assignment.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Calibration",
				Description: "This configuration is used to set the temperature offset of the/nthermostat. The valid values are from -6 to 6. Note: although/nthe thermostat UI can set calibrations in intervals of 0.5°F, this/nparameter can only accept whole numbers.",
				Values: []ConfigValue{
					ConfigValue{
						From: 250,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Define a value to compensate the temperature offset.",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Display Units",
				Description: "This configuration is used to set units used by the device to/ndisplay temperature.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New009900010002() *Device{
	return &Device{
		Brand: "Greenwave One Gateway",
		Product: "Greenwave One Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0099",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008a,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x003d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00990001a001() *Device{
	return &Device{
		Brand: "AXON™",
		Product: "AXON™ Home Router",
		Description: "/n            /n          ",

		ManufacturerID: "0099",
		ProductType: "0001",
		ProductID: "a001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009900020002() *Device{
	return &Device{
		Brand: "GreenWave Reality ",
		Product: "Smart PowerNode ",
		Description: "/n            /n          ",

		ManufacturerID: "0099",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009900030004() *Device{
	return &Device{
		Brand: "GreenWave Reality ",
		Product: "Smart PowerNodes ",
		Description: "/n            /n          ",

		ManufacturerID: "0099",
		ProductType: "0003",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New009900060001() *Device{
	return &Device{
		Brand: "GreenWave Reality",
		Product: "In Home Display",
		Description: "/n            /n          ",

		ManufacturerID: "0099",
		ProductType: "0006",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0093,
			},
			&CommandClass{
				ID: 0x0092,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New00a500010001() *Device{
	return &Device{
		Brand: "nodon",
		Product: "Smart Plug",
		Description: "/n            /n            /n          ",

		ManufacturerID: "00a5",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: " 	Default State",
				Description: "This parameter deﬁnes the status of the Smart Plug after a Power Failure or after being plugged.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0=Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1=ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2=Status before Power Failure",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power Failure",
				Description: "This parameter is to set-up the Power Failure / Recover notiﬁcation and the associated group (Groups 4, 5, 6, 7, 8). The value may be the sum of available values. For example, if you want to activate Power Failure and enable group 4 &amp; 5, the parameter value is 1&#43;2&#43;4=7.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0=Power Failure detection disable ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1=Power Failure enable (report to Lifeline only)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " 2=Enable group 4",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " 4=Enable group 5",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "8=Enable group 6",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "16=Enable group 7",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "32=Enable group 8",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Follow State",
				Description: "This parameter allows to enable or disable Group 2 &amp; Group 3. The value may be the sum of available values. For example, if you want to enable Group 2 &amp; 3, the parameter value is 1&#43;2=3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0= Group 2 &amp; Group 3 disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1= Group 2 enable",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2= Group 3 enable",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Always On",
				Description: "This parameter forces the Smart Plug status to be ON. While enable it is not possible to switch OFF the plug (local or wireless).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " 0= Always ON disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " 1= Always ON enable",
					},
				},
			},
		},
	}
}
func New00a500020001() *Device{
	return &Device{
		Brand: "nodon",
		Product: "Octan Remote",
		Description: "/n            /n            /n          ",

		ManufacturerID: "00a5",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
				Version: "0",
			},
			&CommandClass{
				ID: 0x005b,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE TYPE",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "CENTRAL SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SCENE ACTIVATION",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No LED",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash Blue after button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Blinking to confirm command",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both options above (1&amp;2)",
					},
				},
			},
		},
	}
}
func New00a500020002() *Device{
	return &Device{
		Brand: "nodon",
		Product: "SOFT REMOTE Softberry",
		Description: "/n            /n            /n          ",

		ManufacturerID: "00a5",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
				Version: "0",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE-TYP",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "CENTRAL SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SCENE ACTIVATION",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No LED",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash Blue after button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Blinking to confirm command",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both options above (1&amp;2)",
					},
				},
			},
		},
	}
}
func New00a500020003() *Device{
	return &Device{
		Brand: "nodon",
		Product: "Wall Switch  Cozy White",
		Description: "/n            /n            /n          ",

		ManufacturerID: "00a5",
		ProductType: "0002",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
				Version: "0",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE TYPE",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "CENTRAL SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SCENE ACTIVATION",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switches ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switches OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New010000010020() *Device{
	return &Device{
		Brand: "Insignia",
		Product: "LED TV 32",
		Description: "/n            /n          ",

		ManufacturerID: "0100",
		ProductType: "0001",
		ProductID: "0020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0088,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0094,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010200010001() *Device{
	return &Device{
		Brand: "ZAGG",
		Product: "Teleprtall Remote",
		Description: "/n            /n          ",

		ManufacturerID: "0102",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010300010002() *Device{
	return &Device{
		Brand: "DiehlControls",
		Product: "Plug Actuator 2.0",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0103",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Default switch state",
				Description: "Behavior after power breakdown",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "On",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Restore last active state.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Energy minimum report time",
				Description: "Minimum time between two unrequested energy values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "minimum time in seconds between two energy values",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 120,
				Name: "Energy maximum report time",
				Description: "Maximum time between two energy values, independent of value change.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "maximum time in seconds between two energy values.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Power minimum report time",
				Description: "Minimum time between two unrequested power values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "minimum time in seconds between two power values",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 120,
				Name: "Power maximum report time",
				Description: "Maximum time between two power values, independent of value change.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "maximum time in seconds between two energy values",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Energy delta value",
				Description: "Minimum change to send a energy value. This value must be in between the value of parameter 2 and 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "Wh",
						Reserved: false,
						Description: "minimum energy value change to send ernergy value",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "Power delta value",
				Description: "Minimum change to send a power value. This value must be in between the value of parameter 4 and 5.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "Wh",
						Reserved: false,
						Description: "minimum power value change to send power value",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Security shutdown configuration ",
				Description: "Behavior after safety shutdown. After three times safety shutdown the device stays off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "device stays off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "relaunch of the device if temperature falls after overheat  or three minutes after overload.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reset of overcurrent shutdown",
				Description: "Behavior after three times safety shutdown.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reset",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reset the counter for safety shutdown and activate the device",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Night mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "night mode off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "night mode on, LEDs will light up for one second on after activating the device, otherwise the LEDs stay off.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Info LED Color",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Info-LED off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Info-LED green",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Info-LED yellow",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Info-LED red",
					},
				},
			},
		},
	}
}
func New010300020002() *Device{
	return &Device{
		Brand: "DiehlControls",
		Product: "Dimmer Actuator",
		Description: "/n            /n          ",

		ManufacturerID: "0103",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New01080002000d() *Device{
	return &Device{
		Brand: "D-Link",
		Product: "mydlink™ Home Door/Window Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0108",
		ProductType: "0002",
		ProductID: "000d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0080,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0030,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Dimmer light strength (00 = Dimmer off)",
				Description: "Setting the BASIC command value to turn on the light. /nThe 0xFF(-1) means turn on the light. /nFor dimmer equipment 1 to 100 means the light strength./n0 means turn off the light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Light is on",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value for dimming purposes.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off the light.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Illumination threshold",
				Description: "Setting the illumination threshold to/nturn on the light. When the event/ntriggered and the environment/nillumination lower then the threshold,/nthe device will turn on the light./n0 means turn off illumination detected/nfunction. And never turn on the light./n1 means darkest./n99 means brightest./n100 means turn off illumination/ndetected function. And always turn on/nthe light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "100 means turn off illumination/ndetected function. And always turn on/nthe light.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off illumination detected/nfunction. And never turn on the light./n",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " 1 means test mode,/n 0 means normal mode. Notice:/nThis bit only effect by the DIP Switch/nsetting to “customer mode”, otherwise/nit decides by DIP Switch setting to Test/nor Normal Mode.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window/nfunction. (1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " Setting the temperature scale./n 0: Fahrenheit, 1:Celsius/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Disable the illumination report/nafter event triggered. (1:Disable,/n0:Enable)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: " Disable the temperature report/nafter event triggered. (1:Disable,/n0:Enable)/n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Disable the back key release/ninto test mode. (1:Disable,/n0:Enable)/n",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Mult-Sensor Function Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate/nillumination to turn ON the lighting/nnodes in the association group 2./n(1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Disable PIR integrate/nIllumination to turn ON the lighting/nnodes in the association group 2./n(1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate PIR/nto turn ON the lighting nodes in the/nassociation group 2. (1:Disable,/n0:Enable) (Default is Disable)/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " When Bit2 is 0 (Enable), Are the/ndevice and the lighting in the same/nroom?/n 0: In the same room(Default),/n 1: In the different room./nNotice: If this bit is 1, it is/nrecommended also set the Bit1 to 1,/ncause the PIR triggered, doesn&#39;t/nmean the people in that room.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " Disable delay 5 seconds to turn/noff the light, when door/window/nclosed. (1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: " Disable auto turn off the light,/nafter door/window opened to turn on/nthe light. (1:Disable, 0:Enable)/nNotice: If bit2 is zero, this setting is useless./nNotice: If the configuration No.9 is/nzero, this setting is useless",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable sending motion OFF/nreport. (0:Disable, 1:Enable)/nNote: Depends on the Bit4,/n0: Report Notification CC,/nType: 0x07, Event: 0xFE/n1: Sensor Binary Report,/nType: 0x0C, Value: 0x00",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR super sensitivity/nmode. (0:Disable, 1:Enable)/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Disable send out BASIC OFF/nafter door closed. (1:Disable,/n0:Enable)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " Notification Type,/n 0: Using Notification Report./n 1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report./n(1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Disable to report battery state/nwhen the device triggered. (1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Turn Off Light Time",
				Description: "After turn on the lighting, setting the delay time to turn off the lighting when the PIR motion is not detected./n8 seconds per tick, default tick is 4 (32 seconds)./n0 means never send turn off light command.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Light is off",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Delay time to turn off the lighting",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the battery level./n0 means turn off auto report battery. The default value is 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Door/Windows State Time",
				Description: "The interval time for auto report the door/window state./n0 means turn off auto report door/window state. The default value is 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the illumination./n0 means turn off auto report illumination.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "The interval time for auto report the temperature./n0 means turn off auto report temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each tick./n0 means turn off all auto report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report. The unit is Fahrenheit./n0 means turn off this function./nEnable this function the device will detect every minute./nAnd when the temperature is over 140 degree Fahrenheit, it will continue report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report. The unit is percentage./n0 means turn off this function./nEnable this function the device will detect every minute.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
		},
	}
}
func New01080002000e() *Device{
	return &Device{
		Brand: "D-Link",
		Product: "mydlink™ Home Door/Window Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0108",
		ProductType: "0002",
		ProductID: "000e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0030,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Dimmer light strength (00 = Dimmer off)",
				Description: "Setting the BASIC command value to turn on the light. /nThe 0xFF(-1) means turn on the light. /nFor dimmer equipment 1 to 100 means the light strength./n0 means turn off the light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Light is on",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: " For dimmer/nequipment 1 to 100 means the light/nstrength.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off the light.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Illumination threshold",
				Description: "Setting the illumination threshold to turn on the light. /nWhen the event triggered and the environment illumination lower then the threshold, the device will turn on the light./n0 means turn off illumination detected function. And never turn on the light./n1 means darkest./n99 means brightest./n100 means turn off illumination detected function. And always turn on the light./nNotice: In none test mode, only the value in 1 to 99 will enable the illumination detected function and update the illumination value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "100 means turn off illumination/ndetected function. And always turn on/nthe light./n",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off illumination detected/nfunction. And never turn on the light.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch test/normal mode (0=Normal)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window function (0=Enabled)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Setting the temperature scale (0:Fahrenheit, 1:Celsius)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Disable the illumination report after event triggered. (0=Enabled)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable the temperature report after event triggered. (0=Enabled)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Disable the back key release into test mode. (0=Enabled)",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Mult-Sensor Function Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate/nillumination to turn ON the lighting/nnodes in the association group 2./n(1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Disable PIR integrate/nIllumination to turn ON the lighting/nnodes in the association group 2./n(1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate PIR/nto turn ON the lighting nodes in the/nassociation group 2. (1:Disable,/n0:Enable) (Default is Disable)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "When Bit2 is 0 (Enable), Are the/ndevice and the lighting in the same/nroom?/n 0: In the same room(Default),/n 1: In the different room./nNotice: If this bit is 1, it is/nrecommended also set the Bit1 to 1,/ncause the PIR triggered, doesn&#39;t/nmean the people in that room.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " Disable delay 5 seconds to turn/noff the light, when door/window/nclosed. (1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: " Disable auto turn off the light,/nafter door/window opened to turn on/nthe light. (1:Disable, 0:Enable)/nNotice: If bit2 is zero, this setting is useless./nNotice: If the configuration No.9 is/nzero, this setting is useless.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Enable sending motion OFF/nreport. (0:Disable, 1:Enable)/nNote: Depends on the Bit4,/n0: Report Notification CC,/nType: 0x07, Event: 0xFE/n1: Sensor Binary Report,/nType: 0x0C, Value: 0x00",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR super sensitivity/nmode. (0:Disable, 1:Enable)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Disable send out BASIC OFF/nafter door closed. (1:Disable,/n0:Enable)/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n 0: Using Notification Report./n 1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: " Disable to report battery state/nwhen the device triggered. (1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Turn Off Light Time",
				Description: "After turn on the lighting, setting the delay time to turn off the lighting when the PIR motion is not detected./n8 seconds per tick, default tick is 4 (32 seconds)./n0 means never send turn off light command.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means never send turn off light/ncommand.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Delay time to turn off the lighting",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the battery level./n0 means turn off auto report battery. The default value is 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Door/Windows State Time",
				Description: "The interval time for auto report the door/window state./n0 means turn off auto report door/window state. The default value is 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the illumination./n0 means turn off auto report illumination.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "The interval time for auto report the temperature./n0 means turn off auto report temperature.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each tick./n0 means turn off all auto report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: " ticks",
						Reserved: false,
						Description: "Define a report inverval in ticks.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report. The unit is Fahrenheit./n0 means turn off this function./nEnable this function the device will detect every minute./nAnd when the temperature is over 140 degree Fahrenheit, it will continue report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report. The unit is percentage./n0 means turn off this function./nEnable this function the device will detect every minute.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: " ticks",
						Reserved: false,
						Description: "Auto report inverval.",
					},
				},
			},
		},
	}
}
func New010800200001() *Device{
	return &Device{
		Brand: "D-Link",
		Product: "mydlink™ Connected Home Hub",
		Description: "/n            /n          ",

		ManufacturerID: "0108",
		ProductType: "0020",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010828010001() *Device{
	return &Device{
		Brand: "D-Link",
		Product: "Staples Connect v2",
		Description: "/n            /n          ",

		ManufacturerID: "0108",
		ProductType: "2801",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0066,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0062,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x004e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008a,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010900000000() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "USB Dongle",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New01090002ffff() *Device{
	return &Device{
		Brand: "Yale real Living",
		Product: "Push Button Deadbolt",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "0002",
		ProductID: "ffff",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010910010102() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "USB Dongle",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "1001",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010910020202() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Keyfob",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "1002",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010910040402() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Wall Remote Control",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "1004",
		ProductID: "0402",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920010101() *Device{
	return &Device{
		Brand: "Vision",
		Product: "ZD2102BR",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920010102() *Device{
	return &Device{
		Brand: "Vision",
		Product: "ZD2102IN ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920010104() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "0104",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920010105() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Sensor ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "0105",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "External Switch",
				Description: "The parameter defines if an external switch is disabled/enabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "External Switch is disabled.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "External Switch is enabled.",
					},
				},
			},
		},
	}
}
func New010920010106() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "0106",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "External Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
		},
	}
}
func New0109200101a1() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2001",
		ProductID: "01a1",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920020201() *Device{
	return &Device{
		Brand: "VISION",
		Product: "ZP3102",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2002",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Delay of Off Command",
				Description: "This defines the time interval to turn off associated devices if no activity is detected",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 129,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
		},
	}
}
func New010920020202() *Device{
	return &Device{
		Brand: "Vision",
		Product: "ZP3102BR",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2002",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920020203() *Device{
	return &Device{
		Brand: "Vision",
		Product: "ZP3102RU",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2002",
		ProductID: "0203",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время выключения",
				Description: "Время в минутах, через которое датчик движения отправит команду Выключить устройству из группы 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "min",
						Reserved: false,
						Description: "Минуты",
					},
				},
			},
		},
	}
}
func New010920020204() *Device{
	return &Device{
		Brand: "Vision",
		Product: "PIR Motion Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2002",
		ProductID: "0204",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920020205() *Device{
	return &Device{
		Brand: " Vision",
		Product: "PIR Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2002",
		ProductID: "0205",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Re-trigger Duration",
				Description: "User can change value from 1 to 255 minutes to setup the re-trigger time when there is no movement detected in the period of time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define the re-trigger time.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "Parameter defines which scale is used.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Infrared Sensor Sensitivity Adjustment",
				Description: "The user is able to adjust the sensitivity on 7 levels. 1 is most sensitive and 7 is most insensitive.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Adjust the sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "User defined Celsius Adjustment",
				Description: "The parameter adjusts the temperature readings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 246,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Adjust the temperature readings if necessary.",
					},
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Adjust the temperature readings if necessary.",
					},
				},
			},
		},
	}
}
func New010920030302() *Device{
	return &Device{
		Brand: "",
		Product: "ZS5101EU 2013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2003",
		ProductID: "0302",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920040403() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZS6101EU 2013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2004",
		ProductID: "0403",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920040404() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Smoke Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2004",
		ProductID: "0404",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0109200404a4() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Smoke Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2004",
		ProductID: "04a4",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920050503() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZM1601EU 2013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2005",
		ProductID: "0503",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren Strobe Mode",
				Description: "defines the reaction of the siren",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Strobe and Siren",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Siren only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Strobe only",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm auto stop",
				Description: "defines the auto time out of the alarm indication",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "60 seconds",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "120 seconds",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "no automated off",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "30 seconds",
					},
				},
			},
		},
	}
}
func New010920050505() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Wireless Siren &amp; Strobe Alarm, Battery Type",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2005",
		ProductID: "0505",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren/Strobe Mode",
				Description: "Configure the desired mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All Enable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Siren Only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Strobe Only",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Auto StopTime",
				Description: "Set an alarm auto stop time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "30s",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "60s",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "120s",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Will Not Automatically Stop",
					},
				},
			},
		},
	}
}
func New010920050508() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "Wireless Siren &amp; Strobe Alarm, Battery Type  ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2005",
		ProductID: "0508",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren/Strobe Mode",
				Description: "User can change value from 0 to 2 to turn either Siren sound, Strobe light, or both when triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All Enable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Siren only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Strobe only",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Auto Stop Time",
				Description: "User can change the duration of siren time when triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "30 seconds",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "60 seconds",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "120 seconds",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Will Not Automatically Stop",
					},
				},
			},
		},
	}
}
func New010920060610() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZM1701",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2006",
		ProductID: "0610",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0076,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0098,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920060620() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Lock for Security",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2006",
		ProductID: "0620",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
			&CommandClass{
				ID: 0x008b,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004c,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920070703() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Lamp and Appliance Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2007",
		ProductID: "0703",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920070706() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Plugin ON/OFF",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2007",
		ProductID: "0706",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920080803() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Lamp Dimmer Module",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2008",
		ProductID: "0803",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920090901() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Wireless Siren &amp; Strobe Alarm, Backup battery type",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2009",
		ProductID: "0901",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren/Strobe Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Siren and strobe enable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Siren only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Strobe only",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm auto stop time command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "30 seconds",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "60 seconds",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "120 seconds",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Siren will not stop automatically",
					},
				},
			},
		},
	}
}
func New010920090908() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "Siren with DC adapter",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2009",
		ProductID: "0908",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren/Strobe Mode",
				Description: "User can change value from 0 to 2 to turn/neither Siren sound, Strobe light, or both when triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All Enable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Siren Only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Strobe Only",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Auto Stop Time",
				Description: "User can change the duration of siren time/nwhen triggered.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The auto stop time is set to 30 sec.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The auto stop time is set to 60 sec.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The auto stop time is set to 120 sec.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Will Not Automatically Stop",
					},
				},
			},
		},
	}
}
func New0109200a0a02() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZG8101EU 2013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "200a",
		ProductID: "0a02",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0109200c0c02() *Device{
	return &Device{
		Brand: "Vision",
		Product: "In-Wall 1 relay switch ",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "200c",
		ProductID: "0c02",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Type of Light Control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "&#34;to control light with 1 wall switch &amp; to control light with 2 wall switches.&#34;",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "&#34;to control 1 light witch 1 wall switch that has light indicator.&#34;",
					},
				},
			},
		},
	}
}
func New0109200c0c06() *Device{
	return &Device{
		Brand: "Vision",
		Product: "IN WALL ONE RELAY",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "200c",
		ProductID: "0c06",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Type of Light Control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To Control Light with 1 Wall Switch &amp; to Control Light With 2 Wall Switches",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "To Control Light with 1 Wall Switch That Has Light Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Type",
				Description: ".) If you chose configuration value “1”-control light with 1 or 2 wall switches, then /nyou have also set below./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "With common on/off type switch button used",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "With momentary type switch button used",
					},
				},
			},
		},
	}
}
func New0109200f0f02() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZG6301EU 2013",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "200f",
		ProductID: "0f02",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0109200f0f04() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "CO Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "200f",
		ProductID: "0f04",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920121203() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Repeater",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2012",
		ProductID: "1203",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920121206() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Repeater",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2012",
		ProductID: "1206",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920121207() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "Repeater ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2012",
		ProductID: "1207",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920141401() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Plug-in Dimmer &amp; CT-Clamp Module",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2014",
		ProductID: "1401",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920171717() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "In-Wall 2 relays switch ",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2017",
		ProductID: "1717",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010920171719() *Device{
	return &Device{
		Brand: "Vision",
		Product: "In-wall Two Relay",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2017",
		ProductID: "1719",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Button Mode Switching",
				Description: "The parameter defines which button mode is activated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Toggle",
					},
				},
			},
		},
	}
}
func New010920181805() *Device{
	return &Device{
		Brand: "Vision ",
		Product: "Curtain Module",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2018",
		ProductID: "1805",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0026,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Curtain Type",
				Description: "The Parameter defines which curtain type is used. The curtain will reset the value after setting the parameter 1, the value and the relative setting should be configured first before reacticating the curtain. Curtain type number 2 should support overload function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Pure AC motor curtain (with curtain learn mode function)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Normal motor curtain (control curtain by &#34;curtain total distance time&#34; and &#34;curtain motor wake up time&#34;)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "Curtain Total Distance Time (Type 2 curtain only)",
				Description: "Set up curtains total opening or closing time, the interval time is 0.01 seconds. The value should be equal or bigger than the total running time value but not including the value of &#34;Curtain Motor Wake Up Time&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Available settings: 0,01 sec. to 655,35 sec.; Define a total distance time.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Curtain Motor wake Up Time",
				Description: "Set up curtains activating time after power on, the interval time is 0.01 seconds. The value is the time to activate the motor after power on, it could calibrate the curtains correct position.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a wake up time. Available settings: 0 sec. to 10 sec.",
					},
				},
			},
		},
	}
}
func New0109201a1a02() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Power Monitor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "201a",
		ProductID: "1a02",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Auto report timing",
				Description: "60-255 seconds/nReport kWh/kVAh",
				Values: []ConfigValue{
					ConfigValue{
						From: 60,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "Define the auto report timing.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Report when Watt change",
				Description: "5-3600 Watt/nReport V A W",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 3600,
						Unit: "W",
						Reserved: false,
						Description: "Set the maximum variation in wattage, if  a report should be sent.",
					},
				},
			},
		},
	}
}
func New0109201b1b02() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Keyfob",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "201b",
		ProductID: "1b02",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0109201c1c03() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Flood Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "201c",
		ProductID: "1c03",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0109201f1f10() *Device{
	return &Device{
		Brand: "Vision",
		Product: "4in1 Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "201f",
		ProductID: "1f10",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0098,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "°C",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Set up from 0.1° to 5°",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Humidity",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Set up from 1% to 50%",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Set up from 5% to 50%",
					},
				},
			},
		},
	}
}
func New0109201f1f20() *Device{
	return &Device{
		Brand: "Vision",
		Product: "4in1 Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "201f",
		ProductID: "1f20",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Measurement Unit",
				Description: "Parameter specifies the used unit.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "°C",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "°F",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Temperature Range",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "1~50 (Set up from 0.1°C~5°C)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Humidity",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "1~50 (Set up from 1%~50%)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "%",
						Reserved: false,
						Description: "Set up from 5% to 50%",
					},
				},
			},
		},
	}
}
func New010920212101() *Device{
	return &Device{
		Brand: "Vision",
		Product: "4 in 1 PIR Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2021",
		ProductID: "2101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0098,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Scale",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Temperature Range",
				Description: "1 to 50 (Set up from 0.1°C to 5°C)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Humidity",
				Description: "1 to 50 (Set up from 1% to 50%)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Light",
				Description: "0, 5 to 50 (Set up from 0 for off or 5% to 50%)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "%",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Re-trigger Duration",
				Description: "User can change value from 1 to 255 minutes to setup the retrigger time when there is no movement detected in the period of time. Default is 3 minutes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Infrared Sensor Sensitivity Adjustment",
				Description: "7 levels of sensitivity, 1 = most sensitive, 7 = most insensitive",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Set a sensitivity.",
					},
				},
			},
		},
	}
}
func New010920222201() *Device{
	return &Device{
		Brand: "Vision",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0109",
		ProductType: "2022",
		ProductID: "2201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010930010104() *Device{
	return &Device{
		Brand: "Vision Security",
		Product: "ZM 1602 Wireless Siren",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0109",
		ProductType: "3001",
		ProductID: "0104",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Звуковое/Световое оповещение",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Звуковое и световое оповещение",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только звуковое оповещение ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только световое оповещение",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время отключения сирены",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "30 секунд",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "60 секунд",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "120 секунд",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Нет автоматического отключения",
					},
				},
			},
		},
	}
}
func New010a11004900() *Device{
	return &Device{
		Brand: "Vitrum",
		Product: "Vitrum I EU dimmer wireless",
		Description: "/n            /n          ",

		ManufacturerID: "010a",
		ProductType: "1100",
		ProductID: "4900",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010a11004a00() *Device{
	return &Device{
		Brand: "Vitrum",
		Product: "Vitrum II EU dimmer wireless",
		Description: "/n            /n          ",

		ManufacturerID: "010a",
		ProductType: "1100",
		ProductID: "4a00",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010a12005100() *Device{
	return &Device{
		Brand: "Vitrum",
		Product: "Vitrum I EU on-off wireless",
		Description: "/n            /n          ",

		ManufacturerID: "010a",
		ProductType: "1200",
		ProductID: "5100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010a12005200() *Device{
	return &Device{
		Brand: "Vitrum",
		Product: "Vitrum II EU on-off wireless",
		Description: "/n            /n          ",

		ManufacturerID: "010a",
		ProductType: "1200",
		ProductID: "5200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010a13005a00() *Device{
	return &Device{
		Brand: "Vitrum",
		Product: "VITRUM II Control of Roller Blinds - EU BOX",
		Description: "/n            /n          ",

		ManufacturerID: "010a",
		ProductType: "1300",
		ProductID: "5a00",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010b43110001() *Device{
	return &Device{
		Brand: "SMART TAP",
		Product: "SMART TAPTMSH",
		Description: "/n            /n          ",

		ManufacturerID: "010b",
		ProductType: "4311",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010c00010001() *Device{
	return &Device{
		Brand: "There",
		Product: "ThereGate",
		Description: "/n            /n          ",

		ManufacturerID: "010c",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x003d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010e00030002() *Device{
	return &Device{
		Brand: "Poly-control",
		Product: "DanaLock",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010e",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x004e,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x008a,
				InNIF: "false",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать направление движения замка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мотор крутится по часовой стрелке для открытия замка",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Мотор крутится против часовой стрелки для открытия замка",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Скорость замка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Очень медленно",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Медленно",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Нормально",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Быстро",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Очень быстро",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим замка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Шаговый двигатель работает в режиме ШИМ (энергосбережение)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Шаговый двигатель работает на полную мощность",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 9,
				Name: "Градус поворота замка",
				Description: "1 = 10 градусов, 9 = 90 градусов.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автозакрытие замка",
				Description: "Через сколько секунд после открытия, замок автоматически закроется.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Звук замка",
				Description: "Звук при открытии или закрытии замка.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включено",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип батареи",
				Description: "Выберите тип используемом батареи, чтобы замок правильно сообщал о ее заряде.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "3.6 В",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3.0 В",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Звук при низком заряде батареи",
				Description: "При каком заряде батареи замок должен издавать звуковой сигнал",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Заряд батареи %",
					},
				},
			},
		},
	}
}
func New010e00080001() *Device{
	return &Device{
		Brand: "Danalock.com",
		Product: "Danalock100",
		Description: "/n            /n          ",

		ManufacturerID: "010e",
		ProductType: "0008",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0053,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Direction",
				Description: "Choose motor direction.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = The motor goes clockwise when latched",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = The motor goes counterclockwise when latched",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Speed (Torque)",
				Description: "Choose speed of motor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Slowest",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 = Slow",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 = Normal",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "4 = Fast",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "5 = Fastest",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode",
				Description: "Define mode of Stepper motor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Stepper motor mode wave drive(power saving)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Stepper motor mode full drive(Normal)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 = Relay mode",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 9,
				Name: "Turn degrees",
				Description: "Set turn degrees.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "/nFactor 10 turn degrees ( 1 = 10 degrees, 9 = 90 degrees etc.)/n",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto Latch time",
				Description: "Set time interval when lock should automatically close again./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "sec",
						Reserved: false,
						Description: "/nSet time interval until the lock should automatically close again after unlatching./n",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Sound",
				Description: "Disable or enable beep sound from latch or unlatch operations./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Enable",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery Type",
				Description: "Set the type of battery that powers the device. This affects the returned battery state. Default values: 0=3.6V 1=3V/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = 3,6 Volt battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = 3.0 Volt",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/n2 = Mains power, changing from and to mains power requires the Danalock to be excluded and included./n",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery alarm value",
				Description: "When the battery level is equal to or under this value, the device will notify user with a beep sound after latch or unlatch./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Set battery level to notify user.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Turn and Go",
				Description: "Used if the lock is using a optional rotation sensor. Latch and Go on will turn automatically when manual turn is detected./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Turn and Go",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Turn and Go on",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Brake and GoBack",
				Description: "When used the lock will brake for x amount of seconds and then turn 75 degrees back. Made for special doors without door lever.(Only when unlatching)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Disabled",
					},
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "sec",
						Reserved: false,
						Description: "/nSet time interval for lock to brake and then turning back./n",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Async",
				Description: "Used if the lock is using an optional rotation sensor. When async is enabled the lock will auto calibrate if already unlatched and asked to Unlatch again (used for special door locks where the key turn is asynced from the inside nob.)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Async off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Async on",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Door lock operation report type",
				Description: "Set Door lock operation report type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/n0 = Simple supported by all controllers that support door locks./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/n1 = Advanced, more specific reports through notification Command Class./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/n2 = No Door lock operation reports are sent unsolicited./n",
					},
				},
			},
		},
	}
}
func New010e00080002() *Device{
	return &Device{
		Brand: "Danalock.com",
		Product: "Danalock100",
		Description: "/n            /n          ",

		ManufacturerID: "010e",
		ProductType: "0008",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0053,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Direction",
				Description: "Choose motor direction.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = The motor goes clockwise when latched",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = The motor goes counterclockwise when latched",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Speed (Torque)",
				Description: "Choose speed of motor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Slowest",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 = Slow",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 = Normal",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "4 = Fast",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "5 = Fastest",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode",
				Description: "Define mode of Stepper motor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Stepper motor mode wave drive(power saving)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Stepper motor mode full drive(Normal)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 = Relay mode",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 9,
				Name: "Turn degrees",
				Description: "Set turn degrees.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "/nFactor 10 turn degrees ( 1 = 10 degrees, 9 = 90 degrees etc.)/n",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto Latch time",
				Description: "Set time interval when lock should automatically close again./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "sec",
						Reserved: false,
						Description: "/nSet time interval until the lock should automatically close again after unlatching./n",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Sound",
				Description: "Disable or enable beep sound from latch or unlatch operations./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Enable",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery Type",
				Description: "Set the type of battery that powers the device. This affects the returned battery state. Default values: 0=3.6V 1=3V/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = 3,6 Volt battery",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = 3.0 Volt",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/n2 = Mains power, changing from and to mains power requires the Danalock to be excluded and included./n",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery alarm value",
				Description: "When the battery level is equal to or under this value, the device will notify user with a beep sound after latch or unlatch./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Set battery level to notify user.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Turn&amp;Go",
				Description: "Used if the lock is using a optional rotation sensor. Latch&amp;Go on will turn automatically when manual turn is detected./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Turn&amp;Go",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Turn&amp;Go on",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Brake&amp;GoBack",
				Description: "When used the lock will brake for x amount of seconds and then turn 75 degrees back. Made for special doors without door lever.(Only when unlatching)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Disabled",
					},
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "sec",
						Reserved: false,
						Description: "/nSet time interval for lock to brake and then turning back./n",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Async",
				Description: "Used if the lock is using an optional rotation sensor. When async is enabled the lock will auto calibrate if already unlatched and asked to Unlatch again (used for special door locks where the key turn is asynced from the inside nob.)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Async off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Async on",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Door lock operation report type",
				Description: "Set Door lock operation report type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/n0 = Simple supported by all controllers that support door locks./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/n1 = Advanced, more specific reports through notification Command Class./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/n2 = No Door lock operation reports are sent unsolicited./n",
					},
				},
			},
		},
	}
}
func New010f00000000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGRGBWM-441",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0033,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "ALL ON / ALL OFF",
				Description: "Parameter describes ALL ON / ALL OFF function activation.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON inactive, ALL OFF inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON inactive, ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF inactive",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Associations command class choice",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NORMAL (DIMMER) - BASIC SET/SWITCH_MULTILEVEL_-/nSTART/STOP",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NORMAL (RGBW) - COLOR_CONTROL_SET/START//nSTOP_STATE_CHANGE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "NORMAL (RGBW) - COLOR_CONTROL_SET",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "BRIGHTNESS - BASIC SET/SWITCH_MULTILEVEL_START//nSTOP",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "RAINBOW (RGBW) - COLOR_CONTROL_SET",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Outputs state change mode",
				Description: "MODE1/nExample: change saturation level from 0% to 99%/nParameter 9: Step = 5/nParameter 10: Time between steps: 10ms/n/nMODE2/nExample: change saturation level from 0% to 99%/nParameter 11: time for changing from start to end value = 500sec",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "MODE1 (related parameters: 9-step value, 10-time between/nsteps)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MODE2 (related parameters: 11-time to change value, relevant/nfor RGB/RGBW)",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Step value (relevant for MODE1)",
				Description: "Available settings: 1 - 255",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the number of steps.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Time between steps (relevant for MODE1)",
				Description: "Available settings: 1-60000ms ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "immediate change of state",
					},
					ConfigValue{
						From: 1,
						To: 60001,
						Unit: "ms",
						Reserved: false,
						Description: "Define the time interval between each step.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 67,
				Name: "Time for changing from start to end value",
				Description: "Default setting: 67 (3s)/n/n0 - immediate change/n/n1-63 - 20-126- [ms] value*20ms/n/n65-127 - 1-63 [s] [value-64]*1s/n/n129-191 - 10-630[s] [value-128]*10s/n/n193-255 - 1-63[min] [value-192]*1min/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "immediate change",
					},
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "ms",
						Reserved: false,
						Description: "Define the time interval from start to end value in ms. Range is from 20 to 216.",
					},
					ConfigValue{
						From: 65,
						To: 127,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval from start to end value in sec. Range is from 1 to 63 sec.",
					},
					ConfigValue{
						From: 129,
						To: 191,
						Unit: "x10sec",
						Reserved: false,
						Description: "Define the time interval from start to end value in sec. Range is from 10 to 630 sec.",
					},
					ConfigValue{
						From: 193,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval from start to end value in min. Range is from 1 to 63 min.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Maximum brightening level",
				Description: "Available settings: 3-255/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the maximum level of brightness.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Minimum dim level",
				Description: "Available settings: 3-255",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the minimum dim level.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 4369,
				Name: "Inputs / Outputs configuration ",
				Description: "This parameter is relevant for main controllers other than Home Center 2 only./n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Memorize device status at power cut. Device will be set to status memorized before power cut.",
				Description: "Device will be set to/nstatus memorized before power cut.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "device does not memorize its status at the power cut. Load is/ndisconnected",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "device memorizes its status at the power cut. Load will be set/nto the status from before power cut (parameters, current outputs/nstatus, energy)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm of any type (general alarm, flood alarm, smoke alarm: CO, CO2, temperature alarm).",
				Description: "(general alarm, flood alarm, smoke alarm: CO, CO2, temperature alarm)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INACTIVE - the device doesn&#39;t respond to alarm frames",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALARM ON - the device turns on once alarm is detected (all/nchannels set to 99%)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALARM OFF - the device turns off once alarm is detected (all/nchannels set to 0%)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "ALARM PROGRAM - alarm sequence turns on (program/nselected in parameter 38)",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Alarm sequence program",
				Description: "1 - 10 (1-10 specifies alarm program number)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Active PROGRAM alarm time",
				Description: "1-65534 (1s-65534s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec.",
						Reserved: false,
						Description: "Define the length of the alarm time.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command class reporting Outputs status change",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "reporting as a result of inputs and controllers actions (SWITCH/nMULTILEVEL)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "reporting as a result inputs actions (SWITCH MULTILEVEL)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "reporting as a result of inputs actions (COLOR CONTROL)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Reporting 0-10v analog inputs change threshold.",
				Description: "Parameter defines a value by which input voltage must change in/norder to be reported to the main controller. New value is calculated/nbased on last reported value:/nDefault setting: 5 (0,5V)/n1-100 - (0,1 - 10V)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Power load reporting frequency",
				Description: "(if last reported value differs/nfrom the current value). Reports will also be sent in case of polling./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reports are not sent. Reports will only be sent in case of polling/nor at turning OFF the device.",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec.",
						Reserved: false,
						Description: "Define the time interval between reports.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Reporting changes in energy consumed by controlled devices.",
				Description: "New, reported energy value is calculated based on last/nreported value./n/nAvailable settings: 1 - 254 (0,01kWh - 2,54kWh)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Changes in consumed energy will not be reported. Reports will/nbe sent only in case of polling.",
					},
					ConfigValue{
						From: 1,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Define the value of consumed energy by which a report will be sent.",
					},
				},
			},
			ConfigParam{
				ID: 71,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Response to BRIGHTNESS set to 0%",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "illumination colour set to white (all channels controlled together)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "last set colour is memorized",
					},
				},
			},
			ConfigParam{
				ID: 72,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Starting predefined program when device set to work in RGB/RGBW mode (parameter 14) - relevant for main controllers other than Home Center 2 only.",
				Description: "1-10 animation program number",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Triple click action",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NODE INFO control frame is sent.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "starting favourite program",
					},
				},
			},
		},
	}
}
func New010f00011000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Home Center 2",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0001",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010f00021000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Home Center Lite",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0002",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010f00021001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Home Center Lite",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0002",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New010f01000103() *Device{
	return &Device{
		Brand: "Wall Insert",
		Product: "FGD-211",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0100",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All on/off function",
				Description: "Enables or disabled the all on / all off function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Commands Sent to Association Group 1",
				Description: "Defines what status changes cause sending out a wireless command. Zu allow double click function parameter 14 needs to be turned to 1 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning on and turning off sends out a wireless command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turning off sends a wireless command. All devices can be turned on using a double click, dimmers will return to their last dimming state.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turning ff sends a wireless command. All devices can be turned on using a double click, dimmers will dim to 100 %. ",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Check status before sending a control command on external switch no 2.",
				Description: "When external switch no 2 is switches the status of the remote device to be switches is checked or not.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Not checked",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Checked",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at automated control",
				Description: "The percentage drop of regulation per one dimming step with automated control",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Time between extreme values of manual dimming",
				Description: "The time of travel between extreme values of manual dimming level .",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "ms",
						Reserved: false,
						Description: "* 10 ms",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Time between extreme values of automatic dimming",
				Description: "The time of travel between extreme values of dimming level with remote control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "ms",
						Reserved: false,
						Description: "* 10 ms",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at manual control",
				Description: "The percentage drop of regulation per one dimming step with manual control",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "The maximal dimming level",
				Description: "The maximal level of dimmer’s brightening",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "The minimal dimming level",
				Description: "The minimal level of dimmer’s brightening",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "External Switch Type",
				Description: "The type of switch may be chosen from mono-stable or bistable switches",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bistable switch",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Double Click Option",
				Description: " Defines if the double click option is enabled. This will turn the dimmer to 100 % dimming level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Saving of the device state after power failure",
				Description: "Saving of the device state after the power supply black-out. The dimmer will return to the last state before the power supply black-out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "last dim state",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Allows to double the key number 1",
				Description: "Stair button function allows to double the key number 1. The dimmer may operate two bistable keys or an infinite number of mono-stable keys.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Light intensity synchronization",
				Description: "The function of synchronization of the light intensity for associated devices. The dimmer transmits this state to the associated device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function on",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Defines how to use bistable external switches",
				Description: "Bistable Switches remain in the switching state. The parameters defines how such a switch can be used for dimming.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Every Switch on toggles the device",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Closing external contact turns on, opening external contacts turns off",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 110,
				Name: "Length of the Dimmer control pulse",
				Description: "The function allows for lowering of the minimal dimmer’s level by extending of control impulse. By the means of minimal level change, the dimmer allows for the complete dimmering of LED bulbs. Not all of the LED bulbs available on the market allow dimming.",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 170,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
		},
	}
}
func New010f01000109() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGD211 V1.9",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0100",
		ProductID: "0109",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Параметр №1 - Включить всё/Выключить всё",
				Description: "Параметр позволяет настроить, будет ли модуль реагировать на широковещательные команды &#34;Включить всё&#34; и &#34;Выключить всё&#34;. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Игнорировать команду Выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №6 - В каких случаях отправляется команда устройствам из группы 1, т.е. при нажатии кнопки №1",
				Description: "Примечание: В параметре №15 &#34;Двойные клики&#34; должно быть выбрано значение &#34;Включены&#34;. Это активирует управление диммерами и жалюзи с помощью двойных кликов ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Включается или Выключается",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на последний установленный уровень яркости.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на 100%",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №7 - Проверять статус удаленного устройства перед отправкой ему команды ВКЛ или ВЫКЛ от кнопки № 2",
				Description: "Нажатие на кнопку №2 отправит ассоциированному устройству команду ВКЛ или ВЫКЛ. Чтобы узнать какую команду нужно послать диммер сначала должен проверить статус ассоциированного устройства. Если устройство выключено, то нажатие на кнопку №2 отправит команду ВКЛ и наоборот. Если не проверять статус ассоциированного устройства, то при каждом нажатии на кнопку №2 команды ВКЛ и ВЫКЛ будут отправляться по очереди. Проверка статуса не работает если в Параметре 14 выбрано &#34;моностабильный с двумя кнопками&#34; (значение 2). Также, чтобы проверка статуса работала, в Параметре 19 должно быть выбрано &#34;[ВКЛ/ВЫКЛ] изменять статус&#34; (значение 0)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не проверять статус",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Проверять статус",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №8 - Шаг диммирования в процентах при удаленном управлении",
				Description: "Шаг диммирования при управлении с компьютера, телефона. Задайте 99%, и свет будет включаться на полную даже если уровень яркости установить на 1%. По умолчанию шаг диммирования равен 1%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Параметр №9 - Время изменения яркости от 0 до 100% при локальном использовании",
				Description: "Время диммирования в секундах от минимального значения яркости до максимального при удержании кнопки №1",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "ms",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №10 - Время изменения яркости от 0 до 100% при удаленном использовании",
				Description: "0 (Мгновенное) означает, что яркость будет изменяться не плавно, а резко при удаленном управлении. Это нужно для устройств с индуктивной и емкостной нагрузкой, которые не поддерживают плавное изменение нагрузки (например, люминесцентные лампы, электродвигатели и т.д.) ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенное изменение яркости",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "ms",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №11 - Шаг диммирования в процентах при локальном управлении",
				Description: "Шаг диммирования при управлении с самого выключателя. Задайте 99%, и свет будет включаться на полную даже если уровень яркости установить на 1%. По умолчанию шаг диммирования равен 1%",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Параметр №12 - Максимальный уровень яркости",
				Description: "Максимальный уровень яркости можно задать от 2 до 99%",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Параметр №13 - Минимальный уровень яркости",
				Description: "Минимальный уровень яркости можно задать от 1 до 98%. Максимальный уровень яркости не может быть меньше, чем минимальный. Рекомендуемые значения для Параметров 12 и 13 (Максимальный и Минимальный уровень) для управления устройствами: *AC моторы [min 60%, max 99%]; *люминесцентные лампы, LED [min 98%, max 99%], Параметр 10 должен быть установлен в 0 (Мгновенное изменение яркости)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №14 - Тип выключателя",
				Description: "Моностабильный: для выключателя возвратного типа или для кнопки, каждое нажатие переключает устройство в противоположное состояние. Бистабильный: для обычных выключателей с двумя положениями Включено и Выключено. Моностабильный с двумя кнопками: для выключателей возвратного типа с двумя кнопками, нажатие верхней кнопки включает устройство, нажатие нижней кнопки - выключает, такие выключатели используются для управления шторами и жалюзи и могу быть использованы для управления диммером.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Моностабильный",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Бистабильный",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Моностабильный с двумя кнопками",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №15 - Двойные клики",
				Description: "Этот параметр позволяет активировать функцию управления устройствами с помощью двойных кликов. В параметре 6 можно задать чтобы с помощью двойных кликов диммеры включались на 100% или на последний уровень",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "отключены",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "включены",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №16 - Восстанавливать состояние устройства после отключения питания",
				Description: "Если требуется, чтобы после электро-сбоя устройство восстановило своё прежнее состояние, выберите &#34;Восстанавливать&#34;. Если нужно, чтобы устройство было выключено после электро-сбоя выберите &#34;Не восстанавливать&#34;",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №17 - Использовать проходной выключатель",
				Description: "Позволяет подключить несколько кнопок к S1. Диммер может управляться двумя бистабильными выключателями или бесконечным количеством моностабильных выключателей",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не использовать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Использовать",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №18 - Синхронизировать уровень яркости с ассоциированными устройствами",
				Description: "Если на диммере установить определенный уровень яркости, то этот же уровень яркости передастся на все ассоциированные устройства",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "не синхронизировать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "синхронизировать",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №19 - Как изменяется статус устройства в бистабильном режиме",
				Description: "Если выбрано &#34;Нажатие клавиши переключит устройство в противоположное состояние&#34;, то не важно в каком положение у вас находится клавиша выключателя. Если свет включен и клавиша находится в нижнем положении, то переведя её в верхнее положение свет выключится./n/nЕсли выбрано &#34;Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет&#34;, то включится свет или выключится зависит от положения клавиши. Если вы включили свет с контроллера, и клавиша осталась внизу, то чтобы выключить свет с выключателя, сначала нужно клавишу перевести в верхнее положение (свет по прежнему будет гореть), а затем в нижнее, тогда свет потухнет.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши переключит устройство в противоположное состояние [Вкл/Выкл]",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 110,
				Name: "Параметр №20 - Длина управляющего импульса",
				Description: "Можно уменьшить минимальный уровень яркости за счет увеличения продолжительности управляющего импульса. Изменяя минимальный уровень, можно полноценно диммировать LED лампу. Не все LED лампы поддерживают плавное изменение яркости. По умолчанию: 101 для 60Гц, 110 для 50Гц. Внимание! Диммер может работать не корректно, если настройки заданы неверно",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 170,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №30 - Сигнал тревоги о затопление, задымление: CO, CO2, температуре и стандартный сигнал",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Параметр №39 - Время мигания устройства",
				Description: "Используется, если в параметре 30 выбрано значение: &#34;Устройство начнет мигать&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 99,
				Name: "Параметр №40 - Обновлять уровень яркости без нажатия на кнопку",
				Description: "Значение параметра зависит от уровня яркости",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №41 - Использовать сцены",
				Description: "Это устройство позволяет выполнять сцены. Команды на выполнения сцен отправляются устройствам находящимся в группе 3. Контроллеры, такие как Home Center 2, Z-Box понимают эти команды и могут исполнить сцену, ID которой указан в команде. Нажатие определенной комбинации кнопок подключенных к S1 и S2 отправляет определенный ID. Таким образом можно по двойному нажатию запускать сцену &#34;Включить везде свет&#34;, а по тройному &#34;Выключить везде свет&#34;./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не использовать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Использовать",
					},
				},
			},
		},
	}
}
func New010f01021000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGD-212",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0102",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Minimum brightness level",
				Description: "Available settings: 1-98 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of brightness.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum brightness level",
				Description: "Available settings: 2-99 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of brightness.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Incandescence level of dimmable compact fluorescent lamps",
				Description: "Virtual value set as a percentage level between parameters MIN/n(1%) and MAX. (99%). The Dimmer will set to this value after first/nswitch on. It is required for warming up and switching dimmable/ncompact fluorescent lamps and certain types of light sources./nAvailable settings: 1-99 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of incandescence.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Incandescence time of dimmable compact fluorescent lamps",
				Description: "fluorescent lamps and certain types of light sources. Setting this/nparameter to 0 will disable the incandescence functionality./nAvailable settings: 0-255 (0s - 25,5s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Incandescence functionality is disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 0.1 sec",
						Reserved: false,
						Description: "Define the incandescence time.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at automatic control",
				Description: "Available settings: 1-99",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the percentage of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time of a dimming step at automatic control",
				Description: "Available settings: 0-255 (0s - 2,55s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "Define the time of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at manual control",
				Description: "Available settings: 1-99",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the percentage of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time of a dimming step at manual control",
				Description: "Available settings: 0-255 (0s - 2,55s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "Define the time of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "State of the device after a power failure",
				Description: "The Dimmer will return to the last state before power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Dimmer does not save the state before a power failure, it/nreturns to &#34;off&#34; position",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The Dimmer restores it&#39;s state before power failure",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer functionality (auto - off)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "Sek",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "time to turn off measured in seconds (1s - 9,1h)",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "ALL ON/ALL OFF function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON not active, ALL OFF not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON not active, ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Force auto-calibration",
				Description: "Changing value of this parameter will force the calibration process./nDuring the calibration parameter is set to 1 or 2 and switched to 0/nupon completion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "readout",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "force auto-calibration of the load without Fibaro Bypass",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "force auto-calibration of the load with Fibaro Bypass",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto-calibration status (read-only parameter)",
				Description: "This parameter determines operating mode of the Dimmer/n(automatic/manual settings).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "calibration procedure not performed or Dimmer operates on/nmanual settings",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Dimmer operates on auto-calibration settings",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Burnt out bulb detection",
				Description: "Function based on the sudden power variation of a specific value,/ninterpreted as a LOAD ERROR.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "percentage value of power variation, compared to standard/npower consumption, measured during the calibration procedure (to be interpreted as load error/burnt out bulb)",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time delay of a burnt out bulb (parameter 15) or overload (parameter 39) detection.",
				Description: "Time of delay (in seconds) for power variation detection, interpreted/nas a LOAD ERROR or OVERLOAD detection (too much power/nconnected to the Dimmer).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "detection of a burnt out bulb disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "delay time in seconds",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Forced switch on brightness level",
				Description: "If the parameter is active, switching on the Dimmer (S1 single click)/nwill always set this brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "percentage level of brightness",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch type",
				Description: "Choose between momentary switch, toggle switch and roller blind/nswitch.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "momentary switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "toggle switch",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Roller blind switch - two switches operate the Dimmer (S1 to/nbrighten, S2 to dim)",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The value sent to associated devices on single click",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0xFF value is sent, which will set associated devices to their last/nsaved state.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Current Dimmer state is sent, which will synchronize brightness/nlevel of associated devices (other Dimmers for example).",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Assign toggle switch status to the device status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device changes status on switch status change.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Device status is synchronized with switch status.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Double click option",
				Description: "Set the brightness level to MAX",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "double click disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "double click enabled",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command frames sent in 2-nd and 3-rd association groups (S1 associations)",
				Description: "Parameter determines, which actions will not result in sending/nframes to association groups. Parameter values may be combined,/ne.g. 1&#43;2=3 means that associations on switching on or off the/nDimmer (single click) will not be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "0 - all actions send to association groups; /n1 - do not send when switching on the Dimmer (single click); /n2 - do not send when switching off the Dimmer (single click); /n4 - do not send when changing dimming level (holding and releasing); /n8 - do not send on double click; /n16 - send 0xFF value on double click; ",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command frames sent in 4-th and 5-th association groups (S2 associations)",
				Description: "Parameter determines, which actions will not result in sending/nframes to association groups. Parameter values may be combined,/ne.g. 1&#43;2=3 means that associations on switching on or off the/nDimmer (single click) will not be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "0 - all actions send to association groups; /n1 - do not send when switching on the Dimmer (single click); /n2 - do not send when switching off the Dimmer (single click); /n4 - do not send when changing dimming level (holding and releasing); /n8 - do not send on double click; /n16 - send 0xFF value on double click; ",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The function of 3-way switch",
				Description: "Switch no. 2 controls the Dimmer additionally (in 3-way switch/nmode). Function disabled for parameter 20 set to 2 (roller blind/nswitch).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "3-way switch function for S2 disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3-way switch function for S2 enabled",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified/nassociation groups: as secure or non-secure. Parameter is active/nonly in Z-Wave network security mode. It does not apply to 1st/nLifeline group. Parameter values may be combined, e.g. 1&#43;2=3/nmeans that 2nd &amp; 3rd group are sent as secure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "0 - all groups (II-V) sent as non-secure; /n1 - 2nd group sent as secure; /n2 - 3rd group sent as secure; /n4 - 4th group sent as secure; /n8 - 5th group sent as secure; /n15 - all groups (II-V) sent as secure",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Scene activation functionality",
				Description: "SCENE ID depends on the switch type configurations.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "functionality deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "functionality activated",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch functionality of S1 and S2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "standard mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "S1 operates as S2, S2 operates as S1",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Load control mode",
				Description: "Forced auto-calibration will set this parameter’s value to 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "forced leading edge control",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "forced trailing edge control",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "control mode selected automatically (based on auto-calibration)",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Load control mode recognized during auto-calibration (read only).",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "leading edge",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "trailing edge",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "On/Off mode",
				Description: "This mode is necessary while connecting non-dimmable light/nsources. Setting this parameter to 1 automatically ignores/nbrightening/dimming time settings. Forced auto-calibration will set/nthis parameter’s value to 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off mode disabled (dimming is possible)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on/off mode enabled (dimming is not possible)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "mode selected automatically",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dimmability of the load (read only)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Load recognized as dimmable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Load recognized as non-dimmable",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Soft-Start functionality",
				Description: "Time required to warm up the filament of halogen bulb.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no soft-start",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "short soft-start (0,1s)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "long soft-start (0,5s)",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Auto-calibration after power on",
				Description: "This parameter determines the trigger of auto-calibration procedure,/ne.g. power on, load error, etc.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No auto-calibration of the load after power on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after first power on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after each power on",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after first power on or after each/nLOAD ERROR alarm (no load, load failure, burnt out bulb), if/nparameter 37 is set to 1 also after alarms: SURGE (Dimmer output/novervoltage) and OVERCURRENT (Dimmer output overcurrent)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after each power on or after each/nLOAD ERROR alarm (no load, load failure, burnt out bulb), if/nparameter 37 is set to 1 also after alarms: SURGE (Dimmer output/novervoltage) and OVERCURRENT (Dimmer output overcurrent)",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Behaviour of the Dimmer after OVERCURRENT or SURGE",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "device permanently disabled until re-enabling by comand or/nexternal switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "three atempts to turn on the load",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 250,
				Name: "Power limit - OVERLOAD",
				Description: "Reaching the defined value will result in turning off the load./nAdditional apparent power limit of 350VA is active by default.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 350,
						Unit: "W",
						Reserved: false,
						Description: "Define a power limit.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Response to General Purpose Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Load blinking",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Response to Water Flooding Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Response to Smoke, CO or CO2 Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Response to Temperature Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Time of alarm state",
				Description: "Alarm state may be cancelled earlier, as a result of pressing the/nswitches or sending the Z-Wave command frame.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time period of an alarm state.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERLOAD alarm report",
				Description: "load power consumption too high",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LOAD ERROR alarm report",
				Description: "no load, load failure, burnt out bulb",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERCURRENT alarm report",
				Description: "short circuit, burnt out bulb/ncausing overcurrent",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 48,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "SURGE alarm report",
				Description: "Dimmer output overvoltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERHEAT (critical temperature) and VOLTAGE DROP (low voltage) alarm report",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Active power reports",
				Description: "The parameter defines the power level change that will result in a/nnew power report being sent. The value is a percentage of the/nprevious report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "power reports disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "define the power report threshold.",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Periodic active power and energy reports",
				Description: "Parameter 52 defines a time period between consecutive reports./nTimer is reset and counted from zero after each report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period for periodic reports.",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Energy reports",
				Description: "Energy level change which will result in sending a new energy report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "energy reports are disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 0,01 kWh",
						Reserved: false,
						Description: "report triggering threshold",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Self-measurement",
				Description: "The Dimmer may include active power and energy consumed by/nitself in reports sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Self-measurement inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Self-measurement active",
					},
				},
			},
			ConfigParam{
				ID: 58,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Method of calculating the active power",
				Description: "This parameter defines how to calculate active power. This/nparameter is useful in a case of 2-wire connection with light sources/nother than resistive./nThe parameter is set to 0 after forced auto-calibration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "power measurement based on the standard algorithm",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "approximation based on the calibration data",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "approximation based on the control angle",
					},
				},
			},
			ConfigParam{
				ID: 59,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Approximated power at the maximum brightness level",
				Description: "This parameter determines the approximate value of the power that/nwill be reported by the device at its maximum brightness level. This/nparameter works only when parameter 58 has a value other than 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 500,
						Unit: "W",
						Reserved: false,
						Description: "power consumed by the load at the maximum/nbrightness level",
					},
				},
			},
		},
	}
}
func New010f01022000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGD-212",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0102",
		ProductID: "2000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Minimum brightness level",
				Description: "Available settings: 1-98 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of brightness.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum brightness level",
				Description: "Available settings: 2-99 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of brightness.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Incandescence level of dimmable compact fluorescent lamps",
				Description: "Virtual value set as a percentage level between parameters MIN/n(1%) and MAX. (99%). The Dimmer will set to this value after first/nswitch on. It is required for warming up and switching dimmable/ncompact fluorescent lamps and certain types of light sources./nAvailable settings: 1-99 - percentage level of brightness",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of incandescence.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Incandescence time of dimmable compact fluorescent lamps",
				Description: "fluorescent lamps and certain types of light sources. Setting this/nparameter to 0 will disable the incandescence functionality./nAvailable settings: 0-255 (0s - 25,5s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Incandescence functionality is disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 0.1 sec",
						Reserved: false,
						Description: "Define the incandescence time.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at automatic control",
				Description: "Available settings: 1-99",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the percentage of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time of a dimming step at automatic control",
				Description: "Available settings: 0-255 (0s - 2,55s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "Define the time of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "The percentage of a dimming step at manual control",
				Description: "Available settings: 1-99",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the percentage of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time of a dimming step at manual control",
				Description: "Available settings: 0-255 (0s - 2,55s)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "Define the time of a dimming step.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "State of the device after a power failure",
				Description: "The Dimmer will return to the last state before power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Dimmer does not save the state before a power failure, it/nreturns to &#34;off&#34; position",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The Dimmer restores it&#39;s state before power failure",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer functionality (auto - off)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "Sek",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "time to turn off measured in seconds (1s - 9,1h)",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "ALL ON/ALL OFF function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON not active, ALL OFF not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON not active, ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Force auto-calibration",
				Description: "Changing value of this parameter will force the calibration process./nDuring the calibration parameter is set to 1 or 2 and switched to 0/nupon completion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "readout",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "force auto-calibration of the load without Fibaro Bypass",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "force auto-calibration of the load with Fibaro Bypass",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto-calibration status (read-only parameter)",
				Description: "This parameter determines operating mode of the Dimmer/n(automatic/manual settings).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "calibration procedure not performed or Dimmer operates on/nmanual settings",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Dimmer operates on auto-calibration settings",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Burnt out bulb detection",
				Description: "Function based on the sudden power variation of a specific value,/ninterpreted as a LOAD ERROR.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "percentage value of power variation, compared to standard/npower consumption, measured during the calibration procedure (to be interpreted as load error/burnt out bulb)",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Time delay of a burnt out bulb (parameter 15) or overload (parameter 39) detection.",
				Description: "Time of delay (in seconds) for power variation detection, interpreted/nas a LOAD ERROR or OVERLOAD detection (too much power/nconnected to the Dimmer).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "detection of a burnt out bulb disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "delay time in seconds",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Forced switch on brightness level",
				Description: "If the parameter is active, switching on the Dimmer (S1 single click)/nwill always set this brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "percentage level of brightness",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch type",
				Description: "Choose between momentary switch, toggle switch and roller blind/nswitch.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "momentary switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "toggle switch",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Roller blind switch - two switches operate the Dimmer (S1 to/nbrighten, S2 to dim)",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The value sent to associated devices on single click",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0xFF value is sent, which will set associated devices to their last/nsaved state.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Current Dimmer state is sent, which will synchronize brightness/nlevel of associated devices (other Dimmers for example).",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Assign toggle switch status to the device status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device changes status on switch status change.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Device status is synchronized with switch status.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Double click option",
				Description: "Set the brightness level to MAX",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "double click disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "double click enabled",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command frames sent in 2-nd and 3-rd association groups (S1 associations)",
				Description: "Parameter determines, which actions will not result in sending/nframes to association groups. Parameter values may be combined,/ne.g. 1&#43;2=3 means that associations on switching on or off the/nDimmer (single click) will not be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "0 - all actions send to association groups; /n1 - do not send when switching on the Dimmer (single click); /n2 - do not send when switching off the Dimmer (single click); /n4 - do not send when changing dimming level (holding and releasing); /n8 - do not send on double click; /n16 - send 0xFF value on double click; ",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command frames sent in 4-th and 5-th association groups (S2 associations)",
				Description: "Parameter determines, which actions will not result in sending/nframes to association groups. Parameter values may be combined,/ne.g. 1&#43;2=3 means that associations on switching on or off the/nDimmer (single click) will not be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "0 - all actions send to association groups; /n1 - do not send when switching on the Dimmer (single click); /n2 - do not send when switching off the Dimmer (single click); /n4 - do not send when changing dimming level (holding and releasing); /n8 - do not send on double click; /n16 - send 0xFF value on double click; ",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "The function of 3-way switch",
				Description: "Switch no. 2 controls the Dimmer additionally (in 3-way switch/nmode). Function disabled for parameter 20 set to 2 (roller blind/nswitch).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "3-way switch function for S2 disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3-way switch function for S2 enabled",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified/nassociation groups: as secure or non-secure. Parameter is active/nonly in Z-Wave network security mode. It does not apply to 1st/nLifeline group. Parameter values may be combined, e.g. 1&#43;2=3/nmeans that 2nd &amp; 3rd group are sent as secure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "0 - all groups (II-V) sent as non-secure; /n1 - 2nd group sent as secure; /n2 - 3rd group sent as secure; /n4 - 4th group sent as secure; /n8 - 5th group sent as secure; /n15 - all groups (II-V) sent as secure",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Scene activation functionality",
				Description: "SCENE ID depends on the switch type configurations.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "functionality deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "functionality activated",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch functionality of S1 and S2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "standard mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "S1 operates as S2, S2 operates as S1",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Load control mode",
				Description: "Forced auto-calibration will set this parameter’s value to 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "forced leading edge control",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "forced trailing edge control",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "control mode selected automatically (based on auto-calibration)",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Load control mode recognized during auto-calibration (read only).",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "leading edge",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "trailing edge",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "On/Off mode",
				Description: "This mode is necessary while connecting non-dimmable light/nsources. Setting this parameter to 1 automatically ignores/nbrightening/dimming time settings. Forced auto-calibration will set/nthis parameter’s value to 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off mode disabled (dimming is possible)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on/off mode enabled (dimming is not possible)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "mode selected automatically",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dimmability of the load (read only)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Load recognized as dimmable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Load recognized as non-dimmable",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Soft-Start functionality",
				Description: "Time required to warm up the filament of halogen bulb.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no soft-start",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "short soft-start (0,1s)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "long soft-start (0,5s)",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Auto-calibration after power on",
				Description: "This parameter determines the trigger of auto-calibration procedure,/ne.g. power on, load error, etc.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No auto-calibration of the load after power on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after first power on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after each power on",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after first power on or after each/nLOAD ERROR alarm (no load, load failure, burnt out bulb), if/nparameter 37 is set to 1 also after alarms: SURGE (Dimmer output/novervoltage) and OVERCURRENT (Dimmer output overcurrent)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Auto-calibration performed after each power on or after each/nLOAD ERROR alarm (no load, load failure, burnt out bulb), if/nparameter 37 is set to 1 also after alarms: SURGE (Dimmer output/novervoltage) and OVERCURRENT (Dimmer output overcurrent)",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Behaviour of the Dimmer after OVERCURRENT or SURGE",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "device permanently disabled until re-enabling by comand or/nexternal switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "three atempts to turn on the load",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 250,
				Name: "Power limit - OVERLOAD",
				Description: "Reaching the defined value will result in turning off the load./nAdditional apparent power limit of 350VA is active by default.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 350,
						Unit: "W",
						Reserved: false,
						Description: "Define a power limit.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Response to General Purpose Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Load blinking",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Response to Water Flooding Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Response to Smoke, CO or CO2 Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Response to Temperature Alarm",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on the load",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off the load",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "load blinking",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Time of alarm state",
				Description: "Alarm state may be cancelled earlier, as a result of pressing the/nswitches or sending the Z-Wave command frame.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time period of an alarm state.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERLOAD alarm report",
				Description: "load power consumption too high",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LOAD ERROR alarm report",
				Description: "no load, load failure, burnt out bulb",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERCURRENT alarm report",
				Description: "short circuit, burnt out bulb/ncausing overcurrent",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 48,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "SURGE alarm report",
				Description: "Dimmer output overvoltage",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "OVERHEAT (critical temperature) and VOLTAGE DROP (low voltage) alarm report",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send an alarm frame",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Active power reports",
				Description: "The parameter defines the power level change that will result in a/nnew power report being sent. The value is a percentage of the/nprevious report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "power reports disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "define the power report threshold.",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Periodic active power and energy reports",
				Description: "Parameter 52 defines a time period between consecutive reports./nTimer is reset and counted from zero after each report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period for periodic reports.",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Energy reports",
				Description: "Energy level change which will result in sending a new energy report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "energy reports are disabled",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "x 0,01 kWh",
						Reserved: false,
						Description: "report triggering threshold",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Self-measurement",
				Description: "The Dimmer may include active power and energy consumed by/nitself in reports sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Self-measurement inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Self-measurement active",
					},
				},
			},
			ConfigParam{
				ID: 58,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Method of calculating the active power",
				Description: "This parameter defines how to calculate active power. This/nparameter is useful in a case of 2-wire connection with light sources/nother than resistive./nThe parameter is set to 0 after forced auto-calibration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "power measurement based on the standard algorithm",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "approximation based on the calibration data",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "approximation based on the control angle",
					},
				},
			},
			ConfigParam{
				ID: 59,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Approximated power at the maximum brightness level",
				Description: "This parameter determines the approximate value of the power that/nwill be reported by the device at its maximum brightness level. This/nparameter works only when parameter 58 has a value other than 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 500,
						Unit: "W",
						Reserved: false,
						Description: "power consumed by the load at the maximum/nbrightness level",
					},
				},
			},
		},
	}
}
func New010f02000103() *Device{
	return &Device{
		Brand: "Fibar",
		Product: "FGS-221",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0200",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				InNIF: "false",
				Version: "0",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All on/off function",
				Description: "Enables or disabled the all on / all off function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Automatic Switching Off after defined time",
				Description: "Allows to automatically turn off the relais after a fixed time set in parameter 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled for relays 1, disabled for relays 2",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enabled for relays 2, disabled for relays 1",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Automated Turn Off Time for relays 1",
				Description: "defines the time  to turn off the relais 1in case parameter no 3 is enabled",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ms",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Automated Turn Off Time for relays 2",
				Description: "defines the time  to turn off the relais 2 in case parameter no 3 is enabled",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ms",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Commands Sent to Association Group 1",
				Description: "Defines what status changes cause sending out a wireless command. Zu allow double click function parameter 15 needs to be turned to 1 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning on and turning off sends out a wireless command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turning off sends a wireless command. All devices can be turned on using a double click, dimmers will return to their last dimming state.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turning ff sends a wireless command. All devices can be turned on using a double click, dimmers will dim to 100 %. ",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Check status before sending a control command on external switch no 2.",
				Description: "When external switch no 2 is switches the status of the remote device to be switches is checked or not.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Not checked",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Checked",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Bistable Switch State",
				Description: "Defines the behavior of a connected bistable switch",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON/OFF sets to change of key state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON is active when contacts are closed and OFF is active when contacts are open",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Switch",
				Description: "Defines the type of switch attached to the device",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving of switch state after power-down",
				Description: "The device will or will not return to the last switch state after a power down",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "not return to previous state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "return to previous state",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Time of Active Alarm",
				Description: "Defines how long a alarm shall be active",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 20000,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
		},
	}
}
func New010f02000109() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGS221 V1.9",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0200",
		ProductID: "0109",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0000,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Параметр №1 - Включить всё/Выключить всё",
				Description: "Параметр позволяет настроить, будет ли модуль реагировать на широковещательные команды &#34;Включить всё&#34; и &#34;Выключить всё&#34;. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Игнорировать команду Выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №3 - Работает ли кнопка &#34;Выключить&#34; если задано время авто отключения",
				Description: "Позволяет настроить работу кнопки &#34;Выключить&#34;, если задано время авто отключения. Если выбрано - Работает, то кнопка выключения будет выключать нагрузку. Если выбрано - Не работает, то при нажатии на кнопку выключения, нагрузка не будет выключаться, а таймер авто отключения начнется заново",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Работает",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не работает",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Параметр №4 - Авто отключение для реле №1",
				Description: "Если не 0, автоматически отключает реле №1 через определенное время. [1-65535](0,1 c - 6553,5 c)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №5 - Авто отключение для реле №2",
				Description: "Если не 0, автоматически отключает реле №2 через определенное время. [1-65535](0,1 c - 6553,5 c)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №6 - В каких случаях отправляется команда устройствам из группы 1, т.е. при нажатии кнопки №1",
				Description: "Примечание: В параметре №15 &#34;Управление Диммерами и Жалюзи&#34; должно быть выбрано значение &#34;Двойные клики включены&#34;. Это активирует управление диммерами и жалюзи с помощью двойных кликов ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Включается или Выключается",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на последний установленный уровень яркости.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на 100%",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №7 - В каких случаях отправляется команда устройствам из группы 2, т.е. при нажатии кнопки №2",
				Description: "Примечание: В параметре №15 &#34;Управление Диммерами и Жалюзи&#34; должно быть выбрано значение &#34;Двойные клики включены&#34;. Это активирует управление диммерами и жалюзи с помощью двойных кликов ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Включается или Выключается",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на последний установленный уровень яркости.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на 100%",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №13 - Как изменяется статус устройства в бистабильном режиме",
				Description: "Если выбрано &#34;Нажатие клавиши переключит устройство в противоположное состояние&#34;, то не важно в каком положение у вас находится клавиша выключателя. Если свет включен и клавиша находится в нижнем положении, то переведя её в верхнее положение свет выключится./n/nЕсли выбрано &#34;Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет&#34;, то включится свет или выключится зависит от положения клавиши. Если вы включили свет с контроллера, и клавиша осталась внизу, то чтобы выключить свет с выключателя, сначала нужно клавишу перевести в верхнее положение (свет по прежнему будет гореть), а затем в нижнее, тогда свет потухнет.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши переключит устройство в противоположное состояние [Вкл/Выкл]",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №14 - Режим переключения",
				Description: "Моностабильный: для выключателя возвратного типа или для кнопки, каждое нажатие переключает устройство в противоположное состояние. Бистабильный: для обычных выключателей с двумя положениями Включено и Выключено.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "моностабильный",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "бистабильный",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №15 - Управление Диммерами и Жалюзи",
				Description: "Если выбрано &#34;Разрешено&#34; то с помощью выключателя можно управлять диммерами и жалюзи расположенными в группах ассоциаций. Только для моностабильного режима",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Запрещено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Разрешено",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №16 - Восстанавливать состояние устройства после отключения питания",
				Description: "Если требуется, чтобы после электро-сбоя устройство восстановило своё прежнее состояние, выберите &#34;Восстанавливать&#34;. Если нужно, чтобы устройство было выключено после электро-сбоя выберите &#34;Не восстанавливать&#34;",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №30 - Общие настройки реагирования на сигнал тревоги для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №40 - Общие настройки реагирования на сигнал тревоги для реле №2",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Параметр №31 - Реагирования на сигнал тревоги при затоплении для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Параметр №41 - Реагирования на сигнал тревоги при затоплении для реле №2",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №32 - Реагирование на сигнал тревоги о задымлении, CO, CO2 для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика дыма или газа сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №42 - Реагирование на сигнал тревоги о задымлении, CO, CO2 для реле №2",
				Description: "Параметр определяет, что сделает устройство если получит от датчика дыма или газа сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №33 - Реагирование на сигнал тревоги о Температуре для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика температуры сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №43 - Реагирование на сигнал тревоги о Температуре для реле №2",
				Description: "Параметр определяет, что сделает устройство если получит от датчика температуры сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Параметр №39 - Время мигания устройства",
				Description: "Используется, если в каком либо из параметров 30,31,32,33 выбрано значение: &#34;Устройство начнет мигать&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
		},
	}
}
func New010f0200100a() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGS222",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0200",
		ProductID: "100a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Activation/Deactivation",
				Description: "Activation/deactivation of ALL ON/ALL OFF functions",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto off relay after specified time, with the possibility of manual override - immediate Off after button push",
				Description: "If manual override enabled, then after single button push the relay turns on and automatically turns off after specified time. Another button push turns the relay off immediately. If manual override disabled, then after single button push the relay turns on and automatically turns off after specified time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled for relays 1, disabled for relays 2",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enabled for relays 2, disabled for relays 1",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Auto off",
				Description: "If not zero, automatically switch off after a user defined time. (0.1 s - 6553.5 s)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "time",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Sending commands to control devices assigned to 1-st association group (key № 1)",
				Description: "Parameter 15 value must be set to 1 to work properly. This activates the double-click functionality - dimmer/roller shutter control",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning on and turning off sends out a wireless command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "urning off sends a wireless command. All devices can be turned on using a double click, dimmers will return to their last dimming state.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turning ff sends a wireless command. All devices can be turned on using a double click, dimmers will dim to 100 %.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Assigns bistable key status to the device status",
				Description: "Remote control from Fibaro System is Still Possible. This function is useful when you display status of external devices, e.g. Motion Sensor, in Fibaro System",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON/OFF sets to change of key state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON is active when contacts are closed and OFF is active when contacts are open",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Type",
				Description: "Switch type connector, you may choose between mono-stable and bi-stable switches",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation of the Dimmer and Roller Shutter Controller (mono-stable type)",
				Description: "Operation of the Dimmer and Roller Shutter Controller - enabling this option allows the user to dim lighting/shut roller by associating Dimmer/Roller Shutter Controller and holding or double press of double switch (only mono-stable switch)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "deactivate",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "activate",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Saving device state after power failure",
				Description: "Saving the state of the devices after power failure. Fibaro Switch returns to the last position saved before a power failure",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "not return to previous state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "return to previous state",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Active flashing alarm time",
				Description: "Defines how long a alarm shall be active",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "time",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
		},
	}
}
func New010f03000103() *Device{
	return &Device{
		Brand: "Fibar",
		Product: "FGR-221",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0300",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0050,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All on/off function",
				Description: "Enables or disabled the all on / all off function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Turn Off Roller position function",
				Description: "activates the turn off roller positioning function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Switch",
				Description: "Defines the type of switch attached to the device",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 22,
				Name: "Favorite position state",
				Description: "defines the favorite position of the blind",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 153,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set ",
				Description: "This defines the behavior in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Blind will go down in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Blind will go up in case of  alarm",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set ",
				Description: "This defines the behavior in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Blind will go down in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Blind will go up in case of  alarm",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set ",
				Description: "This defines the behavior in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Blind will go down in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Blind will go up in case of  alarm",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set ",
				Description: "This defines the behavior of in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Blind will go down in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Blind will go up in case of  alarm",
					},
				},
			},
		},
	}
}
func New010f03000109() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGR211 V1.9",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0300",
		ProductID: "0109",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0050,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №1 - Включить всё/Выключить всё",
				Description: "Параметр позволяет настроить, будет ли модуль реагировать на широковещательные команды &#34;Включить всё&#34; и &#34;Выключить всё&#34;. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Игнорировать команду Выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №10 - Запоминать положение жалюзи",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Запоминать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Не запоминать",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №14 - Режим переключения",
				Description: "Моностабильный: для выключателя возвратного типа с двумя клавишами, первая клавиша открывает жалюзи или останавливает, если жалюзи закрывается, вторая закрывает или останавливает, если жалюзи открываются. Бистабильный: для обычных выключателей с двумя положениями Открыть и Закрыть. Моностабильный с одной кнопкой: для выключателя возвратного типа, каждое нажатие переключает устройство в противоположное состояние.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Моностабильный",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Бистабильный",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Моностабильный с одной кнопкой",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 16,
				Name: "Параметр №20 - Избранное положение",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Параметр №30 - Общие настройки реагирования на сигнал тревоги",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Откроется",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Закроется",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №31 - Реагирование на сигнал тревоги при затоплении",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Откроется",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Закроется",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №32 - Реагирование на сигнал тревоги о задымлении, CO, CO2",
				Description: "Параметр определяет, что сделает устройство если получит от датчика дыма или газа сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Откроется",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Закроется",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №33 - Реагирование на сигнал тревоги о температуре",
				Description: "Параметр определяет, что сделает устройство если получит от датчика температуры сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Откроется",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Закроется",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №41 - Использовать сцены",
				Description: "Это устройство позволяет выполнять сцены. Команды на выполнения сцен отправляются устройствам находящимся в группе 3. Контроллеры, такие как Home Center 2, Z-Box понимают эти команды и могут исполнить сцену, ID которой указан в команде. Нажатие определенной комбинации кнопок подключенных к S1 и S2 отправляет определенный ID. Таким образом можно по двойному нажатию запускать сцену &#34;Включить везде свет&#34;, а по тройному &#34;Выключить везде свет&#34;./nДля моностабильного выключателя: ID 12 - удержание S1; ID 13 - отпускание S1; ID 14 - двойное нажатие S1; ID 15 - тройное нажатие S1; ID 16 - одинарное нажатие S1; ID 22 - удержание S2; ID 23 - отпускание S2; ID 24 - двойное нажатие S2; ID 25 - тройное нажатие S2; ID 25 - одинарное нажатие S2. Для бистабильно выключателя:  ID 10 - переключение S1 с ВЫКЛ на ВКЛ; ID 11 - переключение S1 с ВКЛ на ВЫКЛ; ID 14 - двойное нажатие S1; ID 15 - тройное нажатие S1; ID 20 - переключение S2 с ВЫКЛ на ВКЛ; ID 21 - переключение S2 с ВКЛ на ВЫКЛ; ID 24 - двойное нажатие S2;",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не использовать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Использовать",
					},
				},
			},
		},
	}
}
func New010f03011001() *Device{
	return &Device{
		Brand: "Fibargroup",
		Product: "Roller Shutter FGRM-222",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0301",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировка локального управления",
				Description: "Если блокировка включена, то устройство не будет реагировать на нажатия клавиш. Управление будет возможно только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировка управления по радио",
				Description: "Если блокировка включена, то устройство не будет реагировать на радио команды. Управление будет возможно только с помощью клавиш.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип отчет (Z-Wave или Fibaro)",
				Description: "Отчет о положении жалюзи может приходить в командах Z-Wave или Fibaro",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "Время полного открытия для Венецианских жалюзи",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "0,01s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Возвращение ламелей",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип клавиши",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Время отключения реле после достижения концевого выключателя",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 127,
						Unit: "0,1s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Мощность соответствующая достижению концевого выключателя",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 127,
						Unit: "1W",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 240,
				Name: "Время продолжения работы мотора",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Калибровка",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Реакция на общий сигнал тревоги",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Реакция на сигнал тревоги о затоплении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Реакция на сигнал тревоги CO и CO2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Реакция на сигнал тревоги о высокой температуре",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Реакция Ламелей на сигнал тревоги",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Отчет о мощности",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "1%",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Время периодичного отчета о мощности",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Отчет о потреблении энергии",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 130,
						To: 127,
						Unit: "0,01KWh",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Измерение мощности самого Roller Shutter",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Сцены и Ассоциации",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New010f04000103() *Device{
	return &Device{
		Brand: "Fibar",
		Product: "FGS-211",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0400",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All on/off function",
				Description: "Enables or disabled the all on / all off function",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Automatic Switching Off after defined time",
				Description: "Allows to automatically turn off the relais after a fixed time set in parameter 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Automated Turn Off Time",
				Description: "defines the time  to turn off the relais in case parameter no 3 is enabled",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ms",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Commands Sent to Association Group 1",
				Description: "Defines what status changes cause sending out a wireless command. Zu allow double click function parameter 15 needs to be turned to 1 ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning on and turning off sends out a wireless command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turning off sends a wireless command. All devices can be turned on using a double click, dimmers will return to their last dimming state.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turning ff sends a wireless command. All devices can be turned on using a double click, dimmers will dim to 100 %. ",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Bistable Switch State",
				Description: "Defines the behavior of a connected bistable switch",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON/OFF sets to change of key state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON is active when contacts are closed and OFF is active when contacts are open",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Switch",
				Description: "Defines the type of switch attached to the device",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving of switch state after power-down",
				Description: "The device will or will not return to the last switch state after a power down",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "not return to previous state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "return to previous state",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Time of Active Alarm",
				Description: "Defines how long a alarm shall be active",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 20000,
						Unit: "s",
						Reserved: false,
						Description: "Seconds",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "General Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Flood Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 2",
				Description: "This defines the behavior of relay 2 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of  alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of  alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing  on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
		},
	}
}
func New010f04000109() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGS211 V1.9",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0400",
		ProductID: "0109",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0000,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Параметр №1 - Включить всё/Выключить всё",
				Description: "Параметр позволяет настроить, будет ли модуль реагировать на широковещательные команды &#34;Включить всё&#34; и &#34;Выключить всё&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Игнорировать команду Выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №3 - Работает ли кнопка &#34;Выключить&#34; если задано время авто отключения",
				Description: "Позволяет настроить работу кнопки &#34;Выключить&#34;, если задано время авто отключения. Если выбрано - Работает, то кнопка выключения будет выключать нагрузку./n/nЕсли выбрано - Не работает, то при нажатии на кнопку выключения, нагрузка не будет выключаться, а таймер авто отключения начнется заново",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Работает",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не работает",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Параметр №4 - Авто отключение",
				Description: "Если не 0, автоматически отключает реле через определенное время. [1-65535](0,1 c - 6553,5 c)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №6 - В каких случаях отправляется команда устройствам из группы 1, т.е. при нажатии кнопки №1",
				Description: "Примечание: В параметре №15 &#34;Управление Диммерами и Жалюзи&#34; должно быть выбрано значение &#34;Двойные клики включены&#34;. Это активирует управление диммерами и жалюзи с помощью двойных кликов",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Включается или Выключается",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на последний установленный уровень яркости.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Команда отправляется, когда устройство Выключается. Двойной клик отправит команду включения Диммерам и те включатся на 100%",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №13 - Как изменяется статус устройства в бистабильном режиме",
				Description: "Если выбрано &#34;Нажатие клавиши переключит устройство в противоположное состояние&#34;, то не важно в каком положение у вас находится клавиша выключателя. Если свет включен и клавиша находится в нижнем положении, то переведя её в верхнее положение свет выключится./n/nЕсли выбрано &#34;Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет&#34;, то включится свет или выключится зависит от положения клавиши. Если вы включили свет с контроллера, и клавиша осталась внизу, то чтобы выключить свет с выключателя, сначала нужно клавишу перевести в верхнее положение (свет по прежнему будет гореть), а затем в нижнее, тогда свет потухнет.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши переключит устройство в противоположное состояние [Вкл/Выкл]",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Нажатие клавиши Вверх, Включит свет. Нажатие клавиши Вниз, Выключит свет",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №14 - Режим переключения",
				Description: "Моностабильный: для выключателя возвратного типа или для кнопки, каждое нажатие переключает устройство в противоположное состояние. Бистабильный: для обычных выключателей с двумя положениями Включено и Выключено.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "моностабильный",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "бистабильный",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Параметр №15 - Управление Диммерами и Жалюзи",
				Description: "Если выбрано &#34;Разрешено&#34; то с помощью выключателя можно управлять диммерами и жалюзи расположенными в группах ассоциаций. Только для моностабильного режима",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Запрещено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Разрешено",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №16 - Восстанавливать состояние устройства после отключения питания",
				Description: "Если требуется, чтобы после электро-сбоя устройство восстановило своё прежнее состояние, выберите &#34;Восстанавливать&#34;. Если нужно, чтобы устройство было выключено после электро-сбоя выберите &#34;Не восстанавливать&#34;",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №30 - Общие настройки реагирования на сигнал тревоги для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Параметр №31 - Реагирование на сигнал тревоги при затоплении для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Параметр №32 - Реагирование на сигнал тревоги о задымлении, CO, CO2 для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика дыма или газа сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Параметр №33 - Реагирование на сигнал тревоги о температуре для реле №1",
				Description: "Параметр определяет, что сделает устройство если получит от датчика температуры сигнал тревоги.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено – устройство не будет реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Устройство включится",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Устройство выключится",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Устройство начнет мигать, т.е. включаться и выключаться. Через 10 минут устройство перестанет реагировать на сигналы тревоги.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Параметр №39 - Время мигания устройства",
				Description: "Используется, если в каком либо из параметров 30,31,32,33 выбрано значение: &#34;Устройство начнет мигать&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "10 = 1 секунда",
					},
				},
			},
		},
	}
}
func New010f0400100a() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGS212",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0400",
		ProductID: "100a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Activation/Deactivation",
				Description: "Activation/deactivation of ALL ON/ALL OFF functions",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "neither ALL ON nor ALL OFF are active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only ALL OFF is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only ALL ON is active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON and ALL OFF are active",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ermöglicht eine automatische Abschaltfunktion nach einer in Parameter 4 festgelegten Zeit",
				Description: "If manual override enabled, then after single button push the relay turns on and automatically turns off after specified time. Another button push turns the relay off immediately. If manual override disabled, then after single button push the relay turns on and automatically turns off after specified time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Activated",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Auto off",
				Description: "If not zero, automatically switch off after a user defined time. (0.1 s - 6553.5 s)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "time",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Legt fest, welche Schaltoperation andere Geräte in Assoziationsgruppen steuert. Um die Doppelklickfunktion zu unterstützen, muss Parameter 15 auf den Wert 1 gesetzt werden.",
				Description: "Parameter 15 value must be set to 1 to work properly. This activates the double-click functionality - dimmer/roller shutter control",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning on and turning off sends out a wireless command",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "urning off sends a wireless command. All devices can be turned on using a double click, dimmers will return to their last dimming state.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turning ff sends a wireless command. All devices can be turned on using a double click, dimmers will dim to 100 %.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Assigns bistable key status to the device status",
				Description: "Remote control from Fibaro System is Still Possible. This function is useful when you display status of external devices, e.g. Motion Sensor, in Fibaro System",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON/OFF sets to change of key state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON is active when contacts are closed and OFF is active when contacts are open",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Type",
				Description: "Switch type connector, you may choose between mono-stable and bi-stable switches",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wenn diese Funktion aktiviert ist, erlaubt es dem Benutzer assoziierte Geräte zu dimmen indem er die Taster gedrückt hält oder doppelt drückt.",
				Description: "Operation of the Dimmer and Roller Shutter Controller - enabling this option allows the user to dim lighting/shut roller by associating Dimmer/Roller Shutter Controller and holding or double press of double switch (only mono-stable switch)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "deactivate",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "activate",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "definiert das Verhalten nach Wiedereinschalten des Stromes",
				Description: "Saving the state of the devices after power failure. Fibaro Switch returns to the last position saved before a power failure",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "not return to previous state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "return to previous state",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "definiert das Schaltverhaltens des Relais 1 bei Allgemeinem Alarm",
				Description: "This defines the behavior of relay 1 in case of general alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Flood Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of flood alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Smoke Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of smoke alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Alarm Set - Relay 1",
				Description: "This defines the behavior of relay 1 in case of temperature alarms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivated, devices does not react to alarms",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable on Alarm - will switch off in case of alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable on Alarm - will switch on in case of alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Flashing on Alarm - will switch on and off periodically for 10 minutes",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Active flashing alarm time",
				Description: "Defines how long a alarm shall be active",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "time",
					},
				},
			},
		},
	}
}
func New010f05010101() *Device{
	return &Device{
		Brand: "FGBS",
		Product: "FGBS",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0501",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Input 1 Alarm Delay",
				Description: "defines the delay from triggering Input 1 to sending an alarm. Removing Alarm condition will cancel alarm",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Input 2 Alarm Delay",
				Description: "defines the delay from triggering Input 2 to sending an alarm. Removing Alarm condition will cancel alarm",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NO (Normal Open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NC (Normal Close)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "INPUT_MONOSTABLE (Monostabil)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INPUT_BISTABLE (bistabil)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NO (Normal Open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NC (Normal Close)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "INPUT_MONOSTABLE (Monostabil)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INPUT_BISTABLE (bistabil)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of control frame activated via IN input 1/n",
				Description: "/nThe parameter allows you to specify the type of an alarm frame for Input 1/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Общий сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Задымление",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Угарный газ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Углекислый газ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Высокая температура",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Протечка",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "BASIC_SET",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of control frame activated via IN input 2/n",
				Description: "/nThe parameter allows you to specify the type of an alarm frame for Input 2/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Общий сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Задымление",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Угарный газ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Углекислый газ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Высокая температура",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Протечка",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "BASIC_SET",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "/nValue of the parameter specifying the forced level of dimming/opening roller blinds from Input 1/n",
				Description: "/nIn case of alarm frames an alarm priority is specified. Value of 255 makes it possible to activate a device. /nIn case of the Dimmer module it means activating the device and setting it to the previously stored /ncondition, e.g. when Dimmer is set to 30%, deactivated and then reactivated using 255 commend, it will /nbe automatically set to the previous condition i.e. 30%./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Уровень диммирования",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "/nValue of the parameter specifying the forced level of dimming/opening roller blinds from Input 2/n",
				Description: "/nIn case of alarm frames an alarm priority is specified. Value of 255 makes it possible to activate a device. /nIn case of the Dimmer module it means activating the device and setting it to the previously stored /ncondition, e.g. when Dimmer is set to 30%, deactivated and then reactivated using 255 commend, it will /nbe automatically set to the previous condition i.e. 30%./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Уровень диммирования",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "/nОтправлять устройствам из группы 1 сигнал тревоги или команду отключения/n",
				Description: "/nDeactivating transmission of the alarm cancelling frame or the control frame deactivating the device (Basic). It allows for disabling the function of deactivating the device and cancelling alarms for devices associated with IN input./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "information is sent to group 1 and 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "information is not sent",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "/nПараметр №12 - Отправлять отчет при изменении температуры на Температура = значение/16/n",
				Description: "/nЕсли с последнего замера температура изменилась больше чем на заданное значение, например 0.5 градусов, то будет отправлен отчет устройству из группы 3. Значение для градусов Цельсия высчитывается по формуле: X = deltaT*16; X - нужное значение; deltaT - разница температур (например 0.5); Если мы хотим получать отчет при изменении температуры на 0.5 градусов формула такова: 8 = 0.5*15. Если задано значение 0 и интервал пробуждения 255 секунд, то отчет о температуре будет присылаться при пробуждении (каждые 255 секунд). Если задано 0 и интервал пробуждения больше 255, то отчет будет присылаться каждые 4 минуты./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять широковещательные сообщения от IN и TMP",
				Description: "/nШироковещательные сообщения отправляются всем устройствам в сети./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "от IN1 не отправлять, от IN2 не отправлять",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "от IN1 отправлять, от IN2 не отправлять",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "от IN1 не отправлять, от IN2 отправлять",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "от IN1 отправлять, от IN2 отправлять",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Использовать сцены",
				Description: "/nЭто устройство позволяет выполнять сцены. Команды на выполнения сцен отправляются устройствам находящимся в группе 3. Контроллеры, такие как Home Center 2, Z-Box понимают эти команды и могут исполнить сцену, ID которой указан в команде. Нажатие кнопки подключенной к IN отправляет определенный ID. Таким образом можно по двойному нажатию запускать сцену &#34;Включить везде свет&#34;, а по тройному &#34;Выключить везде свет&#34;. Для бистабильного выключателя: ID 10 - переключение с ВЫКЛ на ВКЛ; ID 11 - переключение с ВКЛ на ВЫКЛ. Для моностабильного выключателя: ID 12 - удержание; ID 13 - отпускание; ID 14 - двойное нажатие; ID 15 - тройное нажатие./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не использовать",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Использовать",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Interval between Readings of all temperature sensors",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
		},
	}
}
func New010f05010102() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Univeral Binary Sensor FGBS-001",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0501",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Input I alarm cancellation delay",
				Description: "Additional delay after an alarm from input IN1 has ceased. The parameter allows you to specify additional time, after which the input no. 1 alarm is cancelled once its violation has ceased.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Input II alarm cancellation delay",
				Description: "Additional delay after an alarm from input IN2 has ceased. The parameter allows you to specify additional time, after which the input no. 2 alarm is cancelled once its violation has ceased.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Type of input no. 1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NO (Normal Open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NC (Normal Close)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "INPUT_MONOSTABLE",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INPUT_BISTABLE",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Type of input no. 2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NO (Normal Open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NC (Normal Close)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "INPUT_MONOSTABLE",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INPUT_BISTABLE",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of transmitted control frame for association group 1, activated via input IN1.",
				Description: "The parameter allows to specify the type of alarm frame or to force transmission of control commands (BASIC_SET)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM GENERIC",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM SMOKE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM CO",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM CO2",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM HEAT",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM WATER",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Control frame BASIC_SET",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of transmitted control frame for association group 2, activated via input IN2",
				Description: "The parameter allows to specify the type of alarm frame or to force transmission of control commands (BASIC_SET)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM GENERIC",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM SMOKE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM CO",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM CO2",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM HEAT",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Frame ALARM WATER",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Control frame BASIC_SET",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Value of the parameter specifying the forced level of dimming / opening sun blinds when comes “switch on” / ”open” command to devices from association group no. 1.",
				Description: "In the case of alarm frames the alarm priority is specified./nValue of 255 makes it possible to activate the device when using the Dimmer module it means activating the device and setting it to the previous stored condition, e.g. when Dimmer is set to 30%, then deactivated, and then reactivated using command 255, it will automatically be set to the previous condition, i.e. 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Dimming level",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Turn On",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Value of the parameter specifying the forced level of dimming / opening sun blinds when comes “switch on” / ”open” command to devices from association group no. 2.",
				Description: "In the case of alarm frames the alarm priority is specified./nValue of 255 makes it possible to activate the device; when using of the Dimmer module it means activating the device and setting it to the previous stored condition, e.g. when Dimmer is set to 30%, then deactivated, and then reactivated using command 255, it will automatically be set to the previous condition, i.e. 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Dimming level",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Turn On",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Deactivating transmission of the frame cancelling the alarm or the control frame deactivating the device (Basic)",
				Description: "It allows for disabling the deactivation function or the alarm cancellation function for devices associated with the appropriate input of the Fibaro Sensor. In the case of association group no. 1 and 2 the information is sent. sent. In the case of association group no. 2 the information is sent./nNOTE: Information concerning alarm violation or activation commands for devices from association groups are always sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "in the case of association group no. 1 and 2 the information is sent",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "in the case of association group no. 1 the information is sent. In the case of association group no. 2 the information is not sent.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "in the case of association group no. 1 the information is not sent. In the case of association group no. 2 the information is sent.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Interval between successive readings of temperature from all sensors connected to the device",
				Description: "Note: taking temperature readings from the sensor does not result in sending a temperature condition report to the central hub.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 200,
				Name: "Interval between forcing to send report concerning the temperature conditions",
				Description: "The forced report is sent immediately after the next reading of temperature from the sensor, irrespective of the settings of parameter no. 12./nNote: Frequent sending of temperature condition reports is reasonable when the sensor is located somewhere where can occure rapid changes of ambient temperature. In other cases it is recommended to leave the parameter set to the default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Insensitiveness to temperature changes",
				Description: "This is the maximum acceptable difference between the last reported temperature and the current temperature taken from the sensor. If the temperatures differ by the set value or more, then a report with the current temperature value is sent to the device assigned to association group no. 3. Intervals between taking readings from sensors are specified by parameter no. 10./nDefault value: 8 [0.5oC]/nPossible parameter settings:0 – 255 [0oC to 16oC] [0 oF – 28.8oF]/nIn order to set the appropriate value of the parameter, the following formula should be used:/nx = delta T x 16 - for Celsius/nx = delta T x 80 / 9 - for Fahrenheit/nx – parameter value/ndelta T – maximum acceptable temperature gradient in Celsius or Fahrenheit/nIf the value is set to 0, then information about the temperature will be sent every time, immediately once the readings have been taken from the sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "oC",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Transmitting the alarm or control frame in “broadcast” mode (i.e. to all devices within range)",
				Description: "Information sent in this mode is not repeated by the mesh network. NOTE!/nIf the “broadcast” mode of information transmission is activated for a given channel, then transmission of information in “singlecast” mode to devices assigned to the association group of this channel is deactivated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IN1 and IN2 Broadcast inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "IN1 broadcast mode active, Sensor 2 broadcast mode inactive",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IN1 broadcast mode inactive, Sensor 2 broadcast mode active",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INI and IN2 broadcast mode active",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Scene activation functionality",
				Description: "NOTE!!! Inputs IN1 and IN2 are used to control the condition of the device. Each of them may force two conditions for corresponding device channels: on / alarm, off / no alarm. If monostable keys are used and the value of parameter no. 3 or no. 4 is set to 2, change of the state of corresponding channel will be able after a single click.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene functionality Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene functionality On",
					},
				},
			},
		},
	}
}
func New010f06001000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGWPE/F-101",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0600",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Always on function",
				Description: "Once activated, Wall Plug will keep a connected device constantly/nON, will stop reacting to alarm frames and B-button push./n&#34;Always on&#34; function turns the Plug into a power and energy meter./nAlso, connected device will not be turned off upon receiving an alarm/nframe from another Z-Wave device (parameter 35 will be ignored)./nIn &#34;Always on&#34; mode, connected device may be turned off only after/nuser defined power has been exceeded (parameter 70). In such a/ncase, connected device can be turned on again by pushing the/nB-button or sending a control frame. By default, overload protection/nis inactive.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function activated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Remember device status after power failure",
				Description: "Define how will the Plug react after the power supply is back on./nDefault setting: 1/nAvailable settings:/n0 - Wall Plug does not memorize its state after a power failure./nConnected device will be off after the power supply is/nreconnected./n1 - Wall Plug memorizes its state after a power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Wall Plug does not memorize its state after a power failure./nConnected device will be off after the power supply is/nreconnected.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Wall Plug memorizes its state after a power failure.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 63,
				Name: "Reaction to alarms",
				Description: "Define Z-Wave network alarms to which the Wall Plug will respond./nAvailable settings: 0 - 63./n1 - general alarm,/n2 - smoke alarm,/n4 - CO alarm,/n8 - CO2 alarm,/n16 - high temperature alarm,/n32 - flood alarm,/n63 - device responds to all types of alarm frames./nSet value may be a sum of available values, e.g. set value = 5 means/nthe Plug will respond to general alarm (1) and CO alarm (4).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "Set the alarm reactions the wall plug is responding to.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Wall Plug&#39;s response to alarm frames",
				Description: "Parameter defines how the Wall Plug will respond to alarms (device&#39;s/nstatus change)/n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn on connected device. LED ring signals an alarm through/ndefined time period (parameter 39) or untill the alarm is/ncancelled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn off connected device. LED ring signals an alarm through/ndefined time period (parameter 39) or untill the alarm is/ncancelled",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "cyclically change device state, each 1second. In alarm mode/nWall Plug does not report status change, power changes,/nignores alarm frames. After the defined time period has passed/n(parameter 39) or after the alarm cancellation, connected/ndevice is set to the previous state",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Alarm duration",
				Description: "Wall Plug&#39;s alarm mode duration. If a device sending an alarm frame/nthrough the Z-Wave network sets alarm duration as well, this/nparameter&#39;s settings are ignored./nAvailable settings: 1 - 65536 (seconds)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define the alarm duration.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "Immediate power report",
				Description: "Parameter defines by how much power load must change, in/npercents, to be reported to the main controller, with the highest/npriority in the Z-Wave network. By default, Fibaro Wall Plug/nimmediately sends power report if the power load changes by 80%./nAvailable settings: 1 - 100 (%)./nValue of 100 (%) means the reports are turned off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a percentage by which a report is sent to the controller.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Standard power load reporting",
				Description: "Parameter defines by how much power load must change, in/npercents, to be reported to the main controller. By default, Fibaro/nWall Plug sends power report if the power load changes by 15%./nBy default such changes in power load may be reported up to 5 times/nper 30 seconds. Wall Plug sends 5 reports during time period/nspecified in paramater 43./nAvailable settings: 1 - 100 (%)/nValue of 100 (%) means the reports are turned off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Power reporting frequency",
				Description: "This parameter defines how frequently standard power reports/n(parameter 42) will be sent. By default Wall Plug sends up to 5/nreports each 30 seconds, provided the power load changes by 15%./nAvailable settings: 1 - 254 (s)/nValue of 255 - Reports will be sent only as a result of parameter 47/nsettings or in case of polling.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 254,
						Unit: "sec",
						Reserved: false,
						Description: "Define the frequency of reports.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Reports will be sent only as a result of parameter 47/nsettings or in case of polling.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Reporting changes in energy consumed by controlled devices",
				Description: "New, reported energy value is calculated based on last reported/nvalue./nAvailable settings: 1 - 254 (0,01kWh - 2,54kWh)./nValue of 255 - changes in consumed energy will not be reported./nReports will be sent only in case of polling.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Changes in consumed energy will not be reported./nReports will be sent only in case of polling.",
					},
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Time period between reports on power load and energy consumption",
				Description: "Parameter defines time period between reports sent when changes/nin power load have not been recorded. By default, if power load/nchanges have not been recorded, reports are sent every hour./nAvailable settings: 1 - 65534 (s)/nValue of 65535 - no periodic reports. Reports will be sent only in/ncase of power load / energy consumption changes (parameters 40,/n42, 43,45) or in case of polling.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65534,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period.",
					},
					ConfigValue{
						From: 65535,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "No periodic reports. Reports will be sent only in/ncase of power load / energy consumption changes (parameters 40,/n42, 43,45) or in case of polling.",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Metering energy consumed by the Wall Plug itself",
				Description: "This parameter determines whether energy metering should include/nthe amount of energy consumed by the Wall Plug itself./nResults are being added to energy consumed by controlled device./nAvailable settings:/n0 - function inactive,/n1 - function activated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "function activated",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "DOWN value",
				Description: "Lower power threshold, used in parameter 52./nAvailable settings: 0 - 25 000 (0,0W - 2 500W)/nDOWN value cannot be higher than a value specified in parameter/n51.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 25000,
						Unit: "",
						Reserved: false,
						Description: "Define a lower treshold.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 500,
				Name: "UP value",
				Description: "Upper power threshold, used in parameter 52./nAvailable settings: 1 - 25 000 (0,1W - 2 500W)/nUP value cannot be lower than a value specified in parameter 50.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 25000,
						Unit: "",
						Reserved: false,
						Description: "Define an upper treshold.",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Action in case of exceeding defined power values (parameters 50 and 51)",
				Description: "Parameter deifines the way 2nd association group devices are/ncontrolled, depending on the current power load./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Turn the associated devices on, once the power drops below/nDOWN value (parameter 50).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Turn the associated devices off, once the power drops below/nDOWN value (parameter 50).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Turn the associated devices on, once the power rises above UP/nvalue (parameter 51).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Turn the associated devices off, once the power rises above UP/nvalue (parameter 51).",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "1 and 4 combined. Turn the associated devices on, once the/npower drops below DOWN value (parameter 50). Turn the/nassociated devices off, once the power rises above UP value/n(parameter 51).",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "2 and 3 combined. Turn the associated devices off, once the/npower drops below DOWN value (parameter 50). Turn the/nassociated devices on, once the power rises above UP value/n(parameter 51).",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 2,
				Default: 25000,
				Name: "Power load, which when exceeded, makes the LED ring flash violet",
				Description: "Function is active only when parameter 61 is set to 0 or 1./nAvailable settings: 1 000 - 32 000 (100W - 3200W).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1000,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED ring illumination colour when controlled device is on.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED ring illumination colour changes in predefined steps,/ndepending on power consumption changes.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED ring illumination colour changes continuously, using full/nspectrum of available colorus, depending on power consumption/nchanges.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "White illumination",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Red illumination",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Green illumination",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Blue illumination",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Yellow illumination",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Cyan (Greenish blue) illumination",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Magenta (Purplish red) illumination",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "illumination turned off completely",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "LED ring illumination color when controlled device is off.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED ring is illuminated with a color corresponding to the last/nmeasured power, before the controlled device was turned off.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "White illumination",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Red illumination",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Green illumination",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Blue illumination",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Yellow illumination",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Cyan (Greenish blue) illumination",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Magenta (Purplish red) illumination",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "illumination turned off completely",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED ring illumination colour at the Z-Wave network alarm detection",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No change in colour. LED ring illumination colour determined by/nparameters 61 or 62 settings.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED ring flashes red / blue / white (default).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "White illumination",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Red illumination",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Green illumination",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Blue illumination",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Yellow illumination",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Cyan (Greenish blue) illumination",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Magenta (Purplish red) illumination",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Illumination turned off completely.",
					},
				},
			},
			ConfigParam{
				ID: 70,
				Type: "",
				Size: 2,
				Default: 65535,
				Name: "Overload safety switch",
				Description: "This function allows for turning off the controlled device in case of/nexceeding the defined power. Controlled device will be turned off/neven if &#34;always on&#34; function is active (parameter 1)./nControlled device can be turned back on via B-button or sending a/ncontrol frame. By default this function is inactive./nAvailable settings: 10 - 65 535 (1W - 6 553,5W)./nValue higher than 32 000 (3 200W) turns the overload safety switch/noff, i.e. this functionality is turned off by default./nDefault setting: 65 535 (6 553,5W)",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
		},
	}
}
func New010f06020700() *Device{
	return &Device{
		Brand: "Fibar Group S. A.",
		Product: "FIBARO Wall Plug",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0602",
		ProductID: "0700",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Always On function",
				Description: "Once activated, Wall Plug will keep the connected device constantly/nON, will stop reacting to alarm frames or pushing the B-button./n“Always On” function turns the Wall Plug into a power and energy meter./nConnected device will not be turned off upon receiving an alarm/nframe from another Z-Wave device (parameter 31 will be ignored)./nIn “Always on” mode, connected device may be turned off only after/nuser defined power has been exceeded (parameter 3). In such a case,/nconnected device can be turned on again by pushing the B-button or/nsending a control frame. By default, overload protection is inactive.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "function activated",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Remember device status after a power failure",
				Description: "This parameter determines how the Wall Plug will react in the event/nof power supply failure (e.g. taking out from the electrical outlet)./nAfter the power supply is back on, the Wall Plug can be restored to/nprevious state or remain switched off./nThis parameter is ignored in „Always On” mode - the device automatically/nturns ON after plugging it into the socket.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "device remains switched off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "device restores the state from before the/npower failure",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Overload safety switch",
				Description: "This function allows to turn off the controlled device in case of exceeding/nthe defined power. Controlled device will be turned off even/nif “Always On” function is active (parameter 1)./nControlled device can be turned back on via B-button or sending a/ncontrol frame. By default this function is inactive./nThis functionality is not an overload safety protection nor a short circuit/nprotection. Circuit needs additional short circuit and overload protection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
					ConfigValue{
						From: 10,
						To: 30000,
						Unit: "",
						Reserved: false,
						Description: "(1.0-3000.0W, step 0.1W) - Define a power/nthreshold.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "High priority power report",
				Description: "This parameter determines the minimum percentage change in active/npower that will result in sending power report to the main controller/nwith the highest priority in the Z-Wave network./nBy default, the Wall Plug immediately sends the power report if the/npower load changes by 80%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "power change in percent",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "reports are disabled",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Standard power report",
				Description: "This parameter determines the minimum percentage change in active/npower that will result in sending power report to the main controller/nCompared to parameter 10, the maximum number of reports sent is/nreduced (parameter 12) to 5 in a specified time interval. In addition,/nthe frames are not sent in EXPLORE mode, which prevents overloading/nthe Z-Wave network./nBy default changes in power load may be reported up to 5 times per/n30 seconds, when power load changes by 15%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "power change in percent",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "reports are disabled",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Power reporting interval",
				Description: "This parameter defines how frequently standard power reports (parameter/n11) are sent. By default the Wall Plug sends up to 5 reports/neach 30 seconds, provided the power load changes by 15%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 600,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Energy reporting threshold",
				Description: "This parameter specifies the minimum change in energy consumption/n(in relation to the previously reported), that will result in sending/na new report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "energy reports inactive",
					},
					ConfigValue{
						From: 1,
						To: 500,
						Unit: "",
						Reserved: false,
						Description: "(0.01-5kWh, step 0.01kWh) - Define a threshold.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Power and energy periodic reports",
				Description: "This parameter defines time period between reports sent when/nchanges in power load have not been recorded or if changes are insignificant/n(not exceeding values of parameters 20, 21 and 23). By default/nreports are sent every hour.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "periodic reports inactive",
					},
					ConfigValue{
						From: 5,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Measuring energy consumed by the Wall Plug itself",
				Description: "This parameter determines whether energy metering should include/nthe amount of energy consumed by the Wall Plug itself. Results are/nbeing added to energy consumed by controlled device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "function activated",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Control of „On/Off (Button)” association group (2) devices",
				Description: "Controlling devices with the B-Button. This parameter is inactive in/n“Always On” mode (parameter 1)./nControl as the Wall Plug:/n• switching the Wall Plug on – switch the devices on (parameter 24)/n• switching the Wall Plug off – switch the devices off (parameter 24)/nControl opposite to the Wall Plug:/n• switching the Wall Plug on – switch the devices off/n• switching the Wall Plug off – switch the devices on",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "control as the Wall Plug",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "control opposite to the Wall Plug",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "DOWN value - „On/Off (Power)” association group (3)",
				Description: "Lower power threshold, used in parameter 23. DOWN value cannot/nbe higher than a value specified in parameter 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 24900,
						Unit: "",
						Reserved: false,
						Description: "(0.0-2490.0W, step 0.1W) Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 500,
				Name: "UP value - „On/Off (Power)” association group (3)",
				Description: "Upper power threshold, used in parameter 23. UP value cannot be/nlower than a value specified in parameter 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 100,
						To: 25000,
						Unit: "",
						Reserved: false,
						Description: "(10.0-2500.0W, step 0.1W) Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "The response after exceeding defined power values",
				Description: "This parameter defines the way that 3rd association group devices are/ncontrolled. Depends on the actual measured power (as parameters 21/nand 22 settings).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn the associated devices ON, once the/npower drops below DOWN value (parameter 21)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn the associated devices OFF, once the/npower drops below DOWN value (parameter 21)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "turn the associated devices ON, once the/npower rises above UP value (parameter 22)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "turn the associated devices OFF, once the/npower rises above UP value (parameter 22)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "combination of 1 and 4./nTurn the associated devices ON, once the power/ndrops below DOWN value (parameter 21)./nTurn the associated devices OFF, once the power/nrises above UP value (parameter 22).",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "combination of 2 and 3./nTurn the associated devices OFF, once the power/ndrops below DOWN value (parameter 21)./nTurn the associated devices ON, once the power/nrises above UP value (parameter 22).",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON value - „On/Off” association groups",
				Description: "The value of BASIC SET command frame sent to the devices associated/nin „On/Off” association groups (2, 3)./n„On/Off (Button)” association group - in accordance with parameter 20./n„On/Off (Power)” association group - in accordance with parameter 23.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value, for example a dimming device.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 63,
				Name: "Active alarms",
				Description: "Define Z-Wave network alarms to which the Wall Plug will respond. /n1 - general alarm;/n2 - smoke alarm;/n4 - CO alarm;/n8 - CO2 alarm;/n16 - high temperature alarm;/n32 - flood alarm; please add up the different values to set the different alarms that shall be activated./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "Choose the desired alarms.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Response to alarm frames",
				Description: "This parameter defines how the Wall Plug will respond to alarms (device’s/nstatus change)./nIn case of values 1 or 2 the Wall Plug is operating normally and LED/nring signals an alarm through time defined in parameter 32 or until/nthe alarm is cancelled./nIn case of values 5 to 50 the Wall Plug does not report status change,/npower changes, ignores BASIC SET command frames. After time defined/nin parameter 32 or after the alarm cancellation, connected device/nis set to the previous state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no reaction",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "turn connected device on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "turn connected device off",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "(0.5-5.0s, step 0.1s) - cyclically change/ndevice state with set period",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Alarm state duration",
				Description: "This parameter specifies the duration of alarm state. If a device sending/nan alarm frame through the Z-Wave network sets alarm duration as/nwell, this settings are ignored.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Set a duration for alarm state.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 25000,
				Name: "Power load for violet colour",
				Description: "This parameter determines active power value, which when exceeded,/ncauses the LED ring flash violet. Function is active only when parameter/n41 is set to 0 or 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1000,
						To: 30000,
						Unit: "",
						Reserved: false,
						Description: "(100.0-3000.0W, step 0.1W) Define a power value.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED ring colour when controlled device is on",
				Description: "When set to 1 or 2, LED ring colour will change depending on active/npower and parameter 40. Other colours are set permanently and do/nnot depend on power consumption.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "illumination turned off completely",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "colour changes continuously depending on/nactive power",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "colour changes in steps depending on active/npower",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "white",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "magenta",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED ring illumination colour when controlled device is off",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "illumination turned off completely",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED ring is illuminated with a colour corresponding/nto the last measured power, before/nthe controlled device was turned off",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "white",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "magenta",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED ring illumination colour at the Z-Wave network alarm detection",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "illumination turned off completely",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "no change in colour. LED ring colour is determined/nby settings of parameters 41 or 42",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED ring flashes red/blue/white",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "white",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "magenta",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified association/ngroups: as secure or non-secure. Parameter is active only in/nZ-Wave network security mode. This parameter does not apply to 1st/n„Lifeline” group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "none of the groups sent as secure",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "2nd group sent as secure",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "3rd group sent as secure",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "2nd and 3rd group sent as secure",
					},
				},
			},
		},
	}
}
func New010f07001000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGK Door/Window Sensor 2.5",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0700",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x009c,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Input IN alarm cancellation delay.",
				Description: "Additional delay after an alarm from input IN has ceased. The/nparameter allows user to specify additional time, after which the/ninput IN alarm is cancelled once its violation has ceased./n/nAvailable parameter settings: 0 – 65535 s",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define the additional time delay, if the violation has ceased.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Status change signalled by LED.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED turned off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED turned ON",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of IN input.",
				Description: "The parameter defines the type of IN input.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NC (Normal Close)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "INPUT_NO (Normal Open",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "INPUT_MONOSTABLE",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "INPUT_BISTABLE",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of control frame transmitted for association group 1, activated via IN input.",
				Description: "The parameter allows you to specify the type of an/nalarm frame or to force control frames transmission (BASIC_SET)/nDefault value: 255 – BASIC SET/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALARM SMOKE frame",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALARM CO frame",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "ALARM CO2 frame",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "ALARM HEAT frame",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "ALARM WATER frame",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Control frame BASIC_SET",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Forced level of dimming/opening roller blinds ",
				Description: "Value of the parameter specifying the forced level of dimming/opening/nroller blinds when “switch on”/”open” commands are sent to/ndevices from association group no.1./n/nIn case of alarm frames an alarm priority is specified./nDefault value: 255/n/nValue of 255 makes it possible to activate a device. In case of the/nDimmer module it means activating the device and setting it to the/npreviously stored condition, e.g. when Dimmer is set to 30%,/ndeactivated and then reactivated using 255 commend, it will be/nautomatically set to the previous condition i.e. 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "the parameter defines the level of dimming/opening associated devices.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Activate an associated device",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Deactivating Transmissions",
				Description: "Deactivating transmission of the alarm cancelling frame or the/ncontrol frame deactivating the device (Basic). It allows for disabling/nthe function of deactivating the device and cancelling alarms for/ndevices associated with IN input.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "For association group no. 1 information is sent",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "For association group no. 1 information is not sent.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Tamper alarm.",
				Description: "The parameter defines if the tamper alarm cancellation is active or inactive.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm cancellation inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm cancellation active",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Sensitivity to temperature changes",
				Description: "The maximum acceptable/ndifference between the last reported temperature and the current/ntemperature read from the sensor. If the temperatures differ by the/nset value or more, a report with the current temperature value is/nsent to the device assigned to association group no. 3./nDefault value: 8 [0,5°C]/nAvailable parameter settings: 0 – 255 [0°C to 16°C] [32°F – 60,8°F]/nTo set an appropriate parameter value use the following formula:/nx = delta T x 16 - for Celsius/nx = delta T x 80 / 9 - for Fahrenheit/nx = parameter value/ndelta T – maximum acceptable temperature gradient in Celsius or/nFahrenheit/nIf the value is set to 0:/n- if the wake-up interval is set to 255 seconds, temperature report/nwill be sent according to the interval,/n- if the wake-up interval is set to over 255, temperature report will be/nsent each ca. 4 minutes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter for the maximum accaeptable difference.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Broadcast Mode active/inactive",
				Description: "Sending an alarm or control frame (for IN input, depending on/nparameter no.5 value), and TMP button alarm frame. The frame is/nsent in “broadcast” mode, i.e. to all devices within range -/ninformation sent in this mode is not repeated by the mesh network./n/nNote: If the “broadcast” mode of information transmission/nis activated for a given channel, then transmission of/ninformation in “singlecast” mode, i.e. to devices/nassigned to the association group, for this channel is/ndeactivated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IN and TMP Broadcast mode inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "IN broadcast mode active, TMP broadcast mode inactive",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IN broadcast mode inactive, TMP broadcast mode active",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IN and TMP broadcast mode active",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Scene activation functionality.",
				Description: "The device offers the possibility of sending commands compatible/nwith Command class scene activation. Information is sent to/ndevices assigned to association group no. 3/nControllers such as the Home Center 2 are able to interpret such/ncommands and based on these commands activate scenes, to/nwhich specific scene IDs have been assigned. The user may/nexpand the functionality of a button connected to IN input by/ndistinguishing the sequence of it being pushed. For example:/ndouble click would trigger the “goodnight” scene and triple click/nwould trigger the “morning” scene. To fully use the possibilities/noffered by the parameter no.14 it is recommended to use a/nmomentary or a toggle switch (parameter no.3)./nScene ID is determined in the following manner:/nIN input:/nSwitch from “off” to “on” ID10/nSwitch from “on” to “off” ID11/nRemaining IDs are recognized correctly if the value of parameter/nno.3 was set to 2/nHolding down ID12/nReleasing ID13/nDouble click ID14/nTriple click ID15",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "functionality deactivated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "functionality activated",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "READ ONLY Parameter - can not set values",
				Description: "The parameter value is automatically sent to the association group/nIII if the connected sensor DS18B20 four times mistakenly read the/ntemperature. In case of Wake Up Interval set for 4000 seconds/ntemperature sensor will be checked every 5 minutes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "DS18B20 is working properly",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "DS18B20 is not working properly",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "No DS18B20 temperature sensor",
					},
				},
			},
		},
	}
}
func New010f07011001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGK-10x",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0701",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Parameter defines device operation mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Door/Window Sensor or external alarm sensor (type - see par. 20)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "External switch",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "DOOR/WINDOW/ALARM",
				Description: "Parameter defines state of the sensor when the magnet is close. If/nyou connect the alarm sensor, it determines the output type./nParameter inactive in Switch Mode (parameter 1 set to 1).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Door/window closed",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Door/window opened",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "LED INDICATIONS",
				Description: "Paramater defines events indicated by the LED. Reducing number of/nthem results in longer battery lifetime./nAvailable settings: 0 - 7/nDefault setting: 6 (indication of wake up and device tampering)/nParameter values may be combined, e.g. 1&#43;2&#43;4=7, means that all/nindications are enabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "0 - no indications/n1 - indication of opening/closing status change (input IN)/n2 - indication of wake up (1 x click or using time interval)/n4 - indication of device tampering",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Z-WAVE RANGE TEST AFTER DOUBLE TMP CLICK",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EVENTS TRIGGERING 2ND ASSOCIATION GROUP",
				Description: "Parameter defines events which results in sending on/off commands/nto devices added to the 2nd association group. They are sent/nalternately and represent the values of BASIC SET command/nframes. Parameter is inactive in Switch Mode (parameter 1 set to 1).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "opening and closing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "opening",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "closing",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "COMMANDS SENT TO 2ND ASSOCIATION GROUP",
				Description: "Command frames sent to devices added to the 2nd association/ngroup.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON and OFF",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "ON COMMAND FRAME",
				Description: "The value of 0 turns OFF the device, 255 turns it ON. In case of/nassociating the Dimmer or Roller Shutter module, values 1-99 allow/nto set an associated device to a specified level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define a value for an associated Dimmer or Roller Shutter.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "OFF COMMAND FRAME",
				Description: "The value of 0 turns OFF the device, 255 turns it ON. In case of/nassociating the Dimmer or Roller Shutter module, values 1-99 allow/nto set an associated device to a specified level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define a value for an associated Dimmer or Roller Shutter.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "ON COMMAND FRAME TIME DELAY",
				Description: "Time until sending ON command frame./nAvailable settings: 0 - 32400 (time in seconds, max 9h)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time delay.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "OFF COMMAND FRAME TIME DELAY",
				Description: "Time until sending OFF command frame./nAvailable settings: 0 - 32400 (time in seconds, max 9h)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "",
						Reserved: false,
						Description: "Define a time delay.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TYPE OF SENSOR CONNECTED TO IN INPUT",
				Description: "Type of control frames transmitted to the main controller. If the/nexternal sensor is connected to IN input, it is possible to choose its/nfunctionality. This way alarm commands are sent to the 3rd/nassociation group „Alarm”.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Door/Window Sensor",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Smoke Sensor (Smoke Alarm)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CO detector (CO Alarm)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "CO2 detector (CO2 Alarm)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Flood sensor (Water Alarm)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "TAMPER ALARM CANCELLATION DELAY",
				Description: "Time period after which a tamper alarm will be cancelled./nAvailable settings: 0 - 32400 (time in seconds, max 9h)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period to cancel the alarm.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "TAMPER ALARM CANCELLATION REPORTS",
				Description: "Reporting the cancellation of tamper alarm to 5th association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Do not send tamper cancellation report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send tamper cancellation report",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "INTERVAL OF TEMPERATURE MEASURING",
				Description: "The parameter determines how often the temperature will be/nmeasured. The shorter the time, the more frequently the temperature/nwill be measured, but the battery life will shorten./n5 - 32400 - time in seconds, 5 seconds - 9 hours",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period to measure the temperature.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature measurements disabled",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORT THRESHOLD",
				Description: "The parameter determines the change in level of temperature/nresulting in temperature report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature reports based on threshold disabled",
					},
					ConfigValue{
						From: 1,
						To: 300,
						Unit: "°C",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORTS INTERVAL",
				Description: "The parameter determines how often the temperature reports will be/nsent to the main controller./n5 - 32400 - time in seconds, 5 seconds - 9 hours",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature reports disabled",
					},
					ConfigValue{
						From: 5,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE OFFSET",
				Description: "The value to be added to the actual temperature, measured by the/nsensor (temperature compensation)./nAvailable settings: -1000 - 1000 (-100°C – 100°C, in 0,1°C steps)",
				Values: []ConfigValue{
					ConfigValue{
						From: 64536,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a value for temperature compensation.",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TEMPERATURE ALARM REPORTS",
				Description: "Temperature alarms reported to the main Z-Wave controller./nThresholds may be set in parameters no. 55 and 56.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Temperature alarms disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "High temperature alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Low temperature alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Temperature alarms enabled",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 2,
				Default: 540,
				Name: "HIGH TEMPERATURE ALARM THRESHOLD",
				Description: "If temperature is higher than the set value, high temperature/nnotification will be sent and high temperature scene will be triggered/n(if activated)./nAvailable settings: 0 - 1000 (0°C - 100°C, in 0,1°C steps)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 56,
				Type: "",
				Size: 2,
				Default: 40,
				Name: "LOW TEMPERATURE ALARM THRESHOLD",
				Description: "If temperature is lower than the set value, low temperature/nnotification will be sent and low temperature scene will be triggered/n(if activated)./nAvailable settings: -300 - 700 (-30°C - 70°C, in 0,1°C steps)",
				Values: []ConfigValue{
					ConfigValue{
						From: 65236,
						To: 700,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 70,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SCENE ACTIVATION FUNCTIONALITY",
				Description: "Activating each scene is performer by setting the bit mask. Each bit/ncan activate a specified scene. To deactivate all scenes set every bit/nto 0 (parameter value 0). To activate all scenes set every bit to 1/n(parameter value 3903)./nAvailable settings: 0 - 3903 (value determined on the basis of/nbitmask)/nBit mask contains 16 bits which can be set to 0 (scene not active) or/nto 1 (scene active). In order to determine the parameter value/ndepending on the activated scenes visit the Fibaro website.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3903,
						Unit: "",
						Reserved: false,
						Description: "Select a parameter value.",
					},
				},
			},
			ConfigParam{
				ID: 71,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM BROADCAST",
				Description: "Settings for broadcasting ON/OFF commands, sensor alarm and/ntamper alarm. Value other than 0 means alarms are sent in/nBROADCAST mode (with a priority over other communicates), to all/ndevices within the Fibaro Door/Window Sensor’s range. They are not/nrepeated by the mesh network./nCreate any combination of options by summing values of every/nchosen option.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "0 - broadcasts inactive/n1 - ON/OFF commands broadcast active/n2 - sensor alarm broadcast active/n4 - tamper alarm broadcast active",
					},
				},
			},
			ConfigParam{
				ID: 72,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "ASSOCIATIONS IN Z-WAVE NETWORK SECURITY MODE",
				Description: "This parameter defines how commands are sent in specified/nassociation groups: as secure or non-secure. Parameter is active/nonly in Z-Wave network security mode. It does not apply to 1st group/n“Lifeline”./nCreate any combination of options by summing values of every/nchosen option.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "0 - none of the groups sent as secure/n1 - 2nd group ”Control” sent as secure/n2 - 3rd group ”Alarm” sent as secure/n4 - 4th group “Sensor ZW3” sent as secure/n8 - 5th group “Tamper ZW3” sent as secure",
					},
				},
			},
		},
	}
}
func New010f07012001() *Device{
	return &Device{
		Brand: "Fibar Group S. A.",
		Product: "FIBARO Door/Window Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0701",
		ProductID: "2001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation mode",
				Description: "Parameter defines device operation mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Door/Window Sensor or external alarm sensor",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "external button",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Door/Window or alarm status",
				Description: "Parameter defines state of the sensor when the magnet is close. If the/nalarm sensor is connected, it determines the output type. Parameter/ninactive in external button mode (parameter 1 set to 1).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "door/window closed",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "door/window opened",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Visual LED indications",
				Description: "This parameter defines events indicated by the visual LED indicator./nDisabling events might extend battery life.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no indications",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "indication of opening/closing status change/n(input IN)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "indication of wake up (1 x click or periodical)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "indication of device tampering",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Range test after double click",
				Description: "Allows to enable activation of Z-Wave range test with double click of/na TMP button.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "2nd association group triggers",
				Description: "Parameter defines events which result in sending on/off commands/nto devices added to the 2nd association group. These commands are/nsent alternately to switch the devices on and off. Commands represent/nthe values of BASIC SET command frames. Parameter is inactive/nin external button mode (parameter 1 set to 1).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "switch after opening and closing",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "switch after opening",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "switch after closing",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Commands sent to 2nd association group",
				Description: "Command frames sent to devices added to the 2nd association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON &amp; OFF",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Value of ON command frame sent to 2nd association group",
				Description: "The value of 0 turns OFF the device, 255 turns it ON. In case of associating/nthe Dimmer or Roller Shutter module, values 1-99 allow to set/nan associated device to a specified level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned on.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Value of OFF command frame sent to 2nd association group",
				Description: "The value of 0 turns OFF the device, 255 turns it ON. In case of associating/nthe Dimmer or Roller Shutter module, values 1-99 allow to set/nan associated device to a specified level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned on.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Time delay of ON command frame",
				Description: "Time period after which ON command frame will be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Time delay of OFF command frame",
				Description: "Time period after which OFF command frame will be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of sent alarm frames",
				Description: "Type of control frames transmitted to the main controller and 3rd association/ngroup “Alarm”. If an external sensor is connected to IN input,/nit is possible to choose its functionality. Otherwise it is recommended/nto set this parameter to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Door/Window Sensor (General Purpose Alarm)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "smoke sensor (Smoke Alarm)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CO detector (CO Alarm)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "CO2 detector (CO2 Alarm)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "high temperature sensor (Heat Alarm)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "flood sensor (Water Alarm)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Delay of tamper alarm cancellation",
				Description: "Time period after which a tamper alarm will be cancelled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Reporting tamper alarm cancellation",
				Description: "Reporting cancellation of tamper alarm to the controller and 5th association/ngroup.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "do not send tamper cancellation report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "send tamper cancellation report",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Interval of temperature measurements",
				Description: "This parameter defines how often the temperature will be measured./nThe shorter the time, the more frequently the temperature will be/nmeasured, but the battery life will shorten.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature measurements disabled",
					},
					ConfigValue{
						From: 5,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Temperature reports threshold",
				Description: "This parameter defines the change of temperature in comparison with last/nreported, resulting in temperature report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature reports based on threshold disabled",
					},
					ConfigValue{
						From: 1,
						To: 300,
						Unit: "",
						Reserved: false,
						Description: "temperature threshold (0.1-30°C, 0.1°C step)",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Interval of temperature reports",
				Description: "This parameter determines how often the temperature reports will be/nsent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "periodic temperature reports disabled",
					},
					ConfigValue{
						From: 5,
						To: 32400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Temperature offset",
				Description: "The value to be added to the actual temperature, measured by the sensor/n(temperature compensation). Available settings: -1000-1000 (-100-100°C, 0.1°C step)",
				Values: []ConfigValue{
					ConfigValue{
						From: 4294966296,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a value for temperature compensation.",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature alarm reports",
				Description: "Temperature alarms reported to the Z-Wave controller. Thresholds are/nset in parameters 55 and 56.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "temperature alarms disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "high temperature alarm",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "low temperature alarm",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "high and low temperature alarms enabled",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 2,
				Default: 540,
				Name: "High temperature alarm threshold",
				Description: "If temperature is higher than set value, overheat notification will be/nsent and high temperature scene will be triggered (if activated). Available settings: 0-1000 (0-100°C, 0.1°C step)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define an upper treshold.",
					},
				},
			},
			ConfigParam{
				ID: 56,
				Type: "",
				Size: 2,
				Default: 40,
				Name: "Low temperature alarm threshold",
				Description: "If temperature is lower than the set value, underheat notification will/nbe sent and low temperature scene will be triggered (if activated). Available settings: -300-700 (-30-70°C, 0.1°C step)",
				Values: []ConfigValue{
					ConfigValue{
						From: 65236,
						To: 700,
						Unit: "",
						Reserved: false,
						Description: "Define a lower treshold.",
					},
				},
			},
			ConfigParam{
				ID: 70,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Scene activation functionality",
				Description: "The device can trigger scenes using scene IDs assigned to different/nevents. To deactivate all scenes set the value to 0. To activate all scenes set/nthe value to 3903. Available settings: 1 - [ID 10] opening door/window (single click); 2 - [ID 11] closing door/window (single click); /n4 - [ID 12] holding; 8 - [ID 13] releasing; 16 - [ID 14] double click; 32 - [ID 15] triple click; 256 - [ID 50] high temperature - door/window/nopened; 512 - [ID 50] high temperature - door/window/nclosed; 1024 - [ID 51] low temperature - door/window/nopened; 2048 - [ID 51] low temperature - door/window/nclosed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3903,
						Unit: "",
						Reserved: false,
						Description: "Sum up the scenes that are to be activated  and enter the specific value.",
					},
				},
			},
			ConfigParam{
				ID: 71,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm broadcast",
				Description: "Settings for broadcasting ON/OFF commands, sensor alarm and tamper/nalarm. Value other than 0 means alarms are sent in Broadcast/nMode, to all devices only within the range of the device. They are not/nrepeated by the mesh network. Values of parameter/n71 may be combined,/ne.g. 1&#43;2=3 means/nON/OFF commands/nand sensor alarm/nare sent in Broadcast/nMode. Available settings: 0 - broadcasts inactive; 1 - ON/OFF commands broadcast active; 2 - sensor alarm broadcast active; 4 - tamper alarm broadcast active",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Define a value depending on which alarms should be broadcasted.",
					},
				},
			},
			ConfigParam{
				ID: 72,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Associations in Z-Wave network Security Mode",
				Description: "This parameter defines how commands are sent in specified association/ngroups: as secure or non-secure. Parameter is active only in Z-Wave/nnetwork security mode. It does not apply to 1st group “Lifeline”. Available settings: 0 - none of the groups sent as secure; 1 - 2nd group ”Control” sent as secure; 2 - 3rd group ”Alarm” sent as secure; 4 - 4th group “Sensor ZW3” sent as secure; 8 - 5th group “Tamper ZW3” sent as secure",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Define a value depending on the desired security mode. Sum up the values of the different groups.",
					},
				},
			},
		},
	}
}
func New010f08001001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Motion Sensor (Multi-Sensor)",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0800",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "MOTION SENSOR’S SENSITIVITY",
				Description: "The lower the value, the more sensitive the PIR sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 137,
						To: 127,
						Unit: "1",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "MOTION SENSOR’S BLIND TIME (INSENSITIVITY)",
				Description: "Period of time through which the PIR sensor is “blind” (insensitive) to motion. After this time period the PIR sensor will be again able to detect motion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "time [s] = 0.5 x (value &#43; 1)",
						Reserved: false,
						Description: "default 15 (= 8sec); The time of insensitivity should be shorter/nthat the time period set in parameter 6.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "PIR sensor’s “PULSE COUNTER”",
				Description: "Sets the number of moves required for the PIR sensor to report motion. The lower the value, the less sensitive the PIR sensor. It’s not recommended to modify this parameter settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "pulses = (value &#43; 1)",
						Reserved: false,
						Description: "default 1 (= 2 pulses)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "PIR sensor’s “WINDOW TIME”",
				Description: "Period of time during which the number of moves set in parameter 3 must be detected in order for the PIR sensor to report motion. The higher the value, the more sensitive the PIR sensor. It’s not recommended to modify this parameter setting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "time [s] = 4 x (value &#43; 1)",
						Reserved: false,
						Description: "default 2 (= 12sec)",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "MOTION ALARM CANCELLATION DELAY",
				Description: "Period of time, after the motion alarm will be cancelled in the main controller and the/nassociated devices. Any motion detected during the cancellation delay time countdown will result in the countdown being restarted. In case of small values, below 10 seconds, the value of parameter 2 must be modified (PIR sensor’s “Blind Time”).",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "default 30 (=30sec)",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "PIR SENSOR OPERATING MODE",
				Description: "determines the part of day in which the PIR sensor will be active. parameter influences only the motion reports and associations. Tamper, light intensity and temperature measurements will not be influenced.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor always active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the day only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the night only",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "NIGHT / DAY (light intensity)",
				Description: "parameter defines the difference between night and day, in terms of light intensity, used in parameter 8.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1lux",
						Reserved: false,
						Description: "default 200 (200 lux)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC COMMAND CLASS FRAMES CONFIGURATION",
				Description: "parameter determines the command frames sent in 1-st/nassociation group, assigned to PIR sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "BASIC ON and BASIC OFF command frames sent in Basic/nCommand Class.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only the BASIC ON command frame sent in Basic Command/nClass.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "BASIC ON command frame value",
				Description: "value of 255 allows to turn ON a device. In case of the Dimmer, the value of 255 means turning ON at the last memorized state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC OFF command frame value",
				Description: "command frame sent at the moment of motion alarm cancellation, after the cancellation delay time, specified in parameter 6, has passed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "TAMPER SENSITIVITY",
				Description: "parameter determines the chages in forces acting on the /nMotion Sensor resulting in tamper alarm beig reported - g-force acceleration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 122,
						Unit: "(0.08 - 2g; x 0.016g; 0 = tamper inactive)",
						Reserved: false,
						Description: "default 15 (= 0.224g)",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "TAMPER ALARM CANCELLATION DELAY",
				Description: "Time period after which a tamper alarm will be cacelled. Another tampering detected durig the countdown will NOT/nextend the delay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "default 30sec",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER OPERATING MODES",
				Description: "parameter determines the behaviour of tamper and how it/nreports.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class / Cancellation is not reported.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class / Cancellation is reported in Sensor Alarm commad class after the time period set in parameter 22 (Tamper Alarm Cancellation Delay)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class //nCancellation is not reported./nSensor’s orientation in space is reported in Fibar Commad Class after the time period set in paramer 22.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class //nCancellation is reported in Sensor Alarm commad class after the time period set in parameter 22. Sensor’s orientation in space is/nreported in Fibar Commad Class after the time period set in paramer 22.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The maximum level of vibrations recorded in the time period set in parameter 22 is reported. Reports stop being sent when the vibrations cease. The reports are sent in Sensor Alarm command class. Value displayed in the “value” field (0 - 100) depends on the/nvibrations force. Reports to the association groups are sent using Sensor Alarm command class.",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE",
				Description: "parameter determines whether the tamper alarm frame will or will not be sent in broadcast mode. Alarm frames sent in broadcast mode may be received by all of the devices within communication range.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is not sent in broadcast mode.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm sent in broadcast mode.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "ILLUMINATION REPORT THRESHOLD",
				Description: "parameter determines the change in light intensity level resulting in illumination report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1lux",
						Reserved: false,
						Description: "values 1 - 65535 lux; 0 = reports are not sent; default 200 lux",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "ILLUMINATION REPORTS INTERVAL",
				Description: "Time interval between consecutive illumination reports.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "value 1 - 65535; 0 = no reports are sent",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "TEMPERATURE REPORT THRESHOLD",
				Description: "parameter determines the change in level of temperature resulting in temperature report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 129,
						To: 127,
						Unit: "0,1°C",
						Reserved: false,
						Description: "(0.1 - 25.5°C; 0 = reports are not sent)",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "INTERVAL OF TEMPERATURE MEASURING",
				Description: "parameter determines how often the temperature will be measured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "1 - 65535 seconds; 0 = temperature will not be measured",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORTS INTERVAL",
				Description: "parameter determines how often the temperature reports will be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "1 - 65535 sec; 0 = reports are not/nsent",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE OFFSET",
				Description: "value to be added to the actual temperature, measured by the sensor (temperature compensation).",
				Values: []ConfigValue{
					ConfigValue{
						From: 32769,
						To: 32767,
						Unit: "1°C",
						Reserved: false,
						Description: "0 - 100 (0 to 100°C);/nor 64536 - 65535 (-100 to /n-0.10°C)",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "LED SIGNALING MODE",
				Description: "parameter determines the way in which LED diode behaves/nafter motion has been detected",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED inactive.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters 86 and 87.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white for 10 seconds.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "White.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white through 10 seconds.",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED BRIGHTNESS",
				Description: "parameter determines the brightness of LED when indicating/nmotion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "1%",
						Reserved: false,
						Description: "1 - 100%; 0 = brightness determined by the ambient lighting - see parameters 82 and 83",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "LOW AMBIENT ILLUMINATION LEVEL",
				Description: "ambient illumination level below which LED brightness is set to 1%. parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "1lux",
						Reserved: false,
						Description: "0 to value of parameter 83",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "upper AMBIENT ILLUMINATION LEVEL",
				Description: "ambient illumination level above which LED brightness is set to 100%. parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "1lux",
						Reserved: false,
						Description: "value of parameter 82 to 65535",
					},
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 1,
				Default: 18,
				Name: "MINIMUM TEMPERATURE for Blue Light",
				Description: "Minimum temperatur resulting in blue LED illumination. parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "1°C",
						Reserved: false,
						Description: "0 to value of parameter 87",
					},
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "MAXIMUM TEMPERATURE for Red Light",
				Description: "Maximum temperatur resulting in red LED illumination. parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "1°C",
						Reserved: false,
						Description: "value of parameter 86 to 255",
					},
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED INDICATING TAMPER ALARM",
				Description: "Indicating mode resembles a police car (white, red and blue).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED does not indicate tamper alarm.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates tamper alarm.",
					},
				},
			},
		},
	}
}
func New010f08004001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Motion Sensor",
		Description: "/n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0800",
		ProductID: "4001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "MOTION SENSOR’S SENSITIVITY",
				Description: "The lower the value, the more sensitive the PIR sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 8,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Adjust the sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "MOTION SENSOR’S BLIND TIME (INSENSITIVITY)",
				Description: "Period of time through which the PIR sensor is “blind” (insensitive) to motion. After this time period the PIR sensor will be again able to detect motion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "default 15 (= 8sec); The time of insensitivity should be shorter/nthat the time period set in parameter 6./nFormula to calculate the time: time [s] = 0.5 x (value &#43; 1)/nAvailable settings: 0 - 15 (0,5 - 8 seconds)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "PIR sensor’s “PULSE COUNTER”",
				Description: "Sets the number of moves required for the PIR sensor to report motion. The lower the value, the less sensitive the PIR sensor. It’s not recommended to modify this parameter settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "pulses = (value &#43; 1)",
						Reserved: false,
						Description: "default 1 (= 2 pulses)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "PIR sensor’s “WINDOW TIME”",
				Description: "Period of time during which the number of moves set in parameter 3 must be detected in order for the PIR sensor to report motion. The higher the value, the more sensitive the PIR sensor. It’s not recommended to modify this parameter setting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval./nFormula to calculate the time: time [s] = 4 x (value &#43; 1)/nDefault setting: 2 (12 seconds)/n/n",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "MOTION ALARM CANCELLATION DELAY",
				Description: "Period of time, after the motion alarm will be cancelled in the main controller and the/nassociated devices. Any motion detected during the cancellation delay time countdown will result in the countdown being restarted. In case of small values, below 10 seconds, the value of parameter 2 must be modified (PIR sensor’s “Blind Time”).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "default 30 (=30sec), Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "PIR SENSOR OPERATING MODE",
				Description: "determines the part of day in which the PIR sensor will be active. parameter influences only the motion reports and associations. Tamper, light intensity and temperature measurements will not be influenced.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor always active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the day only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the night only",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "NIGHT / DAY (light intensity)",
				Description: "parameter defines the difference between night and day, in terms of light intensity, used in parameter 8.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "default 200 (200 lux), Dafine a value for light intensity.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC COMMAND CLASS FRAMES CONFIGURATION",
				Description: "parameter determines the command frames sent in 1-st/nassociation group, assigned to PIR sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "BASIC ON and BASIC OFF command frames sent in Basic/nCommand Class.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only the BASIC ON command frame sent in Basic Command/nClass.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "BASIC ON command frame value",
				Description: "value of 255 allows to turn ON a device. In case of the Dimmer, the value of 255 means turning ON at the last memorized state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC OFF command frame value",
				Description: "command frame sent at the moment of motion alarm cancellation, after the cancellation delay time, specified in parameter 6, has passed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "TAMPER SENSITIVITY",
				Description: "parameter determines the chages in forces acting on the /nMotion Sensor resulting in tamper alarm beig reported - g-force acceleration.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 121,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold. Available settigs: 0 - 121 (0,08 - 2g; multiply by 0,016g;/n0 = tamper inactive)/n",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "TAMPER ALARM CANCELLATION DELAY",
				Description: "Time period after which a tamper alarm will be cacelled. Another tampering detected durig the countdown will NOT/nextend the delay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "default: 30sec, Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER OPERATING MODES",
				Description: "parameter determines the behaviour of tamper and how it/nreports.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class / Cancellation is not reported.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class / Cancellation is reported in Sensor Alarm commad class after the time period set in parameter 22 (Tamper Alarm Cancellation Delay)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class //nCancellation is not reported./nSensor’s orientation in space is reported in Fibar Commad Class after the time period set in paramer 22.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is reported in Sensor Alarm command class //nCancellation is reported in Sensor Alarm commad class after the time period set in parameter 22. Sensor’s orientation in space is/nreported in Fibar Commad Class after the time period set in paramer 22.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The maximum level of vibrations recorded in the time period set in parameter 22 is reported. Reports stop being sent when the vibrations cease. The reports are sent in Sensor Alarm command class. Value displayed in the “value” field (0 - 100) depends on the/nvibrations force. Reports to the association groups are sent using Sensor Alarm command class.",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE",
				Description: "parameter determines whether the tamper alarm frame will or will not be sent in broadcast mode. Alarm frames sent in broadcast mode may be received by all of the devices within communication range.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm is not sent in broadcast mode.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm sent in broadcast mode.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "ILLUMINATION REPORT THRESHOLD",
				Description: "parameter determines the change in light intensity level resulting in illumination report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold. Available settings: 0 - 32767 (1-32767 lux; 0=reports are not sent)",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "ILLUMINATION REPORTS INTERVAL",
				Description: "Time interval between consecutive illumination reports.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "1s",
						Reserved: false,
						Description: "Define a time interval. Available settings: 0 - 32767 (1-32767 seconds; 0 = no reports)",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "TEMPERATURE REPORT THRESHOLD",
				Description: "parameter determines the change in level of temperature resulting in temperature report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,1°C",
						Reserved: false,
						Description: "Define a treshold. /n0 = reports are not sent",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "INTERVAL OF TEMPERATURE MEASURING",
				Description: "parameter determines how often the temperature will be measured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval. 0 = temperature will not be measured",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORTS INTERVAL",
				Description: "parameter determines how often the temperature reports will be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval. 0 = reports are not/nsent",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE OFFSET",
				Description: "value to be added to the actual temperature, measured by the sensor (temperature compensation).",
				Values: []ConfigValue{
					ConfigValue{
						From: 64536,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Set a value for temperature compensation./nAvailable settings: -1000 - 1000 (-100°C – 100°C)",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "LED SIGNALING MODE",
				Description: "parameter determines the way in which LED diode behaves/nafter motion has been detected",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED inactive.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters 86 and 87.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white for 10 seconds.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "White.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white through 10 seconds.",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED BRIGHTNESS",
				Description: "parameter determines the brightness of LED when indicating/nmotion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a brightness level./n 0 = brightness determined by the ambient lighting - see parameters 82 and 83",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "LOW AMBIENT ILLUMINATION LEVEL",
				Description: "ambient illumination level below which LED brightness is set to 1%. parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32766,
						Unit: "lux",
						Reserved: false,
						Description: "Available settings: 0 to parameter 83 value (0-32766 lux)",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "upper AMBIENT ILLUMINATION LEVEL",
				Description: "ambient illumination level above which LED brightness is set to 100%. parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Available settings: parameter 82 value to 32767 (1-32767 lux)",
					},
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 1,
				Default: 18,
				Name: "MINIMUM TEMPERATURE for Blue Light",
				Description: "Minimum temperatur resulting in blue LED illumination. parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "°C",
						Reserved: false,
						Description: "0 to value of parameter 87",
					},
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "MAXIMUM TEMPERATURE for Red Light",
				Description: "Maximum temperatur resulting in red LED illumination. parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "°C",
						Reserved: false,
						Description: "value of parameter 86 to 255",
					},
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED INDICATING TAMPER ALARM",
				Description: "Indicating mode resembles a police car (white, red and blue).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED does not indicate tamper alarm.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates tamper alarm.",
					},
				},
			},
		},
	}
}
func New010f08011001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGMS-001",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0801",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "8",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x008f,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "SENSITIVITY",
				Description: "The lower the value, the more sensitive the PIR sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 8,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the sensor&#39;s sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "BLIND TIME (INSENSITIVITY)",
				Description: "Period of time through which the PIR sensor is “blind” (insensitive) to/nmotion. After this time period the PIR sensor will be again able to/ndetect motion. The longer the insensitivity period, the longer the/nbattery life. If the sensor is required to detect motion quickly, the time/nperiod may be shortened. The time of insensitivity should be shorter/nthat the time period set in parameter 6 (cancellation delay).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Available settings: 0 - 15 (0,5 - 8 seconds)/nDefine blind time.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "PULSE COUNTER",
				Description: "Sets the number of moves required for the PIR sensor to report/nmotion. The lower the value, the less sensitive the PIR sensor. It’s/nnot recommended to modify this parameter settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Define amount of pulses./nFormula to calculate the number of pulses: pulses = (value &#43; 1)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "WINDOW TIME",
				Description: "Period of time during which the number of moves set in parameter 3/nmust be detected in order for the PIR sensor to report motion. The/nhigher the value, the more sensitive the PIR sensor. It’s not/nrecommended to modify this parameter setting./nFormula to calculate the time: time [s] = 4 x (value &#43; 1)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Set window time.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "MOTION ALARM CANCELLATION DELAY",
				Description: "Motion alarm will be cancelled in the main controller and the/nassociated devices after the period of time set in this parameter. Any/nmotion detected during the cancellation delay time countdown will/nresult in the countdown being restarted. In case of small values,/nbelow 10 seconds, the value of parameter 2 must be modified (PIR/nsensor’s “Blind Time”).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec.",
						Reserved: false,
						Description: "Set parameter for cancellation delay.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "PIR SENSOR OPERATING MODE",
				Description: "The parameter determines the part of day in which the PIR sensor/nwill be active. This parameter influences only the motion reports and/nassociations. Tamper, light intensity and temperature measurements/nwill be still active, regardless of this parameter settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor always active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the day only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the night only",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "NIGHT / DAY",
				Description: "The parameter defines the difference between night and day, in/nterms of light intensity, used in parameter 8.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Set the parameter for light intensity.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC COMMAND CLASS FRAMES CONFIGURATION",
				Description: "The parameter determines the command frames sent in 1-st/nassociation group, assigned to PIR sensor./nValues of BASIC ON and BASIC OFF command frames may be/nmodified by dedicated parameters (14 and 16).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "BASIC ON and OFF command frames sent in Basic Command/nClass.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Only the BASIC ON command frame sent in Basic Command/nClass.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Only the BASIC OFF command frame sent in Basic Command/nClass.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "BASIC ON command frame value",
				Description: "The command frame sent at the moment of motion detection./nFurther motion detections, during the cancellation time, will not result/nin sending the association./nThe value other than 0 allows to turn ON an associated device. In/ncase of the Dimmer, the value of 255 means turning ON at the last/nmemorized state, e.g. the Dimmer turned ON at 30% and turned/nOFF using the value of 255, and then turned OFF, will be turned ON/nat 30%, i.e. the last memorized state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Choose value for BASIC ON command frame.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "BASIC OFF command frame value",
				Description: "The command frame sent at the moment of motion alarm/ncancellation, after cancellation delay time specified in parameter 6./nThe value of 0 allows to turn a device OFF while the value of 255/nallows to turn ON a device. In case of the Dimmer, the value of 255/nmeans turning ON at the last memorized state, e.g. the Dimmer/nturned ON at 30% and turned OFF using the value of 255, and then/nturned OFF, will be turned ON at 30%, i.e. the last memorized state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Choose value for BASIC OFF command frame.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "TAMPER SENSITIVITY",
				Description: "The parameter determines the changes in forces acting on the Fibaro/nMotion Sensor resulting in tamper alarm being reported - g-force/nacceleration./nAvailable settings: 0 - 121 (0,08 - 2g; multiply by 0,016g;/n0 = tamper inactive)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 121,
						Unit: "",
						Reserved: false,
						Description: "Define tamper sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "TAMPER ALARM CANCELLATION DELAY",
				Description: "Time period after which a tamper alarm will be cancelled. Another/ntampering detected during the countdown to cancellation will not/nextend the delay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec.",
						Reserved: false,
						Description: "Choose the time period.",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER OPERATING MODES",
				Description: "The parameter determines the behaviour of tamper alarm and how it/nreports. It is an advanced feature serving much more functions than/njust detection of tampering.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "only tamper",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper and earthquake detector. Function may be used as a/nsimple seismograph. Two reports including the strength of shock are/nalways sent. First, right after the detection and second (value=0)/nafter tamper alarm cancellation delay time.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Tamper and orientation in space. Three reports are sent right/nafter tamper alarm cancellation delay time.",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "TAMPER CANCELLATION REPORTS",
				Description: "The parameter determines if a tamper cancellation report is sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Do not send tamper cancellation report.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send tamper cancellation report.",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE - 3rd Group",
				Description: "The parameter determines whether the tamper alarm frame will or/nwill not be sent in broadcast mode. Alarm frames sent in broadcast/nmode can be received by all of the devices within communication/nrange (if they accept such frames). When Fibaro Motion Sensor is/noperating in protected mode (secure mode), the value should remain/ndefault. Device operating in protected mode doesn’t send frames in/nbroadcast mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported to association groups.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported in broadcast mode to 3rd association/ngroup.",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE - 5th Group",
				Description: "The parameter determines whether the tamper alarm frame will or/nwill not be sent in broadcast mode. Alarm frames sent in broadcast/nmode may be received by all of the devices within communication/nrange (if they accept such frames). When Fibaro Motion Sensor is/nrunning in protected mode (secure mode), the value should remain/ndefault. Device operating in protected mode do not send frames in/nbroadcast mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported to association groups.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported in broadcast mode to 5th association/ngroup.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "ILLUMINATION REPORT THRESHOLD",
				Description: "The parameter determines the change in light intensity level/nresulting in illumination report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Define the light intensity level./n0=no reports",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "ILLUMINATION REPORTS INTERVAL",
				Description: "Time interval between consecutive illumination reports. The reports/nare sent even if there are no changes in the light intensity.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval./n0=no reports",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "TEMPERATURE REPORT THRESHOLD",
				Description: "The parameter determines the change in level of temperature/nresulting in temperature report being sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define change in level of temperature./nAvailable settings: 0 - 255 (0,1-25,5°C,; 0 = reports are not sent)",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "INTERVAL OF TEMPERATURE MEASURING",
				Description: "The parameter determines how often the temperature will be/nmeasured. The shorter the time, the more frequently the temperature/nwill be measured, but the battery life will shorten.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the interval of consecutive measurements./n0 = temperature/nwill not be measured",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORTS INTERVAL",
				Description: "The parameter determines how often the temperature reports will be/nsent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval for reports that will be sent./n0 = no reports",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE OFFSET",
				Description: "The value to be added to the actual temperature, measured by the/nsensor (temperature compensation).",
				Values: []ConfigValue{
					ConfigValue{
						From: 64536,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define the value of added temperature./nAvailable settings: -1000 - 1000 (-100°C – 100°C)",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED SIGNALING MODE",
				Description: "The parameter determines the way in which LED diode behaves/nafter motion has been detected./nValues from 1 to 9 = single long blink at the moment of reporting/nmotion. No other motion will be indicated until alarm is cancelled./nValues from 10 to 18 = single long blink at the moment of reporting/nmotion and one short blink each time the motion is detected again./nValues from 19 to 26 = single long blink at the moment of reporting/nmotion and two short blinks each time the motion is detected again.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED inactive.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white for 10 seconds.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Flashlight mode - LED glows in white through 10 sec. Each/nnext detected motion extends the glowing by next 10 seconds.",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "White/n",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "LED colour depends on the temperature. Set by parameters/n86 and 87.",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED BRIGHTNESS",
				Description: "The parameter determines the brightness of LED when indicating/nmotion.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define the level of brightness./nAvailable settings: 0 - 100 (1 - 100%; 0 = brightness determined by/nthe ambient lighting - see parameters 82 and 83)",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "AMBIENT ILLUMINATION LEVEL BELOW WHICH LED BRIGHTNESS IS SET TO 1%",
				Description: "The parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Define the parameter./nAvailable settings: 0 to parameter 83 value (0-32766 lux)",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "AMBIENT ILLUMINATION LEVEL ABOVE WHICH LED BRIGHTNESS IS SET TO 100%",
				Description: "The parameter is relevant only when the parameter 81 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Define the parameter./nAvailable settings: parameter 82 value to 32767 (1-32767 lux)",
					},
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 2,
				Default: 18,
				Name: "MINIMUM TEMPERATURE RESULTING IN BLUE LED ILLUMINATION",
				Description: "This parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "Define the minimum temperature./nAvailable settings: 0 to parameter 87 value (0-255°C)",
					},
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 2,
				Default: 28,
				Name: "MAXIMUM TEMPERATURE RESULTING IN RED LED ILLUMINATION",
				Description: "This parameter is relevant only when parameter 80 has been/nproperly configured.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "Define the maximum temperature./nAvailable settings: parameter 86 value to 255 (0-255°C)",
					},
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED INDICATING TAMPER ALARM",
				Description: "Indicating mode resembles a police car (white, red and blue).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED does not indicate tamper alarm.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates tamper alarm.",
					},
				},
			},
		},
	}
}
func New010f08012001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGMS-001",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0801",
		ProductID: "2001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0056,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "8",
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "SENSITIVITY",
				Description: "/nThe lower the value, the more sensitive the PIR sensor./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 8,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the sensor&#39;s sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "BLIND TIME (INSENSITIVITY)",
				Description: "/nPeriod of time through which the PIR sensor is “blind” (insensitive) to motion. After this time period the PIR sensor will be again able to detect motion. The longer the insensitivity period, the longer the battery life. If the sensor is required to detect motion quickly, the time period may be shortened. The time of insensitivity should be shorter that the time period set in parameter 6 (cancellation delay)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "/nAvailable settings: 0 - 15 (0,5 - 8 seconds) Define blind time./n",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "PULSE COUNTER",
				Description: "/nSets the number of moves required for the PIR sensor to report motion. The lower the value, the less sensitive the PIR sensor. It’s not recommended to modify this parameter settings./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nDefine amount of pulses. Formula to calculate the number of pulses: pulses = (value &#43; 1)/n",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "WINDOW TIME",
				Description: "/nPeriod of time during which the number of moves set in parameter 3 must be detected in order for the PIR sensor to report motion. The higher the value, the more sensitive the PIR sensor. It’s not recommended to modify this parameter setting. Formula to calculate the time: time [s] = 4 x (value &#43; 1)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Set window time.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "MOTION ALARM CANCELLATION DELAY",
				Description: "/nMotion alarm will be cancelled in the main controller and the associated devices after the period of time set in this parameter. Any motion detected during the cancellation delay time countdown will result in the countdown being restarted. In case of small values, below 10 seconds, the value of parameter 2 must be modified (PIR sensor’s “Blind Time”)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec.",
						Reserved: false,
						Description: "Set parameter for cancellation delay.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "PIR SENSOR OPERATING MODE",
				Description: "/nThe parameter determines the part of day in which the PIR sensor will be active. This parameter influences only the motion reports and associations. Tamper, light intensity and temperature measurements will be still active, regardless of this parameter settings./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor always active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the day only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PIR sensor active during the night only",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "NIGHT / DAY",
				Description: "/nThe parameter defines the difference between night and day, in terms of light intensity, used in parameter 8./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Set the parameter for light intensity.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BASIC COMMAND CLASS FRAMES CONFIGURATION",
				Description: "/nThe parameter determines the command frames sent in 1-st association group, assigned to PIR sensor. Values of BASIC ON and BASIC OFF command frames may be modified by dedicated parameters (14 and 16)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nBASIC ON and OFF command frames sent in Basic Command Class./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nOnly the BASIC ON command frame sent in Basic Command Class./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nOnly the BASIC OFF command frame sent in Basic Command Class./n",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "BASIC ON command frame value",
				Description: "/nThe command frame sent at the moment of motion detection. Further motion detections, during the cancellation time, will not result in sending the association. The value other than 0 allows to turn ON an associated device. In case of the Dimmer, the value of 255 means turning ON at the last memorized state, e.g. the Dimmer turned ON at 30% and turned OFF using the value of 255, and then turned OFF, will be turned ON at 30%, i.e. the last memorized state./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Choose value for BASIC ON command frame.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "BASIC OFF command frame value",
				Description: "/nThe command frame sent at the moment of motion alarm cancellation, after cancellation delay time specified in parameter 6. The value of 0 allows to turn a device OFF while the value of 255 allows to turn ON a device. In case of the Dimmer, the value of 255 means turning ON at the last memorized state, e.g. the Dimmer turned ON at 30% and turned OFF using the value of 255, and then turned OFF, will be turned ON at 30%, i.e. the last memorized state./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Choose value for BASIC OFF command frame.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "TAMPER SENSITIVITY",
				Description: "/nThe parameter determines the changes in forces acting on the Fibaro Motion Sensor resulting in tamper alarm being reported - g-force acceleration. Available settings: 0 - 121 (0,08 - 2g; multiply by 0,016g; 0 = tamper inactive)/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 121,
						Unit: "",
						Reserved: false,
						Description: "Define tamper sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "TAMPER ALARM CANCELLATION DELAY",
				Description: "/nTime period after which a tamper alarm will be cancelled. Another tampering detected during the countdown to cancellation will not extend the delay./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec.",
						Reserved: false,
						Description: "Choose the time period.",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER OPERATING MODES",
				Description: "/nThe parameter determines the behaviour of tamper alarm and how it reports. It is an advanced feature serving much more functions than just detection of tampering./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "only tamper",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nTamper and earthquake detector. Function may be used as a simple seismograph. Two reports including the strength of shock are always sent. First, right after the detection and second (value=0) after tamper alarm cancellation delay time./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nTamper and orientation in space. Three reports are sent right after tamper alarm cancellation delay time./n",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "TAMPER CANCELLATION REPORTS",
				Description: "/nThe parameter determines if a tamper cancellation report is sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Do not send tamper cancellation report.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Send tamper cancellation report.",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE - 3rd Group",
				Description: "/nThe parameter determines whether the tamper alarm frame will or will not be sent in broadcast mode. Alarm frames sent in broadcast mode can be received by all of the devices within communication range (if they accept such frames). When Fibaro Motion Sensor is operating in protected mode (secure mode), the value should remain default. Device operating in protected mode doesn’t send frames in broadcast mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported to association groups.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nTamper alarm reported in broadcast mode to 3rd association group./n",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "TAMPER ALARM BROADCAST MODE - 5th Group",
				Description: "/nThe parameter determines whether the tamper alarm frame will or will not be sent in broadcast mode. Alarm frames sent in broadcast mode may be received by all of the devices within communication range (if they accept such frames). When Fibaro Motion Sensor is running in protected mode (secure mode), the value should remain default. Device operating in protected mode do not send frames in broadcast mode./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Tamper alarm reported to association groups.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nTamper alarm reported in broadcast mode to 5th association group./n",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 200,
				Name: "ILLUMINATION REPORT THRESHOLD",
				Description: "/nThe parameter determines the change in light intensity level resulting in illumination report being sent to the main controller./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "Define the light intensity level. 0=no reports",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "ILLUMINATION REPORTS INTERVAL",
				Description: "/nTime interval between consecutive illumination reports. The reports are sent even if there are no changes in the light intensity./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval. 0=no reports",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "TEMPERATURE REPORT THRESHOLD",
				Description: "/nThe parameter determines the change in level of temperature resulting in temperature report being sent to the main controller./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nDefine change in level of temperature. Available settings: 0 - 255 (0,1-25,5°C,; 0 = reports are not sent)/n",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "INTERVAL OF TEMPERATURE MEASURING",
				Description: "/nThe parameter determines how often the temperature will be measured. The shorter the time, the more frequently the temperature will be measured, but the battery life will shorten./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "/nDefine the interval of consecutive measurements. 0 = temperature will not be measured/n",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE REPORTS INTERVAL",
				Description: "/nThe parameter determines how often the temperature reports will be sent to the main controller./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "/nDefine the time interval for reports that will be sent. 0 = no reports/n",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "TEMPERATURE OFFSET",
				Description: "/nThe value to be added to the actual temperature, measured by the sensor (temperature compensation)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 64536,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "/nDefine the value of added temperature. Available settings: -1000 - 1000 (-100°C – 100°C)/n",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED SIGNALING MODE",
				Description: "/nThe parameter determines the way in which LED diode behaves after motion has been detected. Values from 1 to 9 = single long blink at the moment of reporting motion. No other motion will be indicated until alarm is cancelled. Values from 10 to 18 = single long blink at the moment of reporting motion and one short blink each time the motion is detected again. Values from 19 to 26 = single long blink at the moment of reporting motion and two short blinks each time the motion is detected again./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED inactive.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nLED colour depends on the temperature. Set by parameters 86 and 87./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nFlashlight mode - LED glows in white for 10 seconds./n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "/nLED colour depends on the temperature. Set by parameters 86 and 87./n",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "/nFlashlight mode - LED glows in white through 10 sec. Each next detected motion extends the glowing by next 10 seconds./n",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "/nLED colour depends on the temperature. Set by parameters 86 and 87./n",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "White",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Red",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Green",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Blue",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Yellow",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Cyan",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Magenta",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED BRIGHTNESS",
				Description: "/nThe parameter determines the brightness of LED when indicating motion./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "/nDefine the level of brightness. Available settings: 0 - 100 (1 - 100%; 0 = brightness determined by the ambient lighting - see parameters 82 and 83)/n",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "/nAMBIENT ILLUMINATION LEVEL BELOW WHICH LED BRIGHTNESS IS SET TO 1%/n",
				Description: "/nThe parameter is relevant only when the parameter 81 is set to 0./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "/nDefine the parameter. Available settings: 0 to parameter 83 value (0-32766 lux)/n",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "/nAMBIENT ILLUMINATION LEVEL ABOVE WHICH LED BRIGHTNESS IS SET TO 100%/n",
				Description: "/nThe parameter is relevant only when the parameter 81 is set to 0./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "lux",
						Reserved: false,
						Description: "/nDefine the parameter. Available settings: parameter 82 value to 32767 (1-32767 lux)/n",
					},
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 2,
				Default: 18,
				Name: "/nMINIMUM TEMPERATURE RESULTING IN BLUE LED ILLUMINATION/n",
				Description: "/nThis parameter is relevant only when parameter 80 has been properly configured./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "/nDefine the minimum temperature. Available settings: 0 to parameter 87 value (0-255°C)/n",
					},
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 2,
				Default: 28,
				Name: "/nMAXIMUM TEMPERATURE RESULTING IN RED LED ILLUMINATION/n",
				Description: "/nThis parameter is relevant only when parameter 80 has been properly configured./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "°C",
						Reserved: false,
						Description: "/nDefine the maximum temperature. Available settings: parameter 86 value to 255 (0-255°C)/n",
					},
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED INDICATING TAMPER ALARM",
				Description: "/nIndicating mode resembles a police car (white, red and blue)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED does not indicate tamper alarm.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates tamper alarm.",
					},
				},
			},
		},
	}
}
func New010f09004000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "RGBW Controller FGRGBWM-441",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0900",
		ProductID: "4000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Включить всё/Выключить всё",
				Description: "Параметр позволяет настроить, будет ли модуль реагировать на широковещательные команды &#34;Включить всё&#34; и &#34;Выключить всё&#34;.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать команду Включить всё, Реагировать на команду Выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Игнорировать команду Выключить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Реагировать на команду Включить всё, Реагировать на команду Выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Команды отправляемые ассоциированным устройствам",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Стандартные (Диммер) - BASIC_SET/SWITCH_MULTILEVEL_START/STOP",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Стандартные (RGBW) - COLOR_CONTROL_SET/START/STOP_STATE_CHANGE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Стандартные (RGBW) - COLOR_CONTROL_SET",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Яркость - BASIC_SET/SWITCH_MULTILEVEL_START/STOP",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Радуга (RGBW) - COLOR_CONTROL_SET",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим состояние выходов",
				Description: "Пример, если выбран Режим 1, то изменение яркости от 0% до 99% задается так: Параметр 9 - Шаг = 5, Параметр 10 - Время между шагами = 10мс.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Режим 1 (связанные параметры: 9 - значение шага, 10 - время между шагами)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Режим 2 (связанные параметры: 11 - время для изменения значения, используется для RGB/RGBW)",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Значение шага (используется для Режима 1)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "значение шага",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Время между шагами (используется для Режима 1)",
				Description: "Пример, если выбран Режим 1, то изменение яркости от 0% до 99% задается так: Параметр 11 -  = 500 секунд.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 60000,
						Unit: "",
						Reserved: false,
						Description: "1 мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 67,
				Name: "Время изменения от начального до конечного значения",
				Description: "Значение по умолчанию: 67 = 3 секунды",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "20-126 [мс] значение*20мс",
					},
					ConfigValue{
						From: 65,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "1-63 [сек] (значение-64)*1сек",
					},
					ConfigValue{
						From: 129,
						To: 191,
						Unit: "",
						Reserved: false,
						Description: "10-630 [сек] (значение-128)*10сек",
					},
					ConfigValue{
						From: 193,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "1-63 [мин] (значение-192)*1мин",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Максимальный уровень яркости",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Минимальный уровень яркости",
				Description: "Минимальный уровень не может быть больше максимального уровня.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 4369,
				Name: "Настройка входов/выходов",
				Description: "По умолчанию: 4369. Это означает что, управляемое устройство: RGBW, входы работают с выключателем (Нормальный режим). Каждый из 4 битов настраивает свой канал входа/выхода.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Реакция на сигнал тревоги",
				Description: "Стандартный сигнал тревоги, тревога при протечки, тревога при задымлении, тревога при повышении температуры. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не реагировать на сигнал тревоги",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить все каналы на 99%",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключить все каналы",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Запустить специальную программу тревоги (выбор программы в параметре 38)",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Специальная программа тревоги",
				Description: "1-10 номер специальной программы тревоги",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Время между запусками специальной программы тревоги",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65534,
						Unit: "",
						Reserved: false,
						Description: "секунда",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Команда отчета при изменении состояния Выходов",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отчет при срабатывании входов и контроллеров (SWITCH  MULTILEVEL)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Отчет при срабатывании входов (SWITCH  MULTILEVEL)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Отчет при срабатывании входов (COLOR CONTROL)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Отчет при изменении аналогового сигнала (0-10В) на входах",
				Description: "При каком изменении напряжения на входе нужно отправлять отчет контроллеру. Новое значение рассчитывается на основе предыдущего значения. 1-100 - (0.11В-10В)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "0.1В",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Как часто отправлять отчет о потребляемой мощности",
				Description: "Время между отчетами. Отчет будет отправлен, если последнее значение отличается от предыдущего, иначе отчет будет отправлен при опросе устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять отчет. Отчет будет отправлен только при опросе устройства или если устройство выключится",
					},
					ConfigValue{
						From: 1,
						To: 65534,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Обновление информации о энергопотреблении устройством",
				Description: "Новое значение энергопотребления вычисляется суммированием с предыдущем значением. Доступные значения: 1-254 (0.01кВтч - 2.54кВтч)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять отчет. Отчет будет отправлен только при опросе устройства",
					},
					ConfigValue{
						From: 1,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "0.01кВтч",
					},
				},
			},
			ConfigParam{
				ID: 71,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Какой цвет установить если яркости стала 0%",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Белый",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Последний установленный цвет",
					},
				},
			},
			ConfigParam{
				ID: 72,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Запуск световой программы",
				Description: "Запустить предустановленную световую программу, если устройство работает в RGB/RGBW режиме (параметр 14)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Номер световой программы",
					},
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при тройном клике",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отправить пакет NODE INFO",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Запуск избранной программы",
					},
				},
			},
		},
	}
}
func New010f0b001001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGFS-101",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0b00",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x009c,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Alarm cancellation delay",
				Description: "Delays flood alarm cancelation for the device after flooding has ceased./nAvailable settings: 0 - 3 600 (in seconds, each 1s)/nDetermines time period, in seconds, by which a Flood Sensor will retain the flood/nstate after the flooding itself, has ceased. Sensor will keep on reporting flooding to/nthe main controller. This parameter settings do not affect acoustic and visual/nalarms, which turn off immediately after flooding ceases.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Acoustic and visual signals On / Off in case of flooding",
				Description: "The parameter allows for LED indicator and acoustic alarm deactivation in case of/nflooding detection./nAvailable settings:/n0 - acoustic and visual alarms inactive/n1 - acoustic alarm inactive, visual alarm active/n2 - acoustic alarm active, visual alarm inactive/n3 - acoustic and visual alarms active./nChanges in this parameter settings allow for increasing a battery life. Settings/nchanges will not affect the Sensors communication with the main controller -/ncommands to association groups, alarms and reports will still be sent.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of alarm frame sent to 1-st association group (FLOOD)",
				Description: "Available settings:/n0 - ALARM WATER command frame/n255 - BASIC SET command frame./nThe parameter determines a type of command frame sent by the Sensor in case/nflooding has been detected or cancelled./nDefault setting: 255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Forced dimming level / roller blind opening level, when sending turn on / open command to 1-st association group devices",
				Description: "In case of alarm frames, alarm priority is determined./nAvailable settings: (1-99) or 255./nThe value of 255 allows for turning a device on. In case of a Dimmer it means/nturning it on with the last memorized state, e.g. Dimmer set to 30% and turned off,/nturned on again using 255 command is turned on with last state i.e. 30%./nDefault setting: 255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Alarm cancelling or turning a device off (Basic) command frame deactivation.",
				Description: "Allows for deactivating device turn off and alarm cancellation functions for the/ndevices assigned to 1-st association group./nSetting the parameter’s value to 0 results in stopping BASIC SET = 0 or ALARM/nWATER = 0 control frames from being sent. After sending flood alarm report the/ndevice will keep on reporting flooding after the flooding itself has ceased. Such a/nstate can be cancelled by choosing alarm cancelation from the MENU, marked/nwith green LED colour./nAvailable settings:/n0 - alarm (flooding) cancellation inactive/n1 - alarm (flooding) cancellation active",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Temperature measurement interval",
				Description: "Time interval, in seconds, between consecutive temperature measurements done/nby built in temperature sensor. New temperature value is reported to the main/ncontroller if it differs from the previously measured by hysteresis (defined in/nparameter 12)./nAvailable settings: 1 - 65535 (in seconds)./nThe parameter determines time interval, in seconds, at which a Flood Sensor/nmeasures and reports ambient temperature and battery level./nIf a temperature value will differ from previously reported by a value determined in/nparameter 12 (e.g. P12 = 50, i.e. temperatures differ by 0,5°C), new temperature/nvalue will be reported. If a battery level changes, the device will report a battery/nstatus change - Battery Report./nThe parameter is relevant when using a Flood Sensor in a battery power mode -/nlonger time interval means less frequent communication resulting in extended/nbattery life./nAfter consecutive FAILED and SUCCESSFUL communication attempts, the/nSensor will go to standby mode.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Temperature measurement hysteresis",
				Description: "Determines a minimum temperature change value (insensitivity level), resulting in/na temperature report being sent to the main controller, according to the Parameter/n10 settings./nAvailable settings: 1 - 1 000 (each 0,01°C)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm BROADCAST",
				Description: "Value other than 0 means alarms are sent in BROADCAST mode (with a priority/nover other communicates), to all devices within the Fibaro Flood Sensor’s range./nAvailable settings:/n0 - broadcasts inactive/n1 - flood (1-st Association Group) broadcast active, tamper (2-nd Association/nGroup) broadcast inactive/n2 - flood broadcast inactive, tamper broadcast active/n3 - flood broadcast active, tamper broadcast active",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 1500,
				Name: "Low temperature alarm threshold",
				Description: "The parameter stores a temperature value, below which LED indicator blinks with/na colour determined by a Parameter 61 settings. By default the LED indicator/nblinks blue./nAvailable settings: - 10 000 to &#43;10 000 (each 0,01°C)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 3500,
				Name: "High temperature alarm threshold",
				Description: "The parameter stores a temperature value, above which LED indicator blinks with/na colour determined by the Parameter 62 settings. By default the LED indicator/nblinks red./nAvailable settings: - 10 000 to &#43;10 000 (each 0,01°C)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 4,
				Default: 255,
				Name: "Low temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value./nAvailable settings: 0 - 16777215",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 4,
				Default: 16711680,
				Name: "High temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value./nAvailable settings: 0 - 16777215",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Managing a LED indicator under standard operation",
				Description: "Parameter determines LED indicator’s operation. Set to 0 turns the indicator off,/nsaving a battery life./nAvailable settings:/n0 - LED indicator doesn’t indicate the temperature/n1 - LED indicator indicates the temperature (blink) every Temperature/nMeasurement Interval (Parameter 10, constant current and battery) or Wake/nUp Interval (battery mode)/n2 - LED indicator indicates the temperature continuously, only in constant power/nmode.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature measurement compensation",
				Description: "Available settings: -10 000 to &#43;10 000./nParameter stores a temperature value to be added to or deducted from the current/ntemperature measured by internal temperature sensor in order to compensate the/ndifference between air temperature and temperature at the floor level.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 74,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Alarm frame sent to 2-nd Association Group activation",
				Description: "Available settings:/n0 - tamper alarms inactive/n1 - button tamper alarm active/n2 - movement tamper alarm active/n3 - button and movement tampers alarm active./nThe device is able to turn on alarms resulting from sensor’s vibrations e.g. when/nthe sensor is moved, or the TMP button released. 2-nd Association Group alarms/nare not cancelled.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 75,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Visual and audible alarms duration",
				Description: "The user can silence the Flood Sensor. Because the Sensor’s alarm may last for/na long time, it’s possible to turn off visual and audible alarm signaling to save/nbattery./nAvailable settings: 0 - 65535 (each 1 second)./nThe parameter determines a time period after which alarm will become “quiet” -/nstill active but the device will go into battery saving mode. Visual or acoustic alarm/nwill be reactivated after time period specified in the Parameter 76. When alarm/nstatus ceases, alarm will be turned off immediately./nThe value of 0 means visual and acoustic alarms are active indefinitely. In battery/npower mode the Sensor will never go to sleep which may shorten battery life/nsignificantly.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 76,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Alarm frame / Basic Set frame retransmission time when retaining flood alarm",
				Description: "Parameter determines a time period after which an alarm frame will be retransmitted./nThe value of 0 cancels an alarm frame retransmission./nAvailable settings: 0 - 65535 (each 1 second).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 77,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Flood sensor functionality turned off",
				Description: "Allows for turning of the internal flood sensor. Tamper and built in temperature/nsensor will remain active./nAvailable settings:/n0 - Default flood sensor operation (flood detection, reactions)/n1 - Built in flood sensor TURNED OFF (doesn’t change its state in the main/ncontroller, doesn’t send Alarms and Basic Set frames with flood state changes./nAlways visible in the main controller as turned off)",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New010f0b004001() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "Flood Sensor FGFS-101",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0b00",
		ProductID: "4001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Через какое время после устранения протечки отключать сигнал тревоги",
				Description: "Определяет период времени в секундах, в течение которого датчик протечки будет отправлять сигнал тревоги после исчезновения внешних аварийных факторов. Датчик в течение этого времени будет отчитываться главному контроллеру сети о своем аварийном состоянии. Значение этого параметра не влияет на звуковые и световые сигналы оповещения, действие которых прекращается немедленно после исчезновения внешних аварийных факторов.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3600,
						Unit: "s",
						Reserved: false,
						Description: "в секундах, 0 - никогда",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Звуковое и световое оповещение ВКЛ/ВЫКЛ при протечки",
				Description: "Этот параметр позволяет отключать звуковое и световое оповещения в случае обнаружения протечки. Изменение значения этого параметра позволяет увеличить срок службы батареи датчика. Его изменения не влияют на связь датчика с главным контроллером сети. Команды для устройств из групп ассоциаций, отчеты о состоянии и аварийных ситуациях по-прежнему будет отправляться.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "звуковое и световое оповещения отключены",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "звуковое оповещение отключено, световое оповещение включено",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "звуковое оповещение включено, световое оповещение отключено",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "звуковое и световое оповещения включены",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Тип сигнала тревоги для устройств из группы №1 (Протечка)",
				Description: "Параметр определяет тип сигнала тревоги, посылаемого датчиком в случае обнаружения протечки или его отмены.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALARM WATER",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "BASIС SET",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Уровень диммирования/процент открытия жалюзи, отправляемый устройствам из группы №1",
				Description: "Значение 255 включит диммер на последний установленный уровень, значение 30 включит диммер на 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "1-99",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Последний установленный уровень (255)",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отмена “Отключение сигнала тревоги” или “Отправка команды ВЫКЛ” для устройств из группы №1",
				Description: "Значение параметра, равное 0, приводит к отмене отправки сообщений  BASIC SET = 0 или ALARM WATER = 0. То есть, после возникновения аварийной ситуации устройство будет продолжать отправку сигнала тревоги даже, если все внешние аварийные факторы прекратили свое действие. Такой режим работы может быть в дальнейшем отключен через МЕНЮ, отмеченное зеленым светодиодом.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отмена сигнала тревоги не активна",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Отмена сигнала тревоги активна",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Период измерения температуры",
				Description: "Временной интервал, в секундах, через который будут проводиться измерения температуры воздуха внутренним температурным датчиком. Измеренное значение будет передано главному контроллеру сети в случае, если оно изменилось по сравнению с предыдущим на величину, большую, чем гистерезис (определяется параметром №12). Этот параметр определяет величину временного интервала, через который Fibaro Flood Sensor будет измерять температуру окружающего воздуха и уровень заряда батареи, а затем отправлять их значения на главный контроллер./nЕсли измеренная температура отличается от измеренной ранее на величину большую, чем определяемая параметром №12 (например, P12 = 50, то есть, гистерезис равен 0.5°С), то на контроллер будет отправлено новое значение температуры. Если уровень заряда батареи изменяется, его новая величина отправляется на контроллер посредством отчета Battery Report./nЗначение этого параметра чрезвычайно важно в режиме работы от батареек – больший период измерения означает менее частые сеансы связи, что увеличивает срок службы батареек./nПосле последовательных НЕУДАВШЕЙСЯ и УДАВШЕЙСЯ попыток связи датчик переходит в режим ожидания.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "В секундах",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Отчет при изменении температуры на определенную величину (гистерезис)",
				Description: "Этот параметр определяет величину температуры, при изменении на которую отправляется отчет главному контроллеру сети, в соответствии со значением параметра №10.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "°C",
						Reserved: false,
						Description: "1 = 0,01°C/n(по умолчанию 50 = 0,5°C)",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Широковещательный сигнал тревоги",
				Description: "Значения параметра, отличное от 0,  означает, что все сигналы тревоги будут посылаться широковещательно (BROADCAST) всем устройствам в зоне действия радиосвязи датчика Fibaro Flood Sensor (с приоритетом над другими пересылаемыми сообщениями). ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "широковещательные сообщения отключены",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "широковещательное оповещение о затоплении (для группы №1) включено, широковещательное сообщения о сработке темпера (для группы №2) выключено",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "широковещательное оповещение о затоплении выключено, широковещательное сообщения о сработке темпера включено",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "широковещательное оповещение о затоплении включено, широковещательное сообщения о сработке темпера включено",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 1500,
				Name: "Настройка нижней критичной границы температуры",
				Description: "Этот параметр определяет значение температуры, ниже которой светодиодный индикатор будет мигать цветом, определяющимся параметром №61. По умолчанию светодиодный индикатор мигает синим цветом.",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x0,01°C",
						Reserved: false,
						Description: "1 =  0.01°С (по умолчанию 1500 = 15,0 °C)",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 3500,
				Name: "Настройка верхней критичной границы температуры",
				Description: "Этот параметр определяет значение температуры, выше которой светодиодный индикатор будет мигать цветом, определяющимся параметром №62. По умолчанию светодиодный индикатор мигает красным цветом.",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x0,01°C",
						Reserved: false,
						Description: "1 =  0.01°С (по умолчанию 3500 = 35,0 °C)",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 4,
				Default: 255,
				Name: "Цвет светодиодного индикатора, предупреждающего о низкой температуре",
				Description: "Главный контроллер сети воспринимает цвет как сумму значений его компонент (в формате RGB). Каждому цвету при этом соответствует значение от 0 до 255. Пример: Цвет индикатора= 65536 * КРАСНЫЙ &#43; 256 * ЗЕЛЕНЫЙ &#43; СИНИЙ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "255 (синий 0x000000FF)",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 4,
				Default: 16711680,
				Name: "Цвет сигнального индикатора, предупреждающего о высокой температуре",
				Description: "Главный контроллер сети воспринимает цвет как сумму значений его компонент (в формате RGB). Каждому цвету при этом соответствует значение от 0 до 255. Пример: Цвет индикатора= 65536 * КРАСНЫЙ &#43; 256 * ЗЕЛЕНЫЙ &#43; СИНИЙ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "16711680 (красный 0x00FF0000)",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Управление светодиодным индикатором в стандартных условиях эксплуатации",
				Description: "Этот параметр определяет режим работы светодиодного индикатора. Если установить параметру значения «0», то светодиод отключится, сохраняя заряд батареи.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Светодиодный индикатор не отображает температуру",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Светодиодный индикатор отображает температуру (мигает) на каждом интервале измерения температуры (параметр №10, питание  от батареи или от блока питания) или каждом интервале пробуждения (в режиме работы от батареи).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Светодиодный индикатор постоянно отображает температуру. Этот режим доступен только при питании устройства  от блока питания.",
					},
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Компенсация при измерении температуры",
				Description: "Этот параметр хранит в себе значение температуры, которая должна быть добавлена (или вычтена, в зависимости от знака) к температуре, измеряемой внутренним температурным датчиком. Эта коррекция необходима для того, чтобы учесть разницу температур воздуха на уровне пола и на уровне датчика. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x0,00°C",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 74,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Отключение сигнала тревоги для устройств из группы №2",
				Description: "Настройка данного параметра позволяет включить отправку сигналов, оповещающих о вибрациях датчика (например, при его перемещениях) или о отжатии кнопки TMP (вскрытие). Сигналы тревоги для группы №2 при этом не отключаются.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключение оповещений о перемещении датчика и вскрытии",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включение оповещений о вскрытии датчика",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включение оповещений о перемещении датчика",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включение оповещений о перемещении датчика и вскрытии",
					},
				},
			},
			ConfigParam{
				ID: 75,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Длительность звуковых и световых оповещений",
				Description: "При желании пользователь может отключить звуковое оповещение датчика Fibaro Flood Sensor. Это обуславливается тем, что оповещение об аварийной ситуации может продолжаться в течение долгого периода времени, а своевременное отключение звуковых и световых сигналов позволит сохранить заряд батареи устройства. Значение этого параметра определяет длительность периода времени, после которого сигнализация датчика перейдет в «тихий» режим (оповещение об аварийной ситуации продолжается, однако устройство переходит в режим экономии заряда батареи). Звуковые и световые сигналы оповещения будут выключены по прошествии времени, указанном в параметре №76. Сигнал тревоги отключится сразу же как только будет устранена аварийная ситуацию./nЗначение этого параметра 0 означает, что звуковые и световые сигналы оповещения не будут отключаться, пока существует аварийная ситуация. В режиме работы от батареи, в этом случае, устройство не будет переходить в спящий режим, что может значительно сократить заряд батареи. Значение этого параметра игнорируется, если значение параметра №2 равно 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "в секундах, 0 - тревога не будет отключаться",
					},
				},
			},
			ConfigParam{
				ID: 76,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Величина задержки перед повторной отправкой сигнала оповещения  (Alarm или Basic Set)",
				Description: "Значение этого параметра определяет, через какой интервал времени по сети будет послан повторный сигнал оповещения об аварийной ситуации. Значение 0 означает, что сигнал оповещения посылаться не будет. В случае если интервал времени в этом параметре будет установлен меньшим, чем в параметре №75, устройство никогда не остановит передачу сигнала самостоятельно, оповещение будет работать всегда.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "в секундах, 0 - тревога не будет отправляться",
					},
				},
			},
			ConfigParam{
				ID: 77,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отключение функции обнаружения протечки",
				Description: "Этот параметр позволяет настроить режим работы датчика протечки. Значение этого параметра не влияет на работу встроенного датчика перемещения и температурного датчика – они будут работать всегда.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Функции обнаружения протечки работает",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Встроенный датчик протечки отключен",
					},
				},
			},
		},
	}
}
func New010f0b011002() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGFS-101",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0b01",
		ProductID: "1002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "8",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Alarm cancellation delay",
				Description: "Determines time period, in seconds, by which a Flood Sensor will retain the flood/nstate after the flooding itself, has ceased. Sensor will keep on reporting flooding to/nthe main controller. This parameter settings do not affect acoustic and visual/nalarms, which turn off immediately after flooding ceases.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no delay, immediate alarm cancelation",
					},
					ConfigValue{
						From: 1,
						To: 3600,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time period for retaining the flood state.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Acoustic and visual signals On / Off in case of flooding",
				Description: "The parameter allows for LED indicator and acoustic alarm deactivation in case of/nflooding detection./nChanges in this parameter settings allow for increasing a battery life. Settings/nchanges will not affect the Sensors communication with the main controller -/ncommands to association groups, alarms and reports will still be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm inactive, visual alarm active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm active, visual alarm inactive",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms active",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Forced dimming level / roller blind opening level, when sending turn on / open command to 2nd association group devices",
				Description: "In case of alarm frames, alarm priority is determined. The value of 255 allows for turning a device on. In case of a Dimmer it means/nturning it on with the last memorized state, e.g. Dimmer set to 30% and turned off,/nturned on again using 255 command is turned on with last state i.e. 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "A device is turned on.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define an opening level.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Alarm cancelling or turning a device off (Basic) command frame deactivation",
				Description: "Allows for deactivating device turn off and alarm cancellation functions for the/ndevices assigned to 2nd and 3rd association group./nSetting the parameter’s value to 0 results in stopping BASIC SET = 0 and ALARM/nWATER = 0 control frames from being sent. After sending flood alarm report the/ndevice will keep on reporting flooding after the flooding itself has ceased. Such a/nstate can be cancelled by choosing alarm cancelation from the MENU, marked/nwith green LED colour.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "alarm (flooding) cancellation inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "alarm (flooding) cancellation active",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Temperature measurement interval",
				Description: "The parameter determines time interval, in seconds, at which a Flood Sensor/nmeasures and reports ambient temperature and battery level./nIf a temperature value will differ from previously reported by a value determined in/nparameter 12 (e.g. P12 = 50, i.e. temperatures differ by 0,5oC), new temperature/nvalue will be reported. If a battery level changes, the device will report a battery/nstatus change - Battery Report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval for consecutive temperature measurements.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Temperature measurement hysteresis",
				Description: "Determines a minimum temperature change value (insensitivity level), resulting in/na temperature report being sent to the main controller, according to the Parameter/n10 settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "x 0,01°C",
						Reserved: false,
						Description: "Define the minimum temperature change value.",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 1500,
				Name: "Low temperature alarm threshold",
				Description: "The parameter stores a temperature value, below which LED indicator blinks with/na colour determined by a Parameter 61 settings. By default the LED indicator/nblinks blue.",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x 0,01°C",
						Reserved: false,
						Description: "Define a low temperature treshold.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 3500,
				Name: "High temperature alarm threshold",
				Description: "The parameter stores a temperature value, above which LED indicator blinks with/na colour determined by the Parameter 62 settings. By default the LED indicator/nblinks red.",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x 0,01°C",
						Reserved: false,
						Description: "Define the high temperature treshold.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 4,
				Default: 255,
				Name: "Low temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indicator is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "A main controller interprets colours as a sum of it component/ncolours value. Each colours value is a number from 0 to 255./n/nExample: Indicated colour = 65536 * RED value &#43; 256 * GREEN value &#43; BLUE value/nColour/nRed=16711680/nGreen=65280/nBlue=255/nYellow=16776960/nTurquoise=65535/nOrange=16750848/nWhite=16777215/n/n/n",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 4,
				Default: 16711680,
				Name: "High temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indicator is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "A main controller interprets colours as a sum of it component/ncolours value. Each colours value is a number from 0 to 255./n/nExample: Indicated colour = 65536 * RED value &#43; 256 * GREEN value &#43; BLUE value/nColour/nRed=16711680/nGreen=65280/nBlue=255/nYellow=16776960/nTurquoise=65535/nOrange=16750848/nWhite=16777215/n",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Managing a LED indicator under standard operation",
				Description: "Parameter determines LED indicator’s operation. Set to 0 turns the indicator off,/nsaving a battery life.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indicator doesn’t indicate the temperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicator indicates the temperature (blink) every Temperature/nMeasurement Interval (Parameter 10, constant current and battery) or Wake/nUp Interval (battery mode)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicator indicates the temperature continuously, only in constant power/nmode",
					},
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature measurement compensation",
				Description: "Parameter stores a temperature value to be added to or deducted from the current/ntemperature measured by internal temperature sensor in order to compensate the/ndifference between air temperature and temperature at the floor level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "x 0,01°C",
						Reserved: false,
						Description: "Define a temperature value for adjustment.",
					},
				},
			},
			ConfigParam{
				ID: 74,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Alarm frame sent to 1st and 4th Association Group activation",
				Description: "The device is able to turn on alarms resulting from sensor’s vibrations e.g. when/nthe sensor is moved, or the TMP button released.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "tamper alarms inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "button tamper alarm active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "movement tamper alarm active",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "button and movement tampers alarm active",
					},
				},
			},
			ConfigParam{
				ID: 75,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Visual and audible alarms duration",
				Description: "The parameter determines a time period after which alarm will become “quiet” -/nstill active but the device will go into battery saving mode. Visual or acoustic alarm/nwill be reactivated after time period specified in the Parameter 76. When alarm/nstatus ceases, alarm will be turned off immediately./nThe value of 0 means visual and acoustic alarms are active indefinitely. In battery/npower mode the Sensor will never go to sleep which may shorten battery life/nsignificantly./n/nNOTE/nThe parameter is ignored when Parameter 2 is set to 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Alarms are permanently active.",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time period for silencing the alarm.",
					},
				},
			},
			ConfigParam{
				ID: 76,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm frame / Basic Set frame retransmission time when retaining flood alarm",
				Description: "Parameter determines a time period after which an alarm frame will be retransmitted./nThe value of 0 cancels an alarm frame retransmission.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Alarm frame won&#39;t be retransmitted.",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time period for retransmitting the alarm frame.",
					},
				},
			},
			ConfigParam{
				ID: 77,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Flood sensor functionality turned off",
				Description: "Allows for turning of the internal flood sensor. Tamper and built in temperature/nsensor will remain active.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Default flood sensor operation (flood detection, reactions)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Built in flood sensor TURNED OFF (doesn’t change its state in the main/ncontroller, doesn’t send Alarms and Basic Set frames with flood state changes./nAlways visible in the main controller as turned off)",
					},
				},
			},
			ConfigParam{
				ID: 78,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified association groups:/nas secure or non-secure. Parameter is active only in Z-Wave network security/nmode. It does not apply to 1st Lifeline group./nParameter values may be combined, e.g. 1&#43;2=3 means that 2nd &amp; 3rd group are/nsent as secure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "0 - none of the groups sent as secure/n1 - 2nd group ”Flood Control” sent as secure/n2 - 3rd group ”Flood Alarm” sent as secure/n4 - 4th group „Tamper” sent as secure",
					},
				},
			},
		},
	}
}
func New010f0b012002() *Device{
	return &Device{
		Brand: "Fibar Group S. A.",
		Product: "FIBARO Flood Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0b01",
		ProductID: "2002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Alarm cancellation delay",
				Description: "Determines time period (in seconds) by which a Flood Sensor will retain/nthe flood state after the flooding itself has ceased. The sensor/nwill keep on reporting flooding to the main controller. This parameter/nsetting does not affect acoustic and visual alarms, which turn off immediately/nafter flooding ceases.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3600,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Acoustic and visual signals On / Off in case of flooding",
				Description: "The parameter allows for deactivation visual and acoustic alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm inactive, visual alarm active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm active, visual alarm inactive",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms active",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Requested dimming level / roller blind opening level when sending turn on / open command to 2nd association group devices",
				Description: "Determines the requested “on” level to be sent to devices from 2nd/nassociation group upon flood event.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a specific level,",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "turn a device on",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Deactivate turning off devices in 2nd association group &amp; alarm cancellation in 3rd group",
				Description: "This setting decides whether device turn off commands and alarm/ncancellation notifications will be sent to devices in 2nd and 3rd association/ngroups (respectively). Setting the parameter’s value to 0 disables sending these two commands/nto associated devices. This means that these devices WILL NOT/nbe informed when the flooding has ceased. It is still possible to cancel/nalarms in 3rd association group by choosing second (green) menu/nposition (see “Menu &amp; visual indications” on page 10).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "alarm (flooding) cancellation inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "alarm (flooding) cancellation active",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 4,
				Default: 300,
				Name: "Temperature measurement interval",
				Description: "Time interval (in seconds) between consecutive measurements of/nbattery level and temperature (done by built-in temperature sensor).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 50,
				Name: "Temperature measurement hysteresis",
				Description: "Determines a minimum temperature change value (insensitivity level),/nresulting in a temperature report being sent to the main controller, according to the parameter 10 settings. Available settings: 1-1000 (each 0.01°C)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a temperature value.",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 2,
				Default: 1500,
				Name: "Low temperature alarm threshold",
				Description: "The parameter stores a temperature value, below which visual indicator/nblinks with a colour determined by a parameter 61 settings. By/ndefault the visual indicator blinks blue. Available settings: - 10000 to &#43;10000 (each 0.01°C)",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "",
						Reserved: false,
						Description: "Define a lower treshold.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 3500,
				Name: "High temperature alarm threshold",
				Description: "The parameter stores a temperature value, above which visual indicator/nblinks with a colour determined by the parameter 62 settings. By/ndefault the visual indicator blinks red. Available settings: - 10000 to &#43;10000 (each 0.01°C)",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "",
						Reserved: false,
						Description: "Define an upper treshold.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 4,
				Default: 255,
				Name: "Low temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value. Please read the manual for further instructions.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Set a colour.",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 4,
				Default: 16711680,
				Name: "High temperature alarm indicator colour",
				Description: "Parameter stores RGB colour value. Please read the manual for further instructions.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 16777215,
						Unit: "",
						Reserved: false,
						Description: "Set a colour.",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Temperature indication using LED visual indicator",
				Description: "Parameter determines visual indicator’s operation. Setting to 0 turns/nthe temperature LED indication off, saving battery life.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "visual indicator does not indicate the/ntemperature",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "visual indicator indicates the temperature/n(blink) every Temperature Measurement Interval/n(parameter 10, constant current and battery)/nand Wake Up Interval (battery mode)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "visual indicator indicates the temperature/ncontinuously, only in constant power mode",
					},
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature measurement compensation",
				Description: "Parameter stores a temperature value to be added to or deducted/nfrom the current temperature measured by internal temperature sensor/nin order to compensate the difference between air temperature/nand temperature at the floor level. Available settings: -10 000 to &#43;10 000",
				Values: []ConfigValue{
					ConfigValue{
						From: 55536,
						To: 10000,
						Unit: "",
						Reserved: false,
						Description: "Define a temperature value for compensation.",
					},
				},
			},
			ConfigParam{
				ID: 74,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Alarm frame sent to 1st and 4th Association Group activation",
				Description: "The device is able to report tamper alarms resulting from sensor’s/ntilt/movement or TMP button state change (e.g. taking off the top/ncover).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "tamper alarms inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "button tamper alarm active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "movement tamper alarm active",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "button and movement tampers alarm active",
					},
				},
			},
			ConfigParam{
				ID: 75,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarms signalization duration",
				Description: "The device is capable of automatically turning off alarm signalization/nafter a certain amount of time. Long lasting alarm may reduce batter/nlife, when constantly signalized. The parameter determines time after which alarm will become “quiet”/n- still active but the device will go into battery saving mode. Visual or/nacoustic alarm will be reactivated after time specified in the parameter/n76. When alarm status ceases, alarm will be turned off immediately.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "alarms active indefinitely",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 76,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Alarm signalization reactivation period",
				Description: "Parameter determines a time period after which an alarm will be turned/nback on (in case it was turned off by parameter 75 setting). It will also/nresend commands to 2nd and 3rd association groups as if the alarm/nwas detected again.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "alarm reactivation inactive",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 77,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Flood sensor functionality turned off",
				Description: "Allows to turn off the internal flood sensor. Tamper and built in temperature/nsensor will remain active.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Default flood sensor operation (flood detection,/nreactions)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Built-in flood sensor TURNED OFF (does not/nchange its state in the main controller, does/nnot send alarm notifications nor turn on/off/ncommands to 2nd/3rd association groups with/nflood state changes. Always visible in the main/ncontroller as turned off)",
					},
				},
			},
			ConfigParam{
				ID: 78,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified association/ngroups: as secure or non-secure. Parameter is active only in Z-Wave/nnetwork security mode. It does not apply to 1st “Lifeline “group. Available settings: 0 - none of the groups sent as secure; 1 - 2nd group ”Flood Control” sent as secure; 2 - 3rd group ”Flood Alarm” sent as secure; 4 - 4th group „Tamper” sent as secure      ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Define which commands should be sent secure. Sum up the different values.",
					},
				},
			},
		},
	}
}
func New010f0c001000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGSS-001",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0c00",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x009c,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Smoke alarm cancellation delay",
				Description: "The time between when the smoke disappears and the Fibaro Smoke Sensor/nstops sending the alarm signal./nAvailable settings: 0 – 17280, 65535 (5s multiplier) [5s-24h]/n0 - no delay, immediate cancellation/n65535 - alarm cancellation inactive - Smoke Sensor will keep indicating smoke/nalarm after the smoke will have disappeared. The smoke alarm can be only ceased/nmanually, by entering 2nd menu level",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no delay, immediate cancellation",
					},
					ConfigValue{
						From: 1,
						To: 17280,
						Unit: "x5sec",
						Reserved: false,
						Description: "Define the time delay.",
					},
					ConfigValue{
						From: 65534,
						To: 65534,
						Unit: "",
						Reserved: false,
						Description: "alarm cancellation inactive",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "LED indicator and acoustic alarm turned ON / OFF at any alarm type.",
				Description: "Allows for deactivating the LED indicator and the acoustic alarm, in case of/ndetecting an alarm of any type. This doesn’t affect the communication with the/nZ-Wave network controller, i.e. the sensor will keep sending alarms, reports and all/ninformation to the associated devices. Modifying this parameter settings helps/nextending the battery life./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm inactive, visual alarm active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "acoustic alarm active, visual alarm inactive",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "acoustic and visual alarms active",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Type of alarm frame sent to 1-st Association Group devices (smoke alarm).",
				Description: "Allows for choosing a command class used in 1-st Association Group./nAvailable settings: 0, 255/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALARM SENSOR (SMOKE) command frame",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "BASIC_SET command frame",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Forced level of dimming / opening dimmers, roller blinds etc. devices at sending turn on / open / change level commands to 1-st Association Group’s devices.",
				Description: "The value of 255 allows for turning on a device. In case of Dimmer, the value of 255/nmeans turning on the device with the last memorized state. E.g. Dimmer set to/n30% and then turned off, and next turned on using the 255 command, will turn on/nwith the last remembered status, i.e. 30%./nIn case of alarm frames, alarm priority is defined./nAvailable settings: (1 - 99) or 255/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Set the forced level of dimming/opening devices.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned on.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature report interval",
				Description: "Time interval between consecutive temperature reports./nThe parameter is relevant for the battery powering mode only. Longer time interval/nmeans less frequent communication and thus a longer battery life./nReport is sent when new temperatue value is different from the one previously/nreported. Temperature reports can be also sent as a result of polling./nAvailable settings: 1 – 17280, 0 (multiply by 5 seconds) [5s-24h]/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reports are inactive.",
					},
					ConfigValue{
						From: 1,
						To: 17280,
						Unit: "x5sec",
						Reserved: false,
						Description: "Define the temperature report interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Temperature report hysteresis.",
				Description: "The temperature report will only be sent if there is a difference in temperature value/nfrom the previous value reported, defined in this parameter (hysteresis)./nTemperature reports can be also sent as a result of polling./nAvailable settings: 0 – 100 (in 0,1°C steps)/nDefault setting: 20 (2°C)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The temperature change reporting function is inactive.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define delta T for a temperature report.",
					},
				},
			},
			ConfigParam{
				ID: 73,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature measurement compensation",
				Description: "Parameter stores a temperature value to be added to or deducted from the current/ntemperature measured by internal temperature sensor in order to compensate the/ndifference between air temperature and temperature measured at the ceiling level./nAvailable settings: -1000 -/&#43; 1000 (in 0,1°C steps)",
				Values: []ConfigValue{
					ConfigValue{
						From: 64536,
						To: 1000,
						Unit: "x0.1 °C",
						Reserved: false,
						Description: "Set a temperature compensation value.",
					},
				},
			},
			ConfigParam{
				ID: 80,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Z-Wave range test interval.",
				Description: "Time period between the consecutive Z-Wave network range tests./nIn battery powering mode, Z-Wave network range test is carried out at the wake up/ninterval. The value of 0 turns off the Z-Wave range test, regardless of the powering/nmode chosen./nAvailable settings: 0 – 144 (10min multiplier) [10min-24h]/nDefault setting: 1 (10min)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Z-Wave network range test is inactive.",
					},
					ConfigValue{
						From: 1,
						To: 144,
						Unit: "x10min",
						Reserved: false,
						Description: "Set the time interval for Z-Wave network range tests.",
					},
				},
			},
			ConfigParam{
				ID: 81,
				Type: "",
				Size: 1,
				Default: 54,
				Name: "Temperature alarm threshold.",
				Description: "Temperature value, measured by the built-in temperature sensor, above which the/ntemperature alarm is sent./n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 2,
						To: 100,
						Unit: "°C",
						Reserved: false,
						Description: "Set the temperature value.",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Fibaro Smoke Sensor sensitivity",
				Description: "There are 3 levels of sensitivity to smoke presence. Level 1 means the highest/nsensitivity./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "HIGH Sensitivity",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MEDIUM Sensitivity",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LOW Sensitivity",
					},
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Black Box sensitivity level.",
				Description: "This parameter allows for specifying the moment in which the Black Box starts/nrecording data. After the specified smoke and temperature values will be/nexceeded, the Fibaro Smoke Sensor’s Black Box will record them./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "HIGH Sensitivity",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MEDIUM Sensitivity",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LOW Sensitivity",
					},
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Malfunction alarm",
				Description: "Time interval in which malfuntion alarm, if detected, is repeated using visual and/nacoustic alarms./nAvailable settings: 1 - 255 (100 ms multiplier) [100ms-25,5s]/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 85,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Temperature alarm",
				Description: "Time interval in which temperature alarm, if detected, is repeated using visual and/nacoustic alarms./nAvailable settings: 1 - 255 (100 ms multiplier) [100ms-25,5s]/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Set the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 2,
				Default: 360,
				Name: "Lack of the Z-Wave range alarm",
				Description: "Time interval in which lack of the Z-Wave network alarm, if detected, is repeated/nusing visual and acoustic alarms./nAvailable settings: 1 - 17280 (5s multiplier) [5s-24h]/nDefault setting: 360 (30min)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 17280,
						Unit: "",
						Reserved: false,
						Description: "Set the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 2,
				Default: 360,
				Name: "Low battery alarm",
				Description: "Time interval in which low battery alarm, if detected, is repeated using visual and/nacoustic alarms./nAvailable settings: 1 - 17280 (5s multiplier) [5s-24h]/nDefault setting: 360 (30min)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 17280,
						Unit: "",
						Reserved: false,
						Description: "Set the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 88,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Consider temperature measurement compensation (parameter 73) when sending temperature report.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ignore temperature compensation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "include temperature compensation",
					},
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Tamper alarm",
				Description: "The parameter defines the state of the tamper alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "tamper alarm inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "tamper alarm active, with cancellation option available",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "tamper alarm active, without cancellation option",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm broadcast",
				Description: "A value other than 0 means that alarms are being sent in broadcast mode, i.e. to/nall devices within a Fibaro Smoke Sensor’s range./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "broadcast inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "smoke alarm broadcast (1-st Association Group) active; tamper alarm/nbroadcast (2-nd Association Group) inactive",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "smoke alarm broadcast (1-st Association Group) inactive; tamper alarm/nbroadcast (2-nd Association Group) active",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "smoke alarm broadcast active (1-st association group); tamper alarm/nbroadcast (2-nd association group) active",
					},
				},
			},
		},
	}
}
func New010f0c021002() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "FGSD-002",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0c02",
		ProductID: "1002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "8",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Fibaro Smoke Sensor sensitivity",
				Description: "There are 3 levels of sensitivity to smoke presence. Level 1 means the highest/nsensitivity. Rising the parameter value lowers the sensitivity to smoke presence.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "HIGH Sensitivity",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MEDIUM Sensitivity",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LOW Sensitivity",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Z-Wave notifications status",
				Description: "This parameter allows to activate excess temperature and/or enclosure opening/nnotifications sent to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Parameter values may be combined, e.g. 1&#43;2=3, means that all notifications are/nenabled./n0 - all notifications disabled/n1 - enclosure opening notification enabled/n2 - exceeding temperature threshold notification enabled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Visual indicator notifications status",
				Description: "This parameter allows to activate visual indications but does not apply to major/nalarms, such as FIRE, TROUBLE and LOW BATTERY ALARM.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Parameter values may be combined, e.g. 1&#43;2&#43;4=7, means that all notifications are/nenabled./n0 - all notifications disabled/n1 - enclosure opening notification enabled/n2 - exceeding temperature threshold notification enabled/n4 - lack of Z-Wave range notification",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sound notifications status",
				Description: "This parameter allows to activate sound signals but does not apply to major/nalarms, such as FIRE, TROUBLE and LOW BATTERY ALARM.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Parameter values may be combined, e.g. 1&#43;2&#43;4=7, means that all notifications are/nenabled./n0 - all notifications disabled/n1 - enclosure opening notification enabled/n2 - exceeding temperature threshold notification enabled/n4 - lack of Z-Wave range notification",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configuration of control frames in BASIC command class",
				Description: "This parameter defines which frames will be sent in the 2-nd Association Group/n(FIRE ALARM). The values of BASIC ON and BASIC OFF frames may be defined/nas described in further parameters.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "BASIC ON &amp; BASIC OFF enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "BASIC ON enabled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "BASIC OFF enabled",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "BASIC ON frame value",
				Description: "BASIC ON frame is sent in case of smoke presence detection and FIRE ALARM/ntriggering. Its value is defined by the parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Sets the device to 1-99%.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Sets the last status.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "BASIC OFF frame value",
				Description: "BASIC OFF frame is sent in case of FIRE ALARM cancellation. Its value is defined/nby the parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Sets the device to 1-99%.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Sets the last status.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm broadcast",
				Description: "A value other than 0 means that alarms are being sent in broadcast mode, i.e. to/nall devices within a Fibaro Smoke Sensor’s range./nOperating in Z-Wave network security mode automatically/ndisables sending alarms in broadcast mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Broadcast is inactive.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "FIRE ALARM broadcast (2-nd &amp; 4-th Association Group) active; enclosure/nopening notification broadcast (3-rd &amp; 5-th Association Group) inactive.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "FIRE ALARM broadcast (2-nd &amp; 4-th Association Group) inactive; enclosure/nopening notification broadcast (3-rd &amp; 5-th Association Group) active.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "FIRE ALARM broadcast (2-nd &amp; 4-th Association Group) active; enclosure/nopening notification broadcast (3-rd &amp; 5-th Association Group) active.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Associations in Z-Wave network security mode",
				Description: "This parameter defines how commands are sent in specified association groups:/nas secure or non-secure. Parameter is active only in Z-Wave network security/nmode. It doesn’t apply to 1st Lifeline group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Parameter values may be combined, e.g. 1&#43;2=3 means that 2nd &amp; 3rd group are/nsent as secure./n0 - all groups sent as non-secure/n1 - 2nd group sent as secure/n2 - 3rd group sent as secure/n4 - 4th group sent as secure/n8 - 5th group sent as secure",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Temperature report interval",
				Description: "Time interval between consecutive temperature reports./nReport is sent when new temperature value is different from the one previously/nreported - according to the set hysteresis (parameter 21). Temperature reports can/nbe also sent as a result of polling./nAvailable settings: 0, 1-8640 (multiply by 10 seconds) [10s-24h]",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reports are inactive.",
					},
					ConfigValue{
						From: 1,
						To: 8640,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Temperature report hysteresis",
				Description: "The temperature report will only be sent if there is a difference in temperature value/nfrom the previous value reported, defined in this parameter (hysteresis)./nTemperature reports can be also sent as a result of polling./nAvailable settings: 1 – 100 (in 0,1°C steps)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define the difference in temperature value for reports being sent.",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 55,
				Name: "Temperature threshold",
				Description: "Temperature value measured by the built-in temperature sensor above which the/nexcess temperature notification is sent (visual indication/sound/Z-Wave report).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "°C",
						Reserved: false,
						Description: "Define/nthe/n treshold parameter .",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Excess temperature signaling interval",
				Description: "Time interval of signaling (visual indication/sound) excess temperature level/nAvailable settings: 1-8640 (multiply by 10 seconds) [10s-24h]",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8640,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 180,
				Name: "Lack of Z-Wave range indication interval",
				Description: "Time interval of signaling (visual indication/sound) lack of Z-Wave range/nAvailable settings: 1-8640 (multiply by 10 seconds) [10s-24h]",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8640,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
		},
	}
}
func New010f0d011000() *Device{
	return &Device{
		Brand: "FIBARO",
		Product: "FGGC-001",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0d01",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005b,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Device orientation",
				Description: "Parameter determines orientation of the Swipe in relation to its default/nposition. Required for proper gestures recognition.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default orientation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "180° rotation",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "90° clockwise rotation",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "90° counter-clockwise rotation",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Buzzer - acoustic signal settings",
				Description: "Acoustic signalling of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not signalled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is signalled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED diode - visual indicator settings",
				Description: "Visual indication of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not indicated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is indicated",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Buzzer - signalling result of gesture recognition",
				Description: "Acoustic signalling of gesture recognition result (using the built-in/nbuzzer).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only successful recognition is signalled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only failed recognition is signalled",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "successful and failed recognition is signalled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "Powering mode - interval of updating the current mode",
				Description: "This parameter determines how often the device checks if the USB/npower supply is connected and updates powering mode if needed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "powering mode is not updated",
					},
					ConfigValue{
						From: 1,
						To: 1080,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power saving mode (battery mode)",
				Description: "This parameter determines operation of gesture detection when battery/npowered./nWhen Standby Mode is selected, hold gesture must be performed to/nexit power saving mode and reactivate normal gesture recognition./nThe device in Standby Mode consumes the least battery life./nWhen Simple Mode mode is selected, gesture recognition is always/nactive, but only slowly performed gestures will be recognized properly/n(high battery consumption).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Standby Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Simple Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "the Swipe does not enter power saving/nmode",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Hold gesture to enter the menu",
				Description: "This parameter allows to choose if the menu can be entered using the/nHold gesture.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu disabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Scenes sent to the controller",
				Description: "Defines which actions result in sending scenes to 1st “Lifeline” group. 1 - scenes for flick UP gesture enabled; /n2 - scenes for flick DOWN gesture enabled; /n4 - scenes for flick LEFT gesture enabled; /n8 - scenes for flick RIGHT gesture enabled; /n16 - scenes for clockwise circular gesture enabled; /n32 - scenes for counter-clockwise circular gesture/nenabled. Please sum up the different options and set this value to configure the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 31,
				Name: "Associations in Z-Wave network security mode",
				Description: "Parameter defines how commands are sent in specified association/ngroups: as secure or non-secure. Parameter is active only in Z-Wave/nnetwork security mode. It does not apply to 1st “Lifeline” association/ngroup. 1 - 2nd group ”Flick UP” sent as secure; /n2 - 3rd group ”Flick DOWN” sent as secure; /n4 - 4th group „Flick LEFT” sent as secure; /n8 - 5th group „Flick RIGHT” sent as secure; /n16 - 6th group „Circular AirWheel” sent as secure. Sum up the options which should be sent secure and set the value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Define a value. ",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Control mode of 2nd - 5th „Flick UP/DOWN/LEFT/RIGHT” association groups and scenes",
				Description: "Parameter allows to choose control mode for 2nd-5th groups and/nscenes./nBy default, Toggle Mode is active, meaning that a single flick turns ON/nthe group and the same flick turns it OFF, doubled flicks are inactive./nAfter disabling Toggle Mode a single flick will turn the device ON and/nthe same flick doubled will turn it OFF. 1 - Toggle Mode enabled for 2nd association; /ngroup/n2 - Toggle Mode enabled for 3rd association/ngroup; /n4 - Toggle Mode enabled for 4th association/ngroup; /n8 - Toggle Mode enabled for 5th association/ngroup. Sum up the values for the desired control modes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Rate of smooth level control",
				Description: "Parameter allows to choose how long the hand has to be held near the/ncenter of the pad after &#34;AirWheel&#34; gesture for the associated devices to/nreach their maximum/minimum level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "default settings of controlled devices",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK UP gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK UP gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK DOWN gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK DOWN gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK LEFT gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK LEFT gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK RIGHT gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK RIGHT gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command/nframe to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated/ndevices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of/nassociated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated/ndevices to the last/nremembered state or/nturning them on",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sequence learning mode",
				Description: "Parameter activated by the main Z-Wave controller. Change its value to/nlaunch sequence learning procedure for the desired slot.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "learning mode disabled",
					},
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "launch sequence learning for selected slot",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "1st gestures sequence (SLOT 1)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "2nd gestures sequence (SLOT 2)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "3rd gestures sequence (SLOT 3)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "4th gestures sequence (SLOT 4)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "5th gestures sequence (SLOT 5)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "6th gestures sequence (SLOT 6)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on/npage 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
		},
	}
}
func New010f0d012000() *Device{
	return &Device{
		Brand: " Fibar Group S. A.",
		Product: "Gesture Controller",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0d01",
		ProductID: "2000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Device orientation",
				Description: "/nParameter determines orientation of the Swipe in relation to its default position. Required for proper gestures recognition./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default orientation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "180 rotation",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "90 clockwise rotation",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "90 counter-clockwise rotation",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Buzzer - acoustic signal settings",
				Description: "Acoustic signalling of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not signalled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is signalled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED diode - visual indicator settings",
				Description: "Visual indication of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not indicated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is indicated",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Buzzer - signalling result of gesture recognition",
				Description: "/nAcoustic signalling of gesture recognition result (using the built-in buzzer)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only successful recognition is signalled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only failed recognition is signalled",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "successful and failed recognition is signalled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "/nPowering mode - interval of updating the current mode/n",
				Description: "/nThis parameter determines how often the device checks if the USB power supply is connected and updates powering mode if needed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "powering mode is not updated",
					},
					ConfigValue{
						From: 1,
						To: 1080,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power saving mode (battery mode)",
				Description: "/nThis parameter determines operation of gesture detection when battery powered. When Standby Mode is selected, hold gesture must be performed to exit power saving mode and reactivate normal gesture recognition. The device in Standby Mode consumes the least battery life. When Simple Mode mode is selected, gesture recognition is always active, but only slowly performed gestures will be recognized properly (high battery consumption)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Standby Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Simple Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "the Swipe does not enter power saving mode",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Hold gesture to enter the menu",
				Description: "/nThis parameter allows to choose if the menu can be entered using the Hold gesture./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu disabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Scenes sent to the controller",
				Description: "/nDefines which actions result in sending scenes to 1st &#34;Lifeline&#34; group. 1 - scenes for flick UP gesture enabled; 2 - scenes for flick DOWN gesture enabled; 4 - scenes for flick LEFT gesture enabled; 8 - scenes for flick RIGHT gesture enabled; 16 - scenes for clockwise circular gesture enabled; 32 - scenes for counter-clockwise circular gesture enabled. Please sum up the different options and set this value to configure the device./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 31,
				Name: "Associations in Z-Wave network security mode",
				Description: "/nParameter defines how commands are sent in specified association groups: as secure or non-secure. Parameter is active only in Z-Wave network security mode. It does not apply to 1st &#34;Lifeline&#34; association group. 1 - 2nd group &#34;Flick UP&#34; sent as secure; 2 - 3rd group &#34;Flick DOWN&#34; sent as secure; 4 - 4th group &#34;Flick LEFT&#34; sent as secure; 8 - 5th group &#34;Flick RIGHT&#34; sent as secure; 16 - 6th group &#34;Circular AirWheel&#34; sent as secure. Sum up the options which should be sent secure and set the value./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "/nControl mode of 2nd - 5th &#34;Flick UP/DOWN/LEFT/RIGHT&#34; association groups and scenes/n",
				Description: "/nParameter allows to choose control mode for 2nd-5th groups and scenes. By default, Toggle Mode is active, meaning that a single flick turns ON the group and the same flick turns it OFF, doubled flicks are inactive. After disabling Toggle Mode a single flick will turn the device ON and the same flick doubled will turn it OFF. 1 - Toggle Mode enabled for 2nd association; group 2 - Toggle Mode enabled for 3rd association group; 4 - Toggle Mode enabled for 4th association group; 8 - Toggle Mode enabled for 5th association group. Sum up the values for the desired control modes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Rate of smooth level control",
				Description: "/nParameter allows to choose how long the hand has to be held near the center of the pad after &#34;AirWheel&#34; gesture for the associated devices to reach their maximum/minimum level./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "default settings of controlled devices",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK UP gesture",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK UP gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK DOWN gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK DOWN gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK LEFT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK LEFT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK RIGHT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK RIGHT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sequence learning mode",
				Description: "/nParameter activated by the main Z-Wave controller. Change its value to launch sequence learning procedure for the desired slot./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "learning mode disabled",
					},
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "launch sequence learning for selected slot",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "1st gestures sequence (SLOT 1)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "2nd gestures sequence (SLOT 2)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "3rd gestures sequence (SLOT 3)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "4th gestures sequence (SLOT 4)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "5th gestures sequence (SLOT 5)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "6th gestures sequence (SLOT 6)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
		},
	}
}
func New010f0d013000() *Device{
	return &Device{
		Brand: "Fibar Group S. A.",
		Product: "Gesture Controller",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0d01",
		ProductID: "3000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Device orientation",
				Description: "/nParameter determines orientation of the Swipe in relation to its default position. Required for proper gestures recognition./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default orientation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "180 rotation",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "90 clockwise rotation",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "90 counter-clockwise rotation",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Buzzer - acoustic signal settings",
				Description: "Acoustic signalling of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not signalled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is signalled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED diode - visual indicator settings",
				Description: "Visual indication of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not indicated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is indicated",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Buzzer - signalling result of gesture recognition",
				Description: "/nAcoustic signalling of gesture recognition result (using the built-in buzzer)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only successful recognition is signalled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only failed recognition is signalled",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "successful and failed recognition is signalled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "/nPowering mode - interval of updating the current mode/n",
				Description: "/nThis parameter determines how often the device checks if the USB power supply is connected and updates powering mode if needed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "powering mode is not updated",
					},
					ConfigValue{
						From: 1,
						To: 1080,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power saving mode (battery mode)",
				Description: "/nThis parameter determines operation of gesture detection when battery powered. When Standby Mode is selected, hold gesture must be performed to exit power saving mode and reactivate normal gesture recognition. The device in Standby Mode consumes the least battery life. When Simple Mode mode is selected, gesture recognition is always active, but only slowly performed gestures will be recognized properly (high battery consumption)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Standby Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Simple Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "the Swipe does not enter power saving mode",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Hold gesture to enter the menu",
				Description: "/nThis parameter allows to choose if the menu can be entered using the Hold gesture./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu disabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Scenes sent to the controller",
				Description: "/nDefines which actions result in sending scenes to 1st &#34;Lifeline&#34; group. 1 - scenes for flick UP gesture enabled; 2 - scenes for flick DOWN gesture enabled; 4 - scenes for flick LEFT gesture enabled; 8 - scenes for flick RIGHT gesture enabled; 16 - scenes for clockwise circular gesture enabled; 32 - scenes for counter-clockwise circular gesture enabled. Please sum up the different options and set this value to configure the device./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 63,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 31,
				Name: "Associations in Z-Wave network security mode",
				Description: "/nParameter defines how commands are sent in specified association groups: as secure or non-secure. Parameter is active only in Z-Wave network security mode. It does not apply to 1st &#34;Lifeline&#34; association group. 1 - 2nd group &#34;Flick UP&#34; sent as secure; 2 - 3rd group &#34;Flick DOWN&#34; sent as secure; 4 - 4th group &#34;Flick LEFT&#34; sent as secure; 8 - 5th group &#34;Flick RIGHT&#34; sent as secure; 16 - 6th group &#34;Circular AirWheel&#34; sent as secure. Sum up the options which should be sent secure and set the value./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "/nControl mode of 2nd - 5th &#34;Flick UP/DOWN/LEFT/RIGHT&#34; association groups and scenes/n",
				Description: "/nParameter allows to choose control mode for 2nd-5th groups and scenes. By default, Toggle Mode is active, meaning that a single flick turns ON the group and the same flick turns it OFF, doubled flicks are inactive. After disabling Toggle Mode a single flick will turn the device ON and the same flick doubled will turn it OFF. 1 - Toggle Mode enabled for 2nd association; group 2 - Toggle Mode enabled for 3rd association group; 4 - Toggle Mode enabled for 4th association group; 8 - Toggle Mode enabled for 5th association group. Sum up the values for the desired control modes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Rate of smooth level control",
				Description: "/nParameter allows to choose how long the hand has to be held near the center of the pad after &#34;AirWheel&#34; gesture for the associated devices to reach their maximum/minimum level./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "default settings of controlled devices",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK UP gesture",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK UP gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK DOWN gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK DOWN gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK LEFT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK LEFT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "/nSWITCH ON control frame value for FLICK RIGHT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH ON command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "/nSWITCH OFF control frame value for FLICK RIGHT gesture/n",
				Description: "/nThis parameter allows to set value sent in SWITCH OFF command frame to the association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "/nsetting associated devices to the last remembered state or turning them on/n",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sequence learning mode",
				Description: "/nParameter activated by the main Z-Wave controller. Change its value to launch sequence learning procedure for the desired slot./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "learning mode disabled",
					},
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "launch sequence learning for selected slot",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "1st gestures sequence (SLOT 1)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "2nd gestures sequence (SLOT 2)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "3rd gestures sequence (SLOT 3)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "4th gestures sequence (SLOT 4)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "5th gestures sequence (SLOT 5)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "6th gestures sequence (SLOT 6)",
				Description: "/nValue containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
		},
	}
}
func New010f0d014000() *Device{
	return &Device{
		Brand: "Fibaro",
		Product: "SWIPE",
		Description: "/n            /n          ",

		ManufacturerID: "010f",
		ProductType: "0d01",
		ProductID: "4000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005b,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				InNIF: "false",
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Device orientation",
				Description: "Parameter determines orientation of the Swipe in relation to its default position. Required for proper gestures recognition.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "default orientation",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "180 rotation",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "90 clockwise rotation",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "90 counter-clockwise rotation",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Buzzer - acoustic signal settings",
				Description: "Acoustic signalling of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not signalled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is signalled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED diode - visual indicator settings",
				Description: "Visual indication of gestures detection.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is not indicated",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "gestures detection is indicated",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Buzzer - signalling result of gesture recognition",
				Description: "Acoustic signalling of gesture recognition result (using the built-in buzzer).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "only successful recognition is signalled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "only failed recognition is signalled",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "successful and failed recognition is signalled",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 4,
				Name: "Powering mode - interval of updating the current mode",
				Description: "This parameter determines how often the device checks if the USB power supply is connected and updates powering mode if needed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "powering mode is not updated",
					},
					ConfigValue{
						From: 1,
						To: 1080,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power saving mode (battery mode)",
				Description: "This parameter determines operation of gesture detection when battery powered. When Standby Mode is selected, hold gesture must be performed to exit power saving mode and reactivate normal gesture recognition. The device in Standby Mode consumes the least battery life. When Simple Mode mode is selected, gesture recognition is always active, but only slowly performed gestures will be recognized properly (high battery consumption).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Standby Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Simple Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "the Swipe does not enter power saving mode",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Hold gesture to enter the menu",
				Description: "This parameter allows to choose if the menu can be entered using the Hold gesture.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Hold gesture to enter the menu disabled",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Scenes sent to the controller",
				Description: "Defines which actions result in sending scenes to 1st &#34;Lifeline&#34; group. 1 - scenes for flick UP gesture enabled; 2 - scenes for flick DOWN gesture enabled; 4 - scenes for flick LEFT gesture enabled; 8 - scenes for flick RIGHT gesture enabled; 16 - scenes for clockwise circular gesture enabled; 32 - scenes for counter-clockwise circular gesture enabled. Please sum up the different options and set this value to configure the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "scenes for flick UP gesture enabled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "scenes for flick DOWN gesture enabled",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "scenes for flick LEFT gesture enabled",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "scenes for flick RIGHT gesture enabled",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "scenes for clockwise circular gesture enabled",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "scenes for counter-clockwise circular gesture/nenabled",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 31,
				Name: "Associations in Z-Wave network security mode",
				Description: "Parameter defines how commands are sent in specified association groups: as secure or non-secure. Parameter is active only in Z-Wave network security mode. It does not apply to 1st &#34;Lifeline&#34; association group. 1 - 2nd group &#34;Flick UP&#34; sent as secure; 2 - 3rd group &#34;Flick DOWN&#34; sent as secure; 4 - 4th group &#34;Flick LEFT&#34; sent as secure; 8 - 5th group &#34;Flick RIGHT&#34; sent as secure; 16 - 6th group &#34;Circular AirWheel&#34; sent as secure. Sum up the options which should be sent secure and set the value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "2nd group ”Flick UP” sent as secure",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "3rd group ”Flick DOWN” sent as secure",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "4th group „Flick LEFT” sent as secure",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "5th group „Flick RIGHT” sent as secure",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "6th group „Circular AirWheel” sent as secure",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Control mode of 2nd - 5th &#34;Flick UP/DOWN/LEFT/RIGHT&#34; association groups and scenes",
				Description: "Parameter allows to choose control mode for 2nd-5th groups and scenes. By default, Toggle Mode is active, meaning that a single flick turns ON the group and the same flick turns it OFF, doubled flicks are inactive. After disabling Toggle Mode a single flick will turn the device ON and the same flick doubled will turn it OFF. 1 - Toggle Mode enabled for 2nd association; group 2 - Toggle Mode enabled for 3rd association group; 4 - Toggle Mode enabled for 4th association group; 8 - Toggle Mode enabled for 5th association group. Sum up the values for the desired control modes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode enabled for 2nd association/ngroup ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode enabled for 3rd association/ngroup ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode enabled for 4th association/ngroup",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode enabled for 5th association/ngroup",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Rate of smooth level control",
				Description: "Parameter allows to choose how long the hand has to be held near the center of the pad after &#34;AirWheel&#34; gesture for the associated devices to reach their maximum/minimum level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "default settings of controlled devices",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK UP gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK UP gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK DOWN gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK DOWN gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK LEFT gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK LEFT gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "SWITCH ON control frame value for FLICK RIGHT gesture",
				Description: "This parameter allows to set value sent in SWITCH ON command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "SWITCH OFF control frame value for FLICK RIGHT gesture",
				Description: "This parameter allows to set value sent in SWITCH OFF command frame to the association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "turning off associated devices",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "forcing level of associated devices",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "setting associated devices to the last remembered state or turning them on",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sequence learning mode",
				Description: "Parameter activated by the main Z-Wave controller. Change its value to launch sequence learning procedure for the desired slot.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "learning mode disabled",
					},
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "launch sequence learning for selected slot",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "1st gestures sequence (SLOT 1)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "2nd gestures sequence (SLOT 2)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "3rd gestures sequence (SLOT 3)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "4th gestures sequence (SLOT 4)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "5th gestures sequence (SLOT 5)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "6th gestures sequence (SLOT 6)",
				Description: "Value containing sequence of gestures. See &#34;Sequences of gestures&#34; on page 12 for more information.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1076,
						Unit: "",
						Reserved: false,
						Description: "Set a value.",
					},
				},
			},
		},
	}
}
func New011024110001() *Device{
	return &Device{
		Brand: "Nanogrid",
		Product: "Nanogird Wireless Light Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0110",
		ProductType: "2411",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011110000010() *Device{
	return &Device{
		Brand: "KUJU",
		Product: "China SmartPlug with Power Meter",
		Description: "/n            /n          ",

		ManufacturerID: "0111",
		ProductType: "1000",
		ProductID: "0010",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "Power Auto Report",
				Description: "It is used to configure the time interval of instant power (W) auto report. /n",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 18000,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval for a power auto report.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 900,
				Name: "Energy Auto Report",
				Description: "It is used to configure the time interval of accumulated energy (kWh) auto report. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 600,
						To: 432000,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval for an accumulated energy auto report.",
					},
				},
			},
		},
	}
}
func New011182000200() *Device{
	return &Device{
		Brand: "AMC",
		Product: "Dimming Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "0111",
		ProductType: "8200",
		ProductID: "0200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0000,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011344503030() *Device{
	return &Device{
		Brand: "DM-15",
		Product: "DM-15",
		Description: "/n            /n          ",

		ManufacturerID: "0113",
		ProductType: "4450",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011345565435() *Device{
	return &Device{
		Brand: "T1000",
		Product: "T1000",
		Description: "/n            /n          ",

		ManufacturerID: "0113",
		ProductType: "4556",
		ProductID: "5435",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "System Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Standard",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Heat Pump",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Fan Coil",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Fan Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Gas (no fan w/heat)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Electric (Fan w/heat)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Fan Coil 1 Speed",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Fan Coil 2 Speed",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Fan Coil 3 Speed",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Change Over Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "CO w/cool",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "CO w/heat",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "C/F Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Centigrade",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Mechanical Status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MECH_H1",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "MECH_H2",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "MECH_H3",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "MECH_C1",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "MECH_C2",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "PHANTOM_F",
					},
					ConfigValue{
						From: 64,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "MECH_F",
					},
					ConfigValue{
						From: 128,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "MANUAL_F",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCP Status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "STATE_HEAT",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "STATE_COOL",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "STATE_2ND",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "STATE_3RD",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "STATE_FAN",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "STATE_VENT",
					},
					ConfigValue{
						From: 64,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "STATE_MOT",
					},
					ConfigValue{
						From: 128,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "STATE_MRT",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Autosend Enable Bits",
				Description: "When set, the corresponding report is sent out unsolicited when a changed is detected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "TEMPERATURE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "SETPOINTH",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SETPOINTC",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "MODE",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "FANMODE",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "FANSTATE",
					},
					ConfigValue{
						From: 64,
						To: 64,
						Unit: "",
						Reserved: false,
						Description: "OPERATINGSTATE",
					},
					ConfigValue{
						From: 128,
						To: 128,
						Unit: "",
						Reserved: false,
						Description: "SCHEDENABLE",
					},
					ConfigValue{
						From: 264,
						To: 264,
						Unit: "",
						Reserved: false,
						Description: "SETBACK",
					},
					ConfigValue{
						From: 512,
						To: 512,
						Unit: "",
						Reserved: false,
						Description: "RUNHOLD",
					},
					ConfigValue{
						From: 1024,
						To: 1024,
						Unit: "",
						Reserved: false,
						Description: "DISPLAYLOCK",
					},
					ConfigValue{
						From: 2048,
						To: 2048,
						Unit: "",
						Reserved: false,
						Description: "FILTERALERT",
					},
					ConfigValue{
						From: 4096,
						To: 4096,
						Unit: "",
						Reserved: false,
						Description: "MAINTALERT",
					},
					ConfigValue{
						From: 8192,
						To: 8192,
						Unit: "",
						Reserved: false,
						Description: "MECHSTATUS",
					},
					ConfigValue{
						From: 16384,
						To: 16384,
						Unit: "",
						Reserved: false,
						Description: "SCPSTATUS",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Display Lock",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "unlocked",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "locked",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "MOT",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "MRT",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "H Delta Stage 1 ON",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "H Delta Stage 1 OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "H Delta Stage 2 ON",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "H Delta Stage 2 OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "H Delta Stage 3 ON",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "H Delta Stage 3 OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "C Delta Stage 1 ON",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C Delta Stage 1 OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "C Delta Stage 2 ON",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "C Delta Stage 2 OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Setpoint H/C Delta",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Setback Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No Setback",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "UnOccupied Mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Standby Mode",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 68,
				Name: "UnOccupied HSP *",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 65,
						To: 85,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 72,
				Name: "UnOccupied CSP *",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 65,
						To: 85,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 48,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "2nd Stage Heat Enable",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Aux Heat Enable",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "2nd Stage Cool Enable",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Backlight Timer",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 120,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 85,
				Name: "UI Max Heat Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 50,
						To: 85,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 65,
				Name: "UI Min Cool Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 55,
						To: 99,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Screen Timeout",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 20,
						To: 120,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 90,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Filter Timer",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 92,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Filter Timer Max",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Filter Notify",
					},
					ConfigValue{
						From: 1,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 94,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Heat Timer",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 98,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Cool Timer",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 102,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Maint Timer (Sum of Heat and Cool Timers)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 104,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Maint Timer Max",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Maint Notify",
					},
					ConfigValue{
						From: 1,
						To: 4000,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 132,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Filter Notify",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Filter Timer &gt;= Filter Max",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Filter Timer &lt; Filter Max",
					},
				},
			},
			ConfigParam{
				ID: 133,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Maint Notify",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Maint Timer &gt;= Maint Max",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Maint Timer &lt; Maint Max",
					},
				},
			},
			ConfigParam{
				ID: 183,
				Type: "",
				Size: 1,
				Default: 70,
				Name: "Comfort Default SP",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 65,
						To: 85,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 184,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Comfort Delta",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 188,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Standby HSP",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 50,
						To: 85,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 189,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Standby CSP",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 65,
						To: 90,
						Unit: "Fahrenheit",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 190,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Standby Delay",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 240,
						Unit: "seconds",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 191,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "CardKey Enable",
				Description: "(When enabled, “Insert Cardkey to Enable Thermostat” will be displayed when BASIC_SET = 0x00 is received)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 192,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Setback Disabled",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
				},
			},
		},
	}
}
func New011400010001() *Device{
	return &Device{
		Brand: "Kichler Lighting",
		Product: "Undercabinet Controller",
		Description: "/n            /n          ",

		ManufacturerID: "0114",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011500000000() *Device{
	return &Device{
		Brand: "UZB",
		Product: "Z-Wave USB Stick",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011500010001() *Device{
	return &Device{
		Brand: "RaZBerry",
		Product: "RaZBerry",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0046,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008a,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0077,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x004c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x003d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "6",
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009e,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0046,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011500040002() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Outdoor Siren",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0004",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Siren triggering mode",
				Description: "Sets the tamper triggering mode when removed from the holder",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The Siren triggers automatically when it&#39;s removed from the holder. Must/nbe turned off, using the button or from the controller",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The Siren triggers automatically when it&#39;s removed from the holder and/nturns off, when placed back on the holder",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Siren doesn&#39;t trigger at all, when removed from the holder. Service Mode",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature adjustments",
				Description: "Temperature correction. For positive value 10 = 1 °C, for negative value x = 256 -/n(T°C * 10). Example, if need shift -2.6°C, value calculate: 256 - (2.6 * 10) = 230.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "In 0.1°C, adjust the temperature",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "-0.1°C, adjust the temperature",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Send unsolicited temperature report",
				Description: "Threshold temperature to send unsolicited report. 10 = 1°C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "x 0,1°C",
						Reserved: false,
						Description: "Define a treshold",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 15,
				Name: "Send unsolicited temperature report after N wake up",
				Description: "If the value is set, after N wake up number (measurement is every 4 minutes) the/ntemperature report will be sent. By default it&#39;s 15 = every 1 hour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Each Nth wake up time",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Switch mode",
				Description: "Parameter defines a switch mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Siren only",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Flash &#43; Siren",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Added Auto OFF",
				Description: "If the value is set, the siren will be switched off automatically after a defined alarm/ntime.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no auto off",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define an auto off time.",
					},
				},
			},
		},
	}
}
func New011500040003() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Z-Wave CO Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0004",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Siren alarm sequence interval",
				Description: "The additional siren is/ncreating a different acoustic signal differentiate from the smoke alarm. This sound is partly on and/npartly off. This parameter defines the total length of the interval in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 6,
						To: 130,
						Unit: "",
						Reserved: false,
						Description: "sequence interval",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Siren alarm tone length",
				Description: "The additional siren is creating a/ndifferent acoustic signal differentiate from the smoke alarm. This sound is partly on and partly off. This/nparameter defines the total length of the sound versus silence within this interval. Please make sure/nthis value is always smaller (shorter time) than parameter 1 that defines the whole sequence.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "seconds",
						Reserved: false,
						Description: "tone length",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Value of On-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "On-Command",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Value of Off-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Off-Command",
					},
				},
			},
		},
	}
}
func New011500040004() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "10 Year Smoke Detector plus Siren",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0004",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Siren Alarm Sequence Interval",
				Description: "The additional siren is/ncreating a different acoustic signal differentiate from the smoke alarm. This sound is partly on and/npartly off. This parameter defines the total length of the interval in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 6,
						To: 129,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Siren Alarm Tone Length ",
				Description: "The additional siren is creating a/ndifferent acoustic signal differentiate from the smoke alarm. This sound is partly on and partly off. This/nparameter defines the total length of the sound versus silence within this interval. Please make sure/nthis value is always smaller (shorter time) than parameter 1 that defines the whole sequence.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "sec",
						Reserved: false,
						Description: "Define the length of the sound.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Value of On-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Value of Off-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
		},
	}
}
func New011500240001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Floor thermostat 1.4",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0024",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 1800,
				Name: "Длительность режима быстрой сушки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Переключает нормальный нагрев / выключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Переключает нормальный нагрев / экономный режим",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включает/выключает режим быстрой сушки",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Реакция термостата на команду Basic Set",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Переключает нормальный нагрев / выключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Переключает нормальный нагрев / экономный режим",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включает/выключает режим быстрой сушки",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Задаёт температуру для режима нормального обогрева (в единицах 0.1 C)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включает/выключает реле (только при Thermostat Mode в режиме Off)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 18,
				Name: "Интервал управления температурой",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10 секунд",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Максимальная ширина коридора температурой",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "",
						Reserved: false,
						Description: "в единицах 0.1 C",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия кнопки",
				Description: "Характерное время для отличия нажатия от удержания",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Максимальная допустимая температура",
				Description: "Во всех режимах работы термостат отключает обогрев до снижения температуры ниже данного предела. Для деревянного пола и ламината максимальная допустимая температура - 27 градусов Цельсия. Для кафельного и бетонного пола максимальная допустимая температура - 45 градусов Цельсия.",
				Values: []ConfigValue{
					ConfigValue{
						From: 20,
						To: 55,
						Unit: "deg",
						Reserved: false,
						Description: "градусы Цельсия",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Энергопотребление",
				Description: "Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 3300 Ватт.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 3300,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 900,
				Name: "Автоматическая отправка температуры",
				Description: "Время периодической отправки температуры задается в секундах. По умолчанию температура автоматически отправляется каждые 15 минут.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 30,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "Секунды",
					},
				},
			},
		},
	}
}
func New011501000001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Key Fob 2",
		Description: "/n            /n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 1 и 3",
				Description: "В раздельном режиме кнопка 1 работает с группой 1, кнопка 3 с группой 3. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 1/3 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 1, двойной с группой 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 2 и 4",
				Description: "В раздельном режиме кнопка 2 работает с группой 2, кнопка 4 с группой 4. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 2/4 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 2, двойной с группой 4.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 1",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 1 (группа 1) отправится команда 10 * 1 &#43; 1(Вкл) = 11.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 2",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 2 (группа 2) отправится команда 10 * 2 &#43; 1(Вкл) = 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 3",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:   в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 3 (группа 3) отправится команда 10 * 1 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 4",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 4 (группа 2) отправится команда 10 * 2 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания и двойного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 100,
						Unit: "ms",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Режим подтверждения светодиода",
				Description: "Позволяет экономить заряд батарейки",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Без подтверждения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши и доставку",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировать просыпания, немотря на настроки интервала пробуждения",
				Description: "Если брелок просыпается вдалеке от контроллера, несколько попыток связаться с контроллером приведут к бессмысленной трате батареек. Для брелока, часто находящегося вне дома рекомендуется не активировать просыпания.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Просыпания заблокированы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Просыпается в соответствии с настройками",
					},
				},
			},
		},
	}
}
func New011501000004() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Dual Paddle Wall Controller 1.3",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 1 и 3",
				Description: "В раздельном режиме кнопка 1 работает с группой 1, кнопка 3 с группой 3. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 1/3 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 1, двойной с группой 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 2 и 4",
				Description: "В раздельном режиме кнопка 2 работает с группой 2, кнопка 4 с группой 4. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 2/4 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 2, двойной с группой 4.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 1",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример: в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 1 (группа 1) отправится команда 10 * 1 &#43; 1(Вкл) = 11.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 2",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 2 (группа 2) отправится команда 10 * 2 &#43; 1(Вкл) = 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 3",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 3 (группа 1) отправится команда 10 * 1 &#43; 2(Выкл) = 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 4",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 4 (группа 2) отправится команда 10 * 2 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания и двойного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 100,
						Unit: "ms",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Режим подтверждения светодиода",
				Description: "Позволяет экономить заряд батарейки",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Без подтверждения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши и доставку",
					},
				},
			},
		},
	}
}
func New011501000101() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "KFOB-S",
		Description: "/n            /n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 1 и 3",
				Description: "В раздельном режиме кнопка 1 работает с группой A, кнопка 3 с группой C. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме A/C - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой A, двойной с группой C.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 2 и 4",
				Description: "В раздельном режиме кнопка 2 работает с группой B, кнопка 4 с группой D. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме B/D - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой B, двойной с группой D.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы A",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 1 (группа 1) отправится команда 10 * 1 &#43; 1(Вкл) = 11.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Commandos manoeuvres Marche et Arret (par commando Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы B",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 2 (группа 2) отправится команда 10 * 2 &#43; 1(Вкл) = 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы C",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:   в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 3 (группа 3) отправится команда 10 * 1 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы D",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 4 (группа 2) отправится команда 10 * 2 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировать просыпания, немотря на настроки интервала пробуждения",
				Description: "Если брелок просыпается вдалеке от контроллера, несколько попыток связаться с контроллером приведут к бессмысленной трате батареек. Для брелока, часто находящегося вне дома рекомендуется не активировать просыпания.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Просыпания заблокированы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Просыпается в соответствии с настройками",
					},
				},
			},
		},
	}
}
func New011501000103() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "4 Button Secure Remote Control",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005b,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 1/3 pair mode",
				Description: "In separate mode button 1/2 works with group A, button 3/4 with group C. Click is On, Hold is dimming Up, Double/nclick is Off, Click-Hold is dimming Down. In pair button 1&#43;3/2&#43;3 are Up/Down correspondingly. Click is On/Off,/nHold dimms Up/Down. Single clicks work with group A, double click with group C./n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks/n/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 2/4 pair mode",
				Description: "In separate mode button 1/2 works with group A, button 3/4 with group C. Click is On, Hold is dimming Up, Double click is Off, Click-Hold is dimming Down. In pair button 1&#43;3/2&#43;3 are Up/Down correspondingly. Click is On/Off, Hold dimms Up/Down. Single clicks work with group A, double click with group C./n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command to Control Group A",
				Description: "This parameter defines the command to be sent to devices of control group A when the related button is pressed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and/nSwitch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control Door Lock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway (Default)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command to Control Group B",
				Description: "This parameter defines the command to be sent to devices of control group B when the related button is pressed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control Door Lock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command to Control Group C",
				Description: "This parameter defines the command to be sent to devices of control group C when the related button is pressed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control Door Lock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Command to Control Group D",
				Description: "This parameter defines the command to be sent to devices of control group D/nwhen the related button is pressed.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control Door Lock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch All commands",
				Description: "The parameter determines which commands are sent./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off only",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch on only",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Switch all on and off",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Buttons",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Blocks wakeup even when wakeup interval is set",
				Description: "If the KFOB wakes up and there is no controller nearby, several/nunsuccessful communication attempts will drain battery./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is blocked",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is possible if configured accordingly",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send unsolicited Battery Report on Wake Up",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To same node as wake up/nnotification",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Broadcast to neighbors",
					},
				},
			},
		},
	}
}
func New011501000200() *Device{
	return &Device{
		Brand: "",
		Product: "",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Интервал опроса устройства",
				Description: "Устанавливает внутреннюю частоту опроса устройства, 1 = 0.1 секунды. За один запрос устройство получает значения всех установленных каналов сразу. Например, значение 100/n					установит внутренний интервал опроса устройства один раз в десять секунд/n				",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды/10",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Канал 1",
				Description: "Устанавливает тип подключенного сенсора, канал 1. Для новых значений необходимо прохождение повторного интервью",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет сенсора",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Термопара L типа",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Термопара J типа",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Термопара N типа",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Термопара K типа",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Термопара S типа",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Термопара R типа",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Термопара B типа",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Термопара A1 типа",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Термопара A2 типа",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Термопара A3 типа",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Термопара T типа",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.85",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.91",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.85",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.91",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.85",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.91",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.85",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.91",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.26",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.28",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.26",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.28",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.26",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.28",
					},
					ConfigValue{
						From: 27,
						To: 27,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.26",
					},
					ConfigValue{
						From: 28,
						To: 28,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.28",
					},
					ConfigValue{
						From: 29,
						To: 29,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni100 L=6.17",
					},
					ConfigValue{
						From: 30,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni500 L=6.17",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni1000 L=6.17",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор 23",
					},
					ConfigValue{
						From: 33,
						To: 33,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-1 В",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-10 В",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Ток 4-20 мА",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Сухой контакт",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, высокий уровень, канал 1",
				Description: "Используется только для датчиков «Dry Contact». Детектирование высокого уровня датчика с выходом «сухой контакт», канал 1. Например, значение 127 установит входной уровень/n                    соответствующий значению напряжения 12.7 В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сухой контакт. Уровень входного сигнала, низкий уровень, канал 1",
				Description: "Используется только для датчиков «Dry Contact». Детектирование низкого уровня датчика с выходом «сухой контакт», канал 1. Например, значение 7 установит входной уровень/n                    соответствующий значению напряжения 0.7В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, не определен, канал 1",
				Description: "Используется только для датчиков «Dry Contact». Значение, возвращаемое при неопределенном состоянии датчика, канал 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Низкий уровень",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Высокий уровень",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Интервал отправки отчета, канал 1",
				Description: "Определяет временной интервал для отправки значений сенсора, канал 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет, при изменении значения на заданную величину, канал 1",
				Description: "Определяет значение изменений, необходимых для отправки отчета, канал 1. Например, установленное значение 1, приведет к отправке отчета при изменении значения установленного/n                    сенсора на 0.01",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "значение/100",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет не чаще, чем, канал 1",
				Description: "Устанавливает ограничение на отправку отчетов для канала 1. Например, установленное значение 1000, приведет к отправке не более одного отчета в секунду.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "миллисекунды",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Тип подключенного сенсора, канал 2",
				Description: "Устанавливает тип подключенного сенсора, канал 2. Для новых значений необходимо прохождение повторного интервью.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет сенсора",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Термопара L типа",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Термопара J типа",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Термопара N типа",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Термопара K типа",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Термопара S типа",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Термопара R типа",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Термопара B типа",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Термопара A1 типа",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Термопара A2 типа",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Термопара A3 типа",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Термопара T типа",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.85",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.91",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.85",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.91",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.85",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.91",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.85",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.91",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.26",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.28",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.26",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.28",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.26",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.28",
					},
					ConfigValue{
						From: 27,
						To: 27,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.26",
					},
					ConfigValue{
						From: 28,
						To: 28,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.28",
					},
					ConfigValue{
						From: 29,
						To: 29,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni100 L=6.17",
					},
					ConfigValue{
						From: 30,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni500 L=6.17",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni1000 L=6.17",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор 23",
					},
					ConfigValue{
						From: 33,
						To: 33,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-1 В",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-10 В",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Ток 4-20 мА",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Сухой контакт",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, высокий уровень, канал 2",
				Description: "Используется только для датчиков «Dry Contact». Детектирование высокого уровня датчика с выходом «сухой контакт», канал 2. Например, значение 127 установит входной уровень/n                    соответствующий значению напряжения 12.7 В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сухой контакт. Уровень входного сигнала, низкий уровень, канал 2",
				Description: "Используется только для датчиков «Dry Contact». Детектирование низкого уровня датчика с выходом «сухой контакт», канал 2. Например, значение 7 установит входной уровень/n                    соответствующий значению напряжения 0.7В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, не определен, канал 2",
				Description: "Используется только для датчиков «Dry Contact». Значение, возвращаемое при неопределенном состоянии датчика, канал 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Низкий уровень",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Высокий уровень",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Интервал отправки отчета, канал 2",
				Description: "Определяет временной интервал для отправки значений сенсора, канал 2",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет, при изменении значения на заданную величину, канал 2",
				Description: "Определяет значение изменений, необходимых для отправки отчета, канал 2. Например, установленное значение 1, приведет к отправке отчета при изменении значения установленного/n                    сенсора на 0.01",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "значение/100",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет не чаще, чем, канал 2",
				Description: "Устанавливает ограничение на отправку отчетов для канала 2. Например, установленное значение 1000, приведет к отправке не более одного отчета в секунду.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "миллисекунды",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Тип подключенного сенсора, канал 3",
				Description: "Устанавливает тип подключенного сенсора, канал 3. Для новых значений необходимо прохождение повторного интервью.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет сенсора",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Термопара L типа",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Термопара J типа",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Термопара N типа",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Термопара K типа",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Термопара S типа",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Термопара R типа",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Термопара B типа",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Термопара A1 типа",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Термопара A2 типа",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Термопара A3 типа",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Термопара T типа",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.85",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.91",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.85",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.91",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.85",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.91",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.85",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.91",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.26",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.28",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.26",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.28",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.26",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.28",
					},
					ConfigValue{
						From: 27,
						To: 27,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.26",
					},
					ConfigValue{
						From: 28,
						To: 28,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.28",
					},
					ConfigValue{
						From: 29,
						To: 29,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni100 L=6.17",
					},
					ConfigValue{
						From: 30,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni500 L=6.17",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni1000 L=6.17",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор 23",
					},
					ConfigValue{
						From: 33,
						To: 33,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-1 В",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-10 В",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Ток 4-20 мА",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Сухой контакт",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, высокий уровень, канал 3",
				Description: "Используется только для датчиков «Dry Contact». Детектирование высокого уровня датчика с выходом «сухой контакт», канал 3. Например, значение 127 установит входной уровень/n                    соответствующий значению напряжения 12.7 В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сухой контакт. Уровень входного сигнала, низкий уровень, канал 3",
				Description: "Используется только для датчиков «Dry Contact». Детектирование низкого уровня датчика с выходом «сухой контакт», канал 3. Например, значение 7 установит входной уровень/n                    соответствующий значению напряжения 0.7В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, не определен, канал 3",
				Description: "Используется только для датчиков «Dry Contact». Значение, возвращаемое при неопределенном состоянии датчика, канал 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Низкий уровень",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Высокий уровень",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Интервал отправки отчета, канал 3",
				Description: "Определяет временной интервал для отправки значений сенсора, канал 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет, при изменении значения на заданную величину, канал 3",
				Description: "Определяет значение изменений, необходимых для отправки отчета, канал 3. Например, установленное значение 1, приведет к отправке отчета при изменении значения установленного/n                    сенсора на 0.01",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "значение/100",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет не чаще, чем, канал 3",
				Description: "Устанавливает ограничение на отправку отчетов для канала 3. Например, установленное значение 1000, приведет к отправке не более одного отчета в секунду.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "миллисекунды",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Тип подключенного сенсора, канал 4",
				Description: "Устанавливает тип подключенного сенсора, канал 4. Для новых значений необходимо прохождение повторного интервью.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет сенсора",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Термопара L типа",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Термопара J типа",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Термопара N типа",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Термопара K типа",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Термопара S типа",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Термопара R типа",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Термопара B типа",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Термопара A1 типа",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Термопара A2 типа",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Термопара A3 типа",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Термопара T типа",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.85",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.91",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.85",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.91",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.85",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.91",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.85",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.91",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.26",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.28",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.26",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.28",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.26",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.28",
					},
					ConfigValue{
						From: 27,
						To: 27,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.26",
					},
					ConfigValue{
						From: 28,
						To: 28,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.28",
					},
					ConfigValue{
						From: 29,
						To: 29,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni100 L=6.17",
					},
					ConfigValue{
						From: 30,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni500 L=6.17",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni1000 L=6.17",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор 23",
					},
					ConfigValue{
						From: 33,
						To: 33,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-1 В",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-10 В",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Ток 4-20 мА",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Сухой контакт",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, высокий уровень, канал 4",
				Description: "Используется только для датчиков «Dry Contact». Детектирование высокого уровня датчика с выходом «сухой контакт», канал 4. Например, значение 127 установит входной уровень/n                    соответствующий значению напряжения 12.7 В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сухой контакт. Уровень входного сигнала, низкий уровень, канал 4",
				Description: "Используется только для датчиков «Dry Contact». Детектирование низкого уровня датчика с выходом «сухой контакт», канал 4. Например, значение 7 установит входной уровень/n                    соответствующий значению напряжения 0.7В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, не определен, канал 4",
				Description: "Используется только для датчиков «Dry Contact». Значение, возвращаемое при неопределенном состоянии датчика, канал 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Низкий уровень",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Высокий уровень",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Интервал отправки отчета, канал 4",
				Description: "Определяет временной интервал для отправки значений сенсора, канал 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет, при изменении значения на заданную величину, канал 4",
				Description: "Определяет значение изменений, необходимых для отправки отчета, канал 4. Например, установленное значение 1, приведет к отправке отчета при изменении значения установленного/n                    сенсора на 0.01",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "значение/100",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет не чаще, чем, канал 4",
				Description: "Устанавливает ограничение на отправку отчетов для канала 4. Например, установленное значение 1000, приведет к отправке не более одного отчета в секунду.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "миллисекунды",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Тип подключенного сенсора, канал 5",
				Description: "Устанавливает тип подключенного сенсора, канал 5. Для новых значений необходимо прохождение повторного интервью.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет сенсора",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Термопара L типа",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Термопара J типа",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Термопара N типа",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Термопара K типа",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Термопара S типа",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Термопара R типа",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Термопара B типа",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Термопара A1 типа",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Термопара A2 типа",
					},
					ConfigValue{
						From: 10,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "Термопара A3 типа",
					},
					ConfigValue{
						From: 11,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "Термопара T типа",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Термопара E типа",
					},
					ConfigValue{
						From: 13,
						To: 13,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.85",
					},
					ConfigValue{
						From: 14,
						To: 14,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt50 L=3.91",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.85",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt100 L=3.91",
					},
					ConfigValue{
						From: 17,
						To: 17,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.85",
					},
					ConfigValue{
						From: 18,
						To: 18,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt500 L=3.91",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.85",
					},
					ConfigValue{
						From: 20,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Pt1000 L=3.91",
					},
					ConfigValue{
						From: 21,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.26",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu50 L=4.28",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.26",
					},
					ConfigValue{
						From: 24,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu100 L=4.28",
					},
					ConfigValue{
						From: 25,
						To: 25,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.26",
					},
					ConfigValue{
						From: 26,
						To: 26,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu500 L=4.28",
					},
					ConfigValue{
						From: 27,
						To: 27,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.26",
					},
					ConfigValue{
						From: 28,
						To: 28,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Cu1000 L=4.28",
					},
					ConfigValue{
						From: 29,
						To: 29,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni100 L=6.17",
					},
					ConfigValue{
						From: 30,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni500 L=6.17",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор Ni1000 L=6.17",
					},
					ConfigValue{
						From: 32,
						To: 32,
						Unit: "",
						Reserved: false,
						Description: "Терморезистор 23",
					},
					ConfigValue{
						From: 33,
						To: 33,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-1 В",
					},
					ConfigValue{
						From: 34,
						To: 34,
						Unit: "",
						Reserved: false,
						Description: "Напряжение 0-10 В",
					},
					ConfigValue{
						From: 35,
						To: 35,
						Unit: "",
						Reserved: false,
						Description: "Ток 4-20 мА",
					},
					ConfigValue{
						From: 36,
						To: 36,
						Unit: "",
						Reserved: false,
						Description: "Сухой контакт",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, высокий уровень, канал 5",
				Description: "Используется только для датчиков «Dry Contact». Детектирование высокого уровня датчика с выходом «сухой контакт», канал 5. Например, значение 127 установит входной уровень/n                    соответствующий значению напряжения 12.7 В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Сухой контакт. Уровень входного сигнала, низкий уровень, канал 5",
				Description: "Используется только для датчиков «Dry Contact». Детектирование низкого уровня датчика с выходом «сухой контакт», канал 5. Например, значение 7 установит входной уровень/n                    соответствующий значению напряжения 0.7В./n                ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "В/10",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Сухой контакт. Уровень входного сигнала, не определен, канал 5",
				Description: "Используется только для датчиков «Dry Contact». Значение, возвращаемое при неопределенном состоянии датчика, канал 5",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Низкий уровень",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Высокий уровень",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Интервал отправки отчета, канал 5",
				Description: "Определяет временной интервал для отправки значений сенсора, канал 5",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет, при изменении значения на заданную величину, канал 5",
				Description: "Определяет значение изменений, необходимых для отправки отчета, канал 5. Например, установленное значение 1, приведет к отправке отчета при изменении значения установленного/n                    сенсора на 0.01",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "значение/100",
					},
				},
			},
			ConfigParam{
				ID: 56,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Отправлять отчет не чаще, чем, канал 5",
				Description: "Устанавливает ограничение на отправку отчетов для канала 5. Например, установленное значение 1000, приведет к отправке не более одного отчета в секунду",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "миллисекунды",
					},
				},
			},
		},
	}
}
func New011501000201() *Device{
	return &Device{
		Brand: "Z-Wave",
		Product: "SmokeSensor/Siren",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Siren Alarm Sequence Interval",
				Description: "The additional siren is creating a different acoustic signal differentiate from the smoke alarm. This sound is partly/non and partly off. This parameter defines the total length of the interval in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 129,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Siren Alarm Tone Length ",
				Description: "The additional siren is creating a different acoustic signal differentiate from the smoke alarm. This sound is partly on and partly off. This parameter defines the total length of the sound versus silence within this interval.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "sec",
						Reserved: false,
						Description: "Define the total length of the sound.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Value of On-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the desired value.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Value of Off-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the desired value.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Status of automated meshing of Smoke Alarms",
				Description: "This smoke detector can automatically inform other smoke detectors of same type about smoke alarms. They will/nthen also turn on the siren. This function is a requirement of wireless networked smoke detectors.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Status of automated meshing of Battery Alarms",
				Description: "This smoke detector can automatically inform other smoke detectors of same type about battery alarms. They will/nthen also turn on the siren. This function is a requirement of wireless networked smoke detectors.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active",
					},
				},
			},
		},
	}
}
func New011501000400() *Device{
	return &Device{
		Brand: "Stagetronics",
		Product: "Z-Weather",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0400",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009b,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0089,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Threshold for too much wind",
				Description: "Crossing this parameter on the rising edge, Z-Weather sends a basic set to the associated groups, serves the lifeline and sends a wake up notification. Valid values:  0-30 m/s, where 0 means no notification on too much wind./nValues greater than 30 are interpreted as 30./n1m/s = 3,6km/h ; 1km/h = 0,28m/s/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 30,
						Unit: "m/s",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 37,
				Name: "Threshold for twilight",
				Description: "Crossing this parameter from night to day, association group 3 is informed. Crossing this parameter from day to night, association group 4 is informed./nThe luminance 0-100% is related to the twilight. Note that 100% does not mean that the sun is shining. In the night, the luminance is 0%, increases with the dawn and is 100% at the end of the dawn. This might not be equal with sunrise and typically is some time before sunrise. In winter, on a cloudy day the luminance may be below 100%. /n/nInternally, Z-Weather only distinguishes 7 steps of luminance. It is possible to set every value between 1-100%, but they are mapped internally to the fixed steps./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
		},
	}
}
func New011501000401() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Dual Paddle Wall Controller 1.4",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0100",
		ProductID: "0401",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 1 и 3",
				Description: "В раздельном режиме кнопка 1 работает с группой 1, кнопка 3 с группой 3. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 1/3 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 1, двойной с группой 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 2 и 4",
				Description: "В раздельном режиме кнопка 2 работает с группой 2, кнопка 4 с группой 4. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме 2/4 - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 2, двойной с группой 4.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 1",
				Description: "В режиме Только Включить/Выключить при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример: в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 1 (группа 1) отправится команда 10 * 1 &#43; 1(Вкл) = 11.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправка Сцен",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправка преднастроенных Сцен",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 2",
				Description: "В режиме Только Включить/Выключить при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 2 (группа 2) отправится команда 10 * 2 &#43; 1(Вкл) = 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправка Сцен",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправка преднастроенных Сцен",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 3",
				Description: "В режиме Только Включить/Выключить при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 3 (группа 1) отправится команда 10 * 1 &#43; 2(Выкл) = 12.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправка Сцен",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправка преднастроенных Сцен",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 4",
				Description: "В режиме Только Включить/Выключить при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 4 (группа 2) отправится команда 10 * 2 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправка Сцен",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправка преднастроенных Сцен",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания и двойного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 100,
						Unit: "ms",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Режим подтверждения светодиода",
				Description: "Позволяет экономить заряд батарейки",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Без подтверждения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши и доставку",
					},
				},
			},
		},
	}
}
func New011501100001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Z-Uno",
		Description: "/n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0110",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Debugging",
				Description: "Debug mode to apply channels, associations and power mode changes on the fly without exclusion-inclusion sequence. Use for debugging only!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED",
				Description: "Blink with service LED during operation",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Yes",
					},
				},
			},
		},
	}
}
func New011502000001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "iTemp Temperature Sensor",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0200",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 C",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 C",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New011502010001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Temperature Sensor 2.1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0201",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Работает ли бинарный датчик",
				Description: "определяет работает ли бинарный датчик или не работает",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не работает",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Работает",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим бинарного датчика",
				Description: "определяет какую команду отправить при срабатывании бинарного датчика",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Включить (Basic On) при замыкании, Выключить (Basic Off) при размыкании",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Выключить (Basic Off) при замыкании, Включить (Basic On) при размыкании",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Автоматическая отправка температуры",
				Description: "На сколько должна измениться температура, чтобы датчик отправил температуру контроллеру. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Максимальное отклонение температуры для термостата",
				Description: "Максимальное отклонение температуры от заданной точки после которой термостат сменит режим Вкл/Выкл Охлаждение/Нагрев. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2",
				Description: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2. Т.е. если в группе 2 находится реле, которое включает котел, и у этого реле установлено время автоотключения (для безопасности, чтобы не перегреть дом), например каждые 15 минут, то термостат будет проверять температуру и если нужно будет повторно включать реле.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отправить один раз",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 15,
				Name: "Как часто отправлять температуру",
				Description: "Если установить &#34;каждые N пробуждений&#34; = 10, то температура будет отправляться при каждом 10 просыпании. По умолчанию температура отправляется при каждом 15 просыпании.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Никогда",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Коррекция температуры",
				Description: "На сколько градусов корректировать температуру. Для положительного 10 = 1 °C. Для отрицательного значение x = 256 - (T°C * 10). Например, если нужно присылаемую температуру уменьшать на 2°C, то значение вычисляется так: 256 - (2 * 10) = 236.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 127,
						To: 255,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автоматическая отправка заряда батареек при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение о пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
		},
	}
}
func New011502010002() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Thermostat 2.1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0201",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Работает ли бинарный датчик",
				Description: "определяет работает ли бинарный датчик или не работает",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не работает",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Работает",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим бинарного датчика",
				Description: "определяет какую команду отправить при срабатывании бинарного датчика",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Включить (Basic On) при замыкании, Выключить (Basic Off) при размыкании",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Выключить (Basic Off) при замыкании, Включить (Basic On) при размыкании",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автоматическая отправка температуры",
				Description: "На сколько должна измениться температура, чтобы датчик отправил температуру контроллеру. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Максимальное отклонение температуры для термостата",
				Description: "Максимальное отклонение температуры от заданной точки после которой термостат сменит режим Вкл/Выкл Охлаждение/Нагрев. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2",
				Description: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2. Т.е. если в группе 2 находится реле, которое включает котел, и у этого реле установлено время автоотключения (для безопасности, чтобы не перегреть дом), например каждые 15 минут, то термостат будет проверять температуру и если нужно будет повторно включать реле.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отправить один раз",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Как часто отправлять температуру",
				Description: "Если установить &#34;каждые N пробуждений&#34; = 10, то температура будет отправляться при каждом 10 просыпании. По умолчанию температура не отправляется.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Никогда",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Коррекция температуры",
				Description: "На сколько градусов корректировать температуру. Для положительного 10 = 1 °C. Для отрицательного значение x = 256 - (T°C * 10). Например, если нужно присылаемую температуру уменьшать на 2°C, то значение вычисляется так: 256 - (2 * 10) = 236.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автоматическая отправка заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
		},
	}
}
func New011502010003() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Binary Sensor 2.1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "0201",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Работает ли бинарный датчик",
				Description: "определяет работает ли бинарный датчик или не работает",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не работает",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Работает",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим бинарного датчика",
				Description: "определяет какую команду отправить при срабатывании бинарного датчика",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Включить (Basic On) при замыкании, Выключить (Basic Off) при размыкании",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Выключить (Basic Off) при замыкании, Включить (Basic On) при размыкании",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автоматическая отправка температуры",
				Description: "На сколько должна измениться температура, чтобы датчик отправил температуру контроллеру. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Максимальное отклонение температуры для термостата",
				Description: "Максимальное отклонение температуры от заданной точки после которой термостат сменит режим Вкл/Выкл Охлаждение/Нагрев. 10 = 1 °C",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2",
				Description: "Термостат повторно отправляет команду включения (Basic On) устройству из группы 2. Т.е. если в группе 2 находится реле, которое включает котел, и у этого реле установлено время автоотключения (для безопасности, чтобы не перегреть дом), например каждые 15 минут, то термостат будет проверять температуру и если нужно будет повторно включать реле.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отправить один раз",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Как часто отправлять температуру",
				Description: "Если установить &#34;каждые N пробуждений&#34; = 10, то температура будет отправляться при каждом 10 просыпании. По умолчанию температура не отправляется.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Никогда",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "4 min",
						Reserved: false,
						Description: "каждые N пробуждений",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Коррекция температуры",
				Description: "На сколько градусов корректировать температуру. Для положительного 10 = 1 °C. Для отрицательного значение x = 256 - (T°C * 10). Например, если нужно присылаемую температуру уменьшать на 2°C, то значение вычисляется так: 256 - (2 * 10) = 236.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
					ConfigValue{
						From: 127,
						To: 255,
						Unit: "0.1 °C",
						Reserved: false,
						Description: "0.1 °C",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Автоматическая отправка заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не отправлять",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
		},
	}
}
func New011510000001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Flush-Mountable Switch v1.8",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Переключать при диммировании кнопками",
				Description: "Определяет включаться/выключаться ли при диммировании кнопками",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет, выключится",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включать/выключать нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
		},
	}
}
func New011510000002() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Flush-Mountable Dimmer v1.8",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Игнорировать начальный уровень",
				Description: "Определяет игнорировать ли начальный уровень димминга в коммандах StartLevelChange (начать изменение яркости) даже если он указан или нет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Время диммирования",
				Description: "Время димирования при нажатии на кнопки и при получении команды Set (если она не содержит времени включения). Если не 0, то диммирование будет плавным, что сбережёт лампочку дольше.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время долгого диммирования",
				Description: "Время димирования при удержании кнопок и при получении команды StartLevelChange (начать изменение яркости; если она не содержит времени включения).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Устанавливать максимальный уровень яркости при включении",
				Description: "Определяет устанавливать ли максимальную яркость при получении команды Включить. По умолчанию по команде Включить диммер восстанавливает последний уровень яркости. Настройка этого параметра позволяет устанавливать максимальную яркость по второй команде Включить (если уже включен) или всегда включать диммер на максимальную яркость",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Если уже включен",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Всегда",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время диммирования Баю-бай",
				Description: "Время димирования при двойном нажатии на кнопку выключения для функции Баю-бай. Данная функция работает только если нагрузка управляется одинарным нажатием или удержанием кнопок. Если включено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "в минутах",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Конечный уровень диммирования функции Баю-бай",
				Description: "Конечный уровень, до которого диммировать функции Баю-бай. Используйте 0 для полного выключения света.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включать/выключать нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ограничивать минимальный уровень яркости",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Ограничивать максимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Работать как реле: только выключен или на полную",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включаться на заданном уровне яркости",
				Description: "Эта функция работает, только если в параметре &#34;Устанавливать максимальный уровень яркости при включении&#34; выбрано &#34;Нет&#34; или &#34;Если уже включен&#34;, иначе этот параметр игнорируется и свет всегда будет включаться на 100%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Использовать предыдущий уровень яркости",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Задать уровень",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза до импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза после импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Ширина импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 20,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Длинный импульс",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Короткий импульс",
					},
				},
			},
		},
	}
}
func New011510000003() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Flush-Mountable Blind Control v1.8",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния работы",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния простоя",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Индикация незакрытой двери",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто открытие/закрытие через",
				Description: "Если не 0, автоматически открывает/закрывает жалюзи после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды закрытия",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто закрытия: Игнорирование - для открытия двери по детектору движения и закрытия по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться открыть дверь сам, что приведёт к неправильной логике работы; Открывать - для открытия при нажатии на кнопки Вкл и Выкл на пульте управления и закрытия по прошествии определённого времени. Закрытие по кнопке будет продолжать работать (если не отключено). Обратите внимение, что команда Димировать Вниз в любом случае будет включать закрытие.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Время полного закрытия",
				Description: "Время, необходимое для полного закрытия из открытого состояния. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Время полного открытия",
				Description: "Время, необходимое для полного открытия из закрытого состояния. Это значение может отличаться от значения Времени полного закрытия из-за воздействия силы гравитации. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Идентификатор блокирующего узла",
				Description: "Номер утройства, команды BASIC и BINARY Set которого будут использоваться не для открытия/закрытия, а для включение/выключения защиты, предотвращающей открытие/закрытие. Данная функция полезна в сочетании с датчиком открытия двери: при открытии двери жалюзи будут заблокированны, чтобы случайно не сламать шторки.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 232,
						Unit: "",
						Reserved: false,
						Description: "Номер узла",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "По какой команде от блокирующего узла включать защиту",
				Description: "Считать команду Выключить от блокирующего узла оповещающей о закрытии двери, и снимать защиту. Определяет по какой команде от блокирующего узла включать блокировку управления.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "по команде Включения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "пл команде Выключения",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Остановить или запустить в обратном направлении при нажатии на противоположную клавишу",
				Description: "Определяет поведение при нажатии на кнопку вниз при движении вверх и наоборот. Для того, чтобы делать Остановку при управлении со стороннего пульта, используйте Остановить по Basic",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам и Binary)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам, Binary и Basic)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Запустить в обратном направлении",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поменять местами реле открытия и зкарытия",
				Description: "Позволяет поменять местами реле закрытия и открытия, если управление жалюзи подключено к мотору неверным образом",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включать/выключать нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие по Авто открытию/закрытию",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрывать шторы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открывать шторы",
					},
				},
			},
		},
	}
}
func New011510000004() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Wall Controller v1.1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Сцены отправляются группе ассоциаций. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Сцены имеют следующее значение: Вверх = 1, Вниз = 2, Димминг Вверх = 3, Димминг вниз = 4, Окончание диминга вверх = 5, Окончание димминга вниз = 6.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включение, выключение и диммирование с помощью Basic Set",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить/выключить всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Сцены отправляются группе ассоциаций. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии. Сцены имеют следующее значение: Вверх = 11, Вниз = 12, Димминг Вверх = 13, Димминг вниз = 14, Окончание диминга вверх = 15, Окончание димминга вниз = 16.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено (не ждать двойного нажатия)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включение, выключение и диммирование с помощью Basic Set",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить/выключить всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
		},
	}
}
func New011510000005() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Wall Controller 4",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002d,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы кнопок",
				Description: "В раздельном режиме кнопка Вверх работает с группой 1, кнопка Вниз с группой 2. Нажатие - Вкл, удержание - димирование Вверх, двойное нажатие - Выкл, нажате-удержание - Вниз. В парном режиме - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой 1, двойной с группой 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 1",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID is: 1 - Вкл, 2 = Выкл, 3 = Начало Вверх, 4 = Начало Вниз, 5 = Окончание Вверх, 6 = Окончание Вниз",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы 2",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID is: 1 - Вкл, 2 = Выкл, 3 = Начало Вверх, 4 = Начало Вниз, 5 = Окончание Вверх, 6 = Окончание Вниз",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания и двойного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим подтверждения светодиода",
				Description: "Позволяет экономить заряд батарейки",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Без подтверждения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Подтвердить нажатие клавиши и доставку",
					},
				},
			},
		},
	}
}
func New011510000009() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Secure Switch (TRIAC)",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0009",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0025,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002c,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002d,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0032,
				InNIF: "false",
				Secure: true,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0059,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0077,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x008e,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение",
				Description: "Если не 0, автоматически отключает устройство после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Игнорировать начальный уровень",
				Description: "Определяет игнорировать ли начальный уровень димминга в коммандах StartLevelChange (начать изменение яркости) даже если он указан или нет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Время диммирования",
				Description: "Время димирования при нажатии на кнопки и при получении команды Set (если она не содержит времени включения). Если не 0, то диммирование будет плавным, что сбережёт лампочку дольше.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время долгого диммирования",
				Description: "Время димирования при удержании кнопок и при получении команды StartLevelChange (начать изменение яркости; если она не содержит времени включения).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Устанавливать максимальный уровень яркости при включении",
				Description: "Определяет устанавливать ли максимальную яркость при получении команды Включить. По умолчанию по команде Включить диммер восстанавливает последний уровень яркости. Настройка этого параметра позволяет устанавливать максимальную яркость по второй команде Включить (если уже включен) или всегда включать диммер на максимальную яркость",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Если уже включен",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Всегда",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время диммирования Баю-бай",
				Description: "Время димирования при двойном нажатии на кнопку выключения для функции Баю-бай. Данная функция работает только если нагрузка управляется одинарным нажатием или удержанием кнопок. Если включено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "в минутах",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Конечный уровень диммирования функции Баю-бай",
				Description: "Конечный уровень, до которого диммировать функции Баю-бай. Используйте 0 для полного выключения света.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включать/выключать нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Выключать/Выключать всё",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ограничивать минимальный уровень яркости",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Ограничивать максимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Работать как реле: только выключен или на полную",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включаться на заданном уровне яркости",
				Description: "Эта функция работает, только если в параметре &#34;Устанавливать максимальный уровень яркости при включении&#34; выбрано &#34;Нет&#34; или &#34;Если уже включен&#34;, иначе этот параметр игнорируется и свет всегда будет включаться на 100%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Использовать предыдущий уровень яркости",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Задать уровень",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Энергопотребление",
				Description: " Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 300 Вт",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 300,
						Unit: "",
						Reserved: false,
						Description: "Вт",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим Диммер/реле",
				Description: "Параметр определяет режим работы устройства: диммер или реле. Если лампа не диммируемая, то подключите к ней шунт и выберите режим реле. Требуется исключить и включить устройство заново!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Режим диммера",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Режим реле",
					},
				},
			},
		},
	}
}
func New011510000100() *Device{
	return &Device{
		Brand: "",
		Product: "Double Switch",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение первого канала через",
				Description: "Если не 0, автоматически отключает реле первого канала после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение второго канала через",
				Description: "Если не 0, автоматически отключает реле второго канала после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при получении радиокоманды выключения первого канала",
				Description: "Определяет поведение при получении радио команды выключения первого канал. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по датчику движения и отключения по прошествии определённого времени: в случае использования нескольких датчиков движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включить нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при получении радиокоманды выключения второго канала",
				Description: "Определяет поведение при получении радио команды выключения второго канал. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по датчику движения и отключения по прошествии определённого времени: в случае использования нескольких датчиков движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включить нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при нажатии вниз (для обоих каналов)",
				Description: "Определяет поведение при нажатии клавиши вниз для управления первым  и вторым каналами. Зависит от параметра 12 и 32 &#34;Включить/выключить нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Инвертировать состояние",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Включить/выключить при удержании клавиш",
				Description: "Определяет будет ли устройство включаться/выключаться при удержании кнопок",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да (только для первого канала)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Да (только для второго канала)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Да (для обоих каналов)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет, выключится",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да (только для первого канала)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Да (только для второго канала)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Да (для обоих каналов)",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включить/выключить нагрузку кнопками (первый канал)",
				Description: "Если отключено, нажатия на кнопки не включит реле первого канала, а только отправит команду группе ассоциаций Включить/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Включить/выключить нагрузку кнопками (второй канал)",
				Description: "Если отключено, нажатия на кнопки не включит реле второго канала, а только отправит команду группе ассоциаций Включить/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Энергопотребление первого канала",
				Description: "Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 1800 Ватт.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1800,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Энергопотребление второго канала",
				Description: "Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 1800 Ватт.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1800,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
		},
	}
}
func New011510000200() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Flush-Mountable Blind Control v1.8",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0025,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002d,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния работы",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния простоя",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Индикация незакрытой двери",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто открытие/закрытие через",
				Description: "Если не 0, автоматически открывает/закрывает жалюзи после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды закрытия",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто закрытия: Игнорирование - для открытия двери по детектору движения и закрытия по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться открыть дверь сам, что приведёт к неправильной логике работы; Открывать - для открытия при нажатии на кнопки Вкл и Выкл на пульте управления и закрытия по прошествии определённого времени. Закрытие по кнопке будет продолжать работать (если не отключено). Обратите внимение, что команда Димировать Вниз в любом случае будет включать закрытие.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Время полного закрытия",
				Description: "Время, необходимое для полного закрытия из открытого состояния. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Время полного открытия",
				Description: "Время, необходимое для полного открытия из закрытого состояния. Это значение может отличаться от значения Времени полного закрытия из-за воздействия силы гравитации. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Идентификатор блокирующего узла",
				Description: "Номер утройства, команды BASIC и BINARY Set которого будут использоваться не для открытия/закрытия, а для включение/выключения защиты, предотвращающей открытие/закрытие. Данная функция полезна в сочетании с датчиком открытия двери: при открытии двери жалюзи будут заблокированны, чтобы случайно не сламать шторки.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 232,
						Unit: "",
						Reserved: false,
						Description: "Номер узла",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "По какой команде от блокирующего узла включать защиту",
				Description: "Считать команду Выключить от блокирующего узла оповещающей о закрытии двери, и снимать защиту. Определяет по какой команде от блокирующего узла включать блокировку управления.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "по команде Включения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "по команде Выключения",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Остановить или запустить в обратном направлении при нажатии на противоположную клавишу",
				Description: "Определяет поведение при нажатии на кнопку вниз при движении вверх и наоборот. Для того, чтобы делать Остановку при управлении со стороннего пульта, используйте Остановить по Basic",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам и Binary)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам, Binary и Basic)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Запустить в обратном направлении",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поменять местами реле открытия и зкарытия",
				Description: "Позволяет поменять местами реле закрытия и открытия, если управление жалюзи подключено к мотору неверным образом",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включить/выключить нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправить следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие по Авто открытию/закрытию",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть шторы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открыть шторы",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Отправлять промежуточные значения уровня открытия",
				Description: "Во время движения жалюзи будет периодично отправлять уровень открытия. Если задать 10%, то при изменении уровня открытия на 10% будет отправлен отчет. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не присылать отчет во время движения",
					},
					ConfigValue{
						From: 10,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
		},
	}
}
func New011510000300() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "RCD",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "0300",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №1 (группа ассоциаций 2)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №1 (группа ассоциаций 2)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №2 (группа ассоциаций 3)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №2 (группа ассоциаций 3)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №3 (группа ассоциаций 4)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №3 (группа ассоциаций 4)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №4 (группа ассоциаций 5)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №4 (группа ассоциаций 5)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №5 (группа ассоциаций 6)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №5 (группа ассоциаций 6)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №6 (группа ассоциаций 7)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №6 (группа ассоциаций 7)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Действия для группы кнопок №7 (группа ассоциаций 8)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки группы №7 (группа ассоциаций 8)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия для кнопок сцены №1 (группа ассоциаций 9)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки сцены №1 (группа ассоциаций 9)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия для кнопок сцены №2 (группа ассоциаций 10)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки сцены №2 (группа ассоциаций 10)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия для кнопок сцены №3 (группа ассоциаций 11)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки сцены №3 (группа ассоциаций 11)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Действия для кнопок Включить/Выключить Всё (группа ассоциаций 12)",
				Description: "Параметр определяет какие команды будут отправляться при нажатии на кнопки Включить/Выключить Всё (группа ассоциаций 12)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
		},
	}
}
func New011510001001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Switch Insert S500",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "1001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по датчику движения и отключения по прошествии определённого времени: в случае использования нескольких датчиков движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включить нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включить/выключить при удержании клавиш",
				Description: "Определяет будет ли устройство включаться/выключаться при удержании кнопок",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет, выключится",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включить/выключить нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не включит реле, а только отправит команду группе ассоциаций Включить/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды Включить/Выключить всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра 12 и 32 &#34;Включить/выключить нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто отключения.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Инвертировать состояние",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Энергопотребление",
				Description: "Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 1800 Ватт.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1800,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
		},
	}
}
func New011510001003() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Blind Control Insert S500",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1000",
		ProductID: "1003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005e,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0025,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002d,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния работы",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния простоя",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Индикация открытых жалюзи",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто открытие/закрытие через",
				Description: "Если не 0, автоматически открывает/закрывает жалюзи после определённого пользователем времени. Закрытие или открытие выбирается в параметре № 17.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды закрытия",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто закрытия: Игнорирование - для открытия двери по детектору движения и закрытия по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться открыть дверь сам, что приведёт к неправильной логике работы; Открывать - для открытия при нажатии на кнопки Вкл и Выкл на пульте управления и закрытия по прошествии определённого времени. Закрытие по кнопке будет продолжать работать (если не отключено). Обратите внимение, что команда Димировать Вниз в любом случае будет включать закрытие.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при нажатии вниз",
				Description: "Определяет поведение при нажатии клавиши вниз. Зависит от параметра &#34;Включать/выключать нагрузку кнопками&#34;. Если не &#34;Нет&#34;, данный параметр будет применён к выбранному упомянутым параметром действию. Может использоваться совместно с функцией авто открытия/закрытия.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открыть, если закрыто, иначе закрыть",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Открыть",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Время полного закрытия",
				Description: "Время, необходимое для полного закрытия из открытого состояния. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "миллисекунд",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Время полного открытия",
				Description: "Время, необходимое для полного открытия из закрытого состояния. Это значение может отличаться от значения Времени полного закрытия из-за воздействия силы гравитации. Используется для оценки текущего положения. Обратите внимание, в режиме Держать включеным возвращаемые отчёты будут всегда или Закрыто или Открыто, тогда как все значения команд Basic и Multilevel Set (1-99, 255) будут работать на Открытия, кроме команды 0, которая будет Закрывать.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Постоянно держать включеным",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "миллисекунд",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Идентификатор блокирующего узла",
				Description: "Номер уcтройства, команды BASIC и BINARY Set которого будут использоваться не для открытия/закрытия, а для включение/выключения защиты, предотвращающей открытие/закрытие. Данная функция полезна в сочетании с датчиком открытия двери: при открытии двери жалюзи будут заблокированны, чтобы случайно не сламать шторки.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 232,
						Unit: "",
						Reserved: false,
						Description: "Номер узла",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "По какой команде от блокирующего узла включать защиту",
				Description: "Считать команду Выключить от блокирующего узла оповещающей о закрытии двери, и снимать защиту. Определяет по какой команде от блокирующего узла включать блокировку управления.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "по команде Включения",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "по команде Выключения",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Остановить или запустить в обратном направлении при нажатии на противоположную клавишу",
				Description: "Определяет поведение при нажатии на кнопку вниз при движении вверх и наоборот. Для того, чтобы делать Остановку при управлении со стороннего пульта, используйте Остановить по Basic",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам и Binary)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Остановить (по кнопкам, Binary и Basic)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Запустить в обратном направлении",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Поменять местами реле открытия и зкарытия",
				Description: "Позволяет поменять местами реле закрытия и открытия, если при подключении устройства управления жалюзи к мотору поменяли местами контакты управления ВВЕРХ и ВНИЗ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Включить/выключить нагрузку кнопками",
				Description: "Если отключено, нажатия на кнопки не будут включать реле, а только отправлят команды группе ассоциаций Включит/Выключить. В данном режиме кнопки не связаны с реле. Они могут быть использованы отдельно: кнопки для управления удалённой нагрузкой, реле будет управляться только по радио.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Одинарным нажатием и удержанием",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Двойным нажатием и нажатием-удержанием",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Действия при одинарном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляюся при одинарном нажатии или удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действия при двойном нажатии или удержании клавиши",
				Description: "Определяет вид команд, которые отправляются при двойном нажатии или нажатии-удержании кнопок. Команды Basic и Активация сцен отправляются группе ассоциаций. Используйте Scene Controller Conf для задания номера сцены для Scene Activation. Команда Включить/Выключить всё отправляется на широковещательный адрес (всем). Если не отключено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажатии",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включить/Выключить и Диммировать (отправить Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включить/Выключить (отправить Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить всё/Выключить всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправить Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправить преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправить глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправить следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие по Авто открытию/закрытию",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Закрыть шторы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Открыть шторы",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 20,
				Name: "Отправлять промежуточные значения уровня открытия",
				Description: "Во время движения жалюзи будет периодично отправлять уровень открытия. Если задать 10%, то при изменении уровня открытия на 10% будет отправлен отчет. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не присылать отчет во время движения",
					},
					ConfigValue{
						From: 5,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
		},
	}
}
func New011511000001() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Plug-in Switch",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1100",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
		},
	}
}
func New011511000002() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "Dimmer Plug v1.0",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0115",
		ProductType: "1100",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "		Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Игнорировать начальный уровень",
				Description: "Определяет игнорировать ли начальный уровень димминга в коммандах StartLevelChange (начать изменение яркости) даже если он указан или нет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Время диммирования",
				Description: "Время димирования при нажатии на кнопку и при получении команды Set (если она не содержит времени включения). Если не 0, то диммирование будет плавным, что сбережёт лампочку дольше.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время долгого диммирования",
				Description: "Время димирования при удержании кнопки и при получении команды StartLevelChange (начать изменение яркости; если она не содержит времени включения).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Устанавливать максимальный уровень яркости при включении",
				Description: " Определяет устанавливать ли максимальную яркость при получении команды Включить. По умолчанию по команде /n	Включить диммер восстанавливает последний уровень яркости. Настройка этого параметра позволяет устанавливать м/n	аксимальную яркость по второй команде Включить (если уже включен) или всегда включать диммер на максимальную яркость",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last dim level",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "maximum dim level when already turned on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Always maximum dim level",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время диммирования Баю-бай",
				Description: "		Время димирования при двойном нажатии на кнопку выключения для функции Баю-бай. Данная функция работает только если нагрузка управляется одинарным нажатием или удержанием кнопки. Если включено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажати /n		",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "в минутах",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Конечный уровень диммирования функции Баю-бай",
				Description: "Конечный уровень, до которого диммировать функции Баю-бай. Используйте 0 для полного выключения света.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ограничивать минимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Ограничивать максимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Работать как реле: только выключен или на полную",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включаться на заданном уровне яркости",
				Description: "Эта функция работает, только если в параметре №7 выбрано &#34;Нет&#34; или &#34;Если уже включен&#34;, иначе этот параметр игнорируется и свет всегда будет включаться на 100%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Использовать предыдущий уровень яркости",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Задать уровень %",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза до импульса",
				Description: "	Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза после импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Ширина импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 20,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Длинный импульс",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Короткий импульс",
					},
				},
			},
		},
	}
}
func New011600010001() *Device{
	return &Device{
		Brand: "Chromagic",
		Product: "Z-Wave Motion Detector - 300 Series",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0116",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Basic Set level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enabling/Disabling Sensor Detecting Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Sensitivity Level (PIR sensor only)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "Re-trigger Interval Setting (PIR sensor only)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 3600,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Lux Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 5,
				Name: "On-Off Duration",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 3600,
						Unit: "s",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New011600020001() *Device{
	return &Device{
		Brand: "Chromagic",
		Product: "Z-Wave Magnetic Detector - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0116",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011600100001() *Device{
	return &Device{
		Brand: "Chromagic",
		Product: "Z-Wave Remote Botton (EU) - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0116",
		ProductType: "0010",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011600110001() *Device{
	return &Device{
		Brand: "Chromagic",
		Product: "Z-Wave In Wall Switch (EU) - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0116",
		ProductType: "0011",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011600110002() *Device{
	return &Device{
		Brand: "Chromagic",
		Product: "Z-Wave In Wall Switch - 300 Series",
		Description: "/n            /n          ",

		ManufacturerID: "0116",
		ProductType: "0011",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011700010080() *Device{
	return &Device{
		Brand: "Abilia Andromeda Socket",
		Product: "On/Off Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0117",
		ProductType: "0001",
		ProductID: "0080",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011800030002() *Device{
	return &Device{
		Brand: "TKBHOME",
		Product: "Switch ON/OFF",
		Description: "/n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011800030008() *Device{
	return &Device{
		Brand: "TKBHOME",
		Product: "Switch Dimmer",
		Description: "/n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0003",
		ProductID: "0008",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "On/Off Knob",
				Description: "Turn on or off the attached load.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The blue indicator will turn on and the load plugged into the module will turn off. ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Setting is changed.",
					},
				},
			},
		},
	}
}
func New011800040002() *Device{
	return &Device{
		Brand: "TKBHOME",
		Product: "Meter Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0004",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Change the state of indicator light",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indicator will be &#34;On&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicator will be &#34;Off&#34;",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Memory function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "memory function is not open",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "memory function is open",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "s",
						Reserved: false,
						Description: "example: 5*720s = 3600s = 1 hour",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "min",
						Reserved: false,
						Description: "example: 6*10min = 1 hour",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 3000,
				Name: "Threshold of Watt for Load Caution",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 3000,
						Unit: "Watt",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold for KWH for Load Caution",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "Kwh",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New011801010103() *Device{
	return &Device{
		Brand: "",
		Product: "TZ68",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0101",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED- Behavior",
				Description: "defines the behavior of the blue LED ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "blue indicates off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blue indicates on",
					},
				},
			},
		},
	}
}
func New011801021020() *Device{
	return &Device{
		Brand: "TKBHOME",
		Product: "TZ66D",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0102",
		ProductID: "1020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Start Level Bit",
				Description: "defines if the start level bit shall be ignores when transmitting a dim command to a dimmer",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ignore",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "dont ignore",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Suspend Group 4",
				Description: "defines if the Association group 4 shall be active or not",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Night Light",
				Description: "Activates Night Light",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED blinks on activity",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Night Light active",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "Inverts Switching (on is upper part)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "dont invert",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "invert",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Transmission Indication",
				Description: "defines the behavior of the LED when transmitting data",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no flicker",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "flicker all time of data transmission",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "flicker for one second only",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 3",
				Description: "The device can operate shade control devices via Group 3 if this parameter is activated",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 2",
				Description: "The device can operate shade control devices via Group 2  if this parameter is activated",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Poll Group 2 Interval",
				Description: "defines the poll interfal for group 2 if polling is activated ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "2",
						Reserved: false,
						Description: " Interval",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Poll Group 2",
				Description: "defines if Group 2 shall be polled or not",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "dont poll",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "poll",
					},
				},
			},
		},
	}
}
func New011802020611() *Device{
	return &Device{
		Brand: "",
		Product: "TZ67",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0202",
		ProductID: "0611",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED-Behavior",
				Description: "defines the behavior of the blue LED",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "blue indicates off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blue indicates on",
					},
				},
			},
		},
	}
}
func New011808080808() *Device{
	return &Device{
		Brand: "",
		Product: "TZ65S",
		Description: "/n            /n          ",

		ManufacturerID: "0118",
		ProductType: "0808",
		ProductID: "0808",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Start Level Bit",
				Description: "/ndefines if the start level bit shall be ignores when transmitting a dim command to a dimmer/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ignore",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "dont ignore",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Night Light",
				Description: "Activates Night Light",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED blinks on activity",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Night Light active",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "Inverts Switching (on is upper part)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "dont invert",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "invert",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Transmission Indication",
				Description: "/ndefines the behavior of the LED when transmitting data/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no flicker",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "flicker all time of data transmission",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "flicker for one second only",
					},
				},
			},
		},
	}
}
func New011a01010101() *Device{
	return &Device{
		Brand: "ENERWAVE",
		Product: "Z-Wave On/Off Switch",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0101",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure LED light state",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED state is contrary with relay state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED state is as same as relay state",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure button toggle",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The load connected to ZW15S will be/nturned on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The load connected to ZW15S can be turned off",
					},
				},
			},
		},
	}
}
func New011a01010102() *Device{
	return &Device{
		Brand: "ENERWAVE",
		Product: "Plug-in Appliance Module",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0101",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure LED State",
				Description: "By default setting, the led state is as same as relay state. For example, if relay is drived, led will be turned on. If configuration variable value &#34;1&#34; is set to 1 (by default it is &#34;0&#34;) led state will be contrary with relay state./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED state is as same as relay state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED state is contrary with relay state",
					},
				},
			},
		},
	}
}
func New011a01010103() *Device{
	return &Device{
		Brand: "ENERWAVE",
		Product: "Z-Wave Duplex Receptacle ",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0101",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011a01010603() *Device{
	return &Device{
		Brand: "ENERWAVE",
		Product: "Smart Lighting Control Module(RSM2)",
		Description: "/n            /n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0101",
		ProductID: "0603",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Unsolicited Report Configuration",
				Description: "By default setting, ZWN-RSM2 will send unsolicited status report to Master controller (Node ID 0x01) when switch toggled due to some controllers designed as gateway.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 232,
						Unit: "",
						Reserved: false,
						Description: "Other controller nodeID",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Send broadcast",
					},
				},
			},
		},
	}
}
func New011a01020201() *Device{
	return &Device{
		Brand: "ENERWAVE ",
		Product: "Z-Wave Dimmer Switch",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0102",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure LED light state",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED state is contrary with relay state",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED state is as same as relay state",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure button toggle",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The load connected to ZW15S will be/nturned on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The load connected to ZW15S can be turned off",
					},
				},
			},
		},
	}
}
func New011a01020202() *Device{
	return &Device{
		Brand: "ENERWAVE",
		Product: "Plug-in Lamp Dimming Module",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0102",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011a01110101() *Device{
	return &Device{
		Brand: "Enerwave",
		Product: "PLUG-IN SMART METER APPLIANCE MODULE",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0111",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Configuration",
				Description: "synchronization of load/npower and LED indicator",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED on",
					},
				},
			},
		},
	}
}
func New011a01110105() *Device{
	return &Device{
		Brand: "Enerwave",
		Product: "IN-Wall Smart Meter TR Duplex Receptacle",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0111",
		ProductID: "0105",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Synchronization",
				Description: "synchronization of outlet power and LED indicator",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED on",
					},
				},
			},
		},
	}
}
func New011a01110201() *Device{
	return &Device{
		Brand: "Enerwave",
		Product: "In-wall Smart Meter Dimmer Switch",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0111",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "synchronization of load power and LED indicator",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED on",
					},
				},
			},
		},
	}
}
func New011a01110202() *Device{
	return &Device{
		Brand: "Enerwave",
		Product: " Plug-in Smart Meter Dimmer Module",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0111",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "synchronization of outlet power and LED indicator",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Power on, LED on",
					},
				},
			},
		},
	}
}
func New011a01110605() *Device{
	return &Device{
		Brand: "Enerwave",
		Product: "Smart Single Relay Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "011a",
		ProductType: "0111",
		ProductID: "0605",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0027,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011f00010001() *Device{
	return &Device{
		Brand: "Ingersoll Rand Z-Wave PIR Motion Sensor",
		Product: "Ecolink Z-Wave PIR Motion Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "011f",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011f00010002() *Device{
	return &Device{
		Brand: "Ingersoll Rand Z-Wave Door/Window Sensor",
		Product: "Ecolink Z-Wave Door/Window Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "011f",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New011f00010003() *Device{
	return &Device{
		Brand: "Ingersoll Rand Z-Wave Garage Door Sensor",
		Product: "Ecolink Z-Wave Garage Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "011f",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012100010001() *Device{
	return &Device{
		Brand: "IBR-ZWAVE",
		Product: "I-Bridge Z-Wave Controller",
		Description: "/n            /n          ",

		ManufacturerID: "0121",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012200010001() *Device{
	return &Device{
		Brand: "Miyakawa Electric Works LTD",
		Product: "CT type electric power measuring instrument",
		Description: "/n            /n          ",

		ManufacturerID: "0122",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012300000000() *Device{
	return &Device{
		Brand: "BUFFALO",
		Product: "HA Dongle",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012300010000() *Device{
	return &Device{
		Brand: "",
		Product: "Smart CONNECT",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012300010001() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-CONNECT調光器Z-Waveタイプ",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power On Illuminace Level",
				Description: "Initial illuminance value when ZW-LC powers on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Dimming Level",
					},
				},
			},
		},
	}
}
func New012300020000() *Device{
	return &Device{
		Brand: "Iwatsu",
		Product: "Smart-CONNECT 灯具内蔵型調光制御ユニット",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0002",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Illuminance",
				Description: "The parameter defines the initial illuminance value when the device is powered on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the initial illuminance value.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Dimming Duration",
				Description: "The parameter defines the dimming duration in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "sec",
						Reserved: false,
						Description: "Define the dimming duration.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "PWM Mode",
				Description: "The parameter defines if the PWM is in normal or inverted mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Inverted mode",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Tag ID",
				Description: "The parameter defines the Tag ID.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the Tag ID.",
					},
				},
			},
		},
	}
}
func New012301020102() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-CONNECT NE-4CT-2P",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0102",
		ProductID: "0102",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012301030103() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-CONNECT NE-4CT",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0103",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012301040104() *Device{
	return &Device{
		Brand: "",
		Product: "CTユニット",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0104",
		ProductID: "0104",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New012303010001() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-CONNECT人感センサZ-Waveタイプ",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0301",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012306010001() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-CONNECT照度センサZ-Waveタイプ",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "0601",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0091,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012380000000() *Device{
	return &Device{
		Brand: "",
		Product: "Smart-BRIDGE",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "8000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0091,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012380000001() *Device{
	return &Device{
		Brand: "",
		Product: "ゲートウェイユニット",
		Description: "/n            /n          ",

		ManufacturerID: "0123",
		ProductType: "8000",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0091,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012600010006() *Device{
	return &Device{
		Brand: "",
		Product: "Jupiter Hub",
		Description: "/n            /n          ",

		ManufacturerID: "0126",
		ProductType: "0001",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012800000000() *Device{
	return &Device{
		Brand: "Eneco Meter Adapter",
		Product: "ED2.0 Meter Adapter",
		Description: "/n            /n          ",

		ManufacturerID: "0128",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x003c,
			},
			&CommandClass{
				ID: 0x003d,
			},
			&CommandClass{
				ID: 0x003e,
			},
			&CommandClass{
				ID: 0x0056,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 0,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Gas Metering",
				Description: "Enable and disable gas metering",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "DISABLED: the gas metering is disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ENABLED: the gas metering is enabled",
					},
				},
			},
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 400,
				Name: "Gas Meter resolution",
				Description: "The resolution of the analog gas meter (revolutions per m³) in/nunsigned Q14.2 notation.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Electricity metering",
				Description: "Enable and disable Electricity metering",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "DISABLED: the electricity metering is disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ENABLED: the electricity metering is enabled",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 400,
				Name: "Electricity meter resolution",
				Description: "The resolution of the analog electricity meter (revolutions per/nkWh) in unsigned Q14.2 notation.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New012801280000() *Device{
	return &Device{
		Brand: "Eneco Display",
		Product: "ED2.0 Display",
		Description: "/n            /n          ",

		ManufacturerID: "0128",
		ProductType: "0128",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New012900010000() *Device{
	return &Device{
		Brand: "Yale",
		Product: "Yale Real Living Cap-Touch Lever Lock",
		Description: "/n            /n          ",

		ManufacturerID: "0129",
		ProductType: "0001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004c,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x004e,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008a,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008b,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Audio Mode",
				Description: "3-level control",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Silent",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Low",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "High",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Auto Relock",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "auto relock is OFF",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "auto relock is ON",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Re-lock Time",
				Description: "seconds; after successful code entry and/nunit unlocks, it will automatically re-lock after/nspecified time",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Wrong Code Entry Limit",
				Description: "The number of invalid code entries lock will/naccept before sending TAMPER Alarm. When/nnumber of wrong code entries is exceeded,/nlock will disable keypad for the time specified/nby Shutdown Time parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Language",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "English",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Spanish",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "French",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Shutdown Time",
				Description: "number of seconds unit will be inoperable/nafter number of wrong code entries is exceeded",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operating Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Vacation Mode - all user codes disabled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Privacy Mode - all user codes disabled and RF Lock/Unlock disabled",
					},
				},
			},
		},
	}
}
func New012900020000() *Device{
	return &Device{
		Brand: "Yale",
		Product: "Yale Real Living Cap-Touch Deadbolt",
		Description: "/n            /n          ",

		ManufacturerID: "0129",
		ProductType: "0002",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0080,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x004c,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0075,
				InNIF: "false",
				Secure: true,
				Version: "2",
			},
			&CommandClass{
				ID: 0x004e,
				InNIF: "false",
				Secure: true,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008a,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x008b,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Audio Mode",
				Description: "3-level control",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Silent",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Low",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "High",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Auto Relock",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "auto relock is OFF",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "auto relock is ON",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Re-lock Time",
				Description: "seconds; after successful code entry and/nunit unlocks, it will automatically re-lock after/nspecified time",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Wrong Code Entry Limit",
				Description: "The number of invalid code entries lock will/naccept before sending TAMPER Alarm. When/nnumber of wrong code entries is exceeded,/nlock will disable keypad for the time specified/nby Shutdown Time parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Language",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "English",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Spanish",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "French",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Shutdown Time",
				Description: "number of seconds unit will be inoperable/nafter number of wrong code entries is exceeded",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operating Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal Mode",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Vacation Mode - all user codes disabled",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Privacy Mode - all user codes disabled and RF Lock/Unlock disabled",
					},
				},
			},
		},
	}
}
func New013000010001() *Device{
	return &Device{
		Brand: "Quby",
		Product: "QEDII",
		Description: "/n            /n          ",

		ManufacturerID: "0130",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x003e,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013000020000() *Device{
	return &Device{
		Brand: "Quby",
		Product: "Energy Meter Reader",
		Description: "/n            /n          ",

		ManufacturerID: "0130",
		ProductType: "0002",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x003c,
			},
			&CommandClass{
				ID: 0x003d,
				Version: "2",
			},
			&CommandClass{
				ID: 0x003e,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Analog gas/heat port mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Gas mode is enabled.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Heat mode is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 400,
				Name: "Analog gas/heat port resolution ",
				Description: "(pulses per cubic meter / pulses per MJ; in Q14.2 nota-tion)",
				Values: []ConfigValue{
					ConfigValue{
						From: 120,
						To: 40000,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Analog electricity port mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Electricity import is enabled.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Electricity export is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 400,
				Name: "Analog electricity port resolution ",
				Description: "(pulses per kWh; in Q14.2 notation)",
				Values: []ConfigValue{
					ConfigValue{
						From: 120,
						To: 40000,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter.",
					},
				},
			},
			ConfigParam{
				ID: 255,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Restart device",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Restart entire device",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Restart metering chip",
					},
				},
			},
		},
	}
}
func New013100010001() *Device{
	return &Device{
		Brand: "Zipato",
		Product: "Zipabox",
		Description: "/n            /n          ",

		ManufacturerID: "0131",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013100010002() *Device{
	return &Device{
		Brand: "Zipato",
		Product: "Zipabox",
		Description: "/n            /n          ",

		ManufacturerID: "0131",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013100010003() *Device{
	return &Device{
		Brand: "Zipato",
		Product: "Zipabox",
		Description: "/n            /n          ",

		ManufacturerID: "0131",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013100020002() *Device{
	return &Device{
		Brand: "Zipato",
		Product: "Zipato RGBW bulb",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0131",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0033,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Color temperature",
				Description: "Configuration option 1 is used to adjust color temperature. Values/nrange from 0 to 100 where 0 means full cold white and 100 means/nfull warm white.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Color temperature",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 16,
				Name: "Shock sensor sensitivity",
				Description: "Configuration option 2 is used to adjust shock sensor sensitivity./nValues range from 0 to 31 where 0 means minimum sensitivity and/n31 means maximum sensitivity.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Shock sensor sensitivity",
					},
				},
			},
		},
	}
}
func New013730010002() *Device{
	return &Device{
		Brand: "Followgood",
		Product: "Binary Power Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0137",
		ProductType: "3001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013800010002() *Device{
	return &Device{
		Brand: "First Alert",
		Product: "Smoke and Carbon and Monoxide Alarm",
		Description: "/n            /n          ",

		ManufacturerID: "0138",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "when set to 1 causes the device to send double/nalarm messages",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New013b10001828() *Device{
	return &Device{
		Brand: "HXS",
		Product: "Android Home Station",
		Description: "/n            /n            /n          ",

		ManufacturerID: "013b",
		ProductType: "1000",
		ProductID: "1828",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0028,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013c00000000() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Z-Wave Dongle",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013c00010001() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Energy Plug In Switch PAN11-1",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Период отчета о мощности (Вт)",
				Description: "Если установлено 1 час (значение = 720), то PAN11 будет отправлять отчеты о энергопотреблении раз в 1 час. Значение 1 = 5 секунд.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "720 * 5с = 3600с = 1 час",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "Период отчета о энергопотреблении (КВт*Ч)",
				Description: "Если установлено 1 час (значение = 6), то PAN11 будет отправлять отчет о суммарном энергопотреблении за весь период использования (КВт*Ч) раз в 1 час. Значение 1 = 10 минут.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "6 * 10мин = 1 час",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 3000,
				Name: "Отчет при превышении мощности (Вт)",
				Description: "Если мощность превысит указанное значение, на контроллер отправится команда Alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 3000,
						Unit: "Watt",
						Reserved: false,
						Description: "Мощность (Вт)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Отчет при превышении энергопотребления (КВт*Ч)",
				Description: "Если суммарное энергопотребление за весь период использования (КВт*Ч) превысит указанное значение, на контроллер отправится команда Alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "KWh",
						Reserved: false,
						Description: "Энергопотребление (КВт*Ч)",
					},
				},
			},
		},
	}
}
func New013c00010003() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In-Wall Dual relay(1 way) Switch Module",
		Description: "/n            /n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0032,
			},
			&CommandClass{
				ID: 0x0060,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "W meter report period",
				Description: "If the setting is configured for 1hour (set value =720), the device will report its instant power consumption every 1 hour to Z-Wave Controller. Unit: 5 seconds",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "*5",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH meter report period",
				Description: "If the setting is configured for 1hour (set value =720), the device will report its   power consumption in KWh every 1 hour to Z-Wave Controller. Unit: 5 seconds",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "*5 ",
						Reserved: false,
						Description: "seconds",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Selected end point",
				Description: "defines the relays selected",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Relay 1 and Relay 2",
					},
					ConfigValue{
						From: 2,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Relay 1  ",
					},
					ConfigValue{
						From: 3,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Relay 2",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Edge or Pulse mode or Edge-Togle mode",
				Description: "defines the operating mode of the externally connected switch",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Edge Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Edge/Toggle Mode",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 1500,
				Name: "Threshold of Watt for Load Caution",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1500,
						Unit: "W",
						Reserved: false,
						Description: "W",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWH for Load Caution",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "kWh",
						Reserved: false,
						Description: "kWh",
					},
				},
			},
		},
	}
}
func New013c00010004() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In Wall Dual Relay (1 Way) Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Selected end point",
				Description: "defines the relays selected",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Relay 1 and Relay 2",
					},
					ConfigValue{
						From: 2,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Relay 1",
					},
					ConfigValue{
						From: 3,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Relay 2",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Edge or Pulse mode or Edge-Togle mode",
				Description: "/ndefines the operating mode of the externally connected switch/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Edge Mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Toggle Mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Edge/Toggle Mode",
					},
				},
			},
		},
	}
}
func New013c00010006() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In-Wall Roller Shutter Controller PAN08",
		Description: "/n            /n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "instant power consumption report period",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "5s",
						Reserved: false,
						Description: "5*720s=3600s=1 hour",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "accumulated power consumption",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "10min",
						Reserved: false,
						Description: "6*10min= 1 hour",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 1100,
				Name: "Threshol d of Watt for Load Caution",
				Description: "exceeding the value sends a watt meter report command",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 1100,
						Unit: "1 W",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshol d of KWH for Load Caution",
				Description: "exceeding the value sends a KWh meter report command",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "1 KWh",
						Reserved: false,
						Description: "",
					},
				},
			},
		},
	}
}
func New013c00010010() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In Wall Single relay(1 way) switch module ",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0010",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Edge or Pulse mode or Edge-Toggle mode",
				Description: "Select Edge or/nPulse/nmode or/nEdge-Tog/ngle mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Edge mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2：Pulse mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3：Edge-Toggle/nmode",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch state mode",
				Description: "Select switch state mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Switch Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Last Switch/nState",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : Switch On",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Manual On/Off mode",
				Description: "Enable/disable Manual On/Off mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0：Disable/nmanual On/Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Enable/nmanual On/Off",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indication mode",
				Description: "Select LED indication mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Show switch/nstate",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2：Show night/nmode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 : One flash/nmode",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Set Auto off timer.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0：Disable auto/noff function",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Select time interval for auto off function.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF Off command mode",
				Description: "Select RF Off command mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0：Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2：Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3：Switch on",
					},
				},
			},
		},
	}
}
func New013c00010011() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Energy Plug In Switch",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0011",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0032,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "If the setting is configured for 1hour (set value =720), the PAN11 will report its/ninstant power consumption every 1 hour to Group1 node. The maximum interval/nto report its instant power consumption is 45 hours (5s*32767/3600=45hr).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x5sec",
						Reserved: false,
						Description: "Define the time interval to send a watt meter report.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "If the setting is configured for 1hour (set value =6), the PAN11 will report its Accumulated Power Consumption (KW/h) every 1 hour to Group1 node. The/nmaximum interval to report its Accumulated Power Consumption (KW/h) is 227.55/ndays (10min*32767/1440=227.55 days).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x10min",
						Reserved: false,
						Description: "Define the time interval for the report.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 1300,
				Name: "Threshold of current for Load caution",
				Description: "This is a warning when the current of load over the preset threshold value, if the/nsetting value is 1300, when the load current of Relay1 over this value, PAN11/nwill send current meter report to warn the Group1 node, the Range of the setting/nvalue is from 10 to 1300,and the default value is 1300./n1300*0.01A = 13A",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 1300,
						Unit: "x0.01A",
						Reserved: false,
						Description: "Define the value of the treshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWh for Load caution",
				Description: "This is a warning when the KWh of load over the preset threshold value, If the/nsetting value is 10000, when the Accumulated Power Consumption of Relay1 over/nthis value, PAN11 will send KWH meter report to warn the Group1 node,/nminimum value is 1KWh and default value is 10000 kWh.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "KWh",
						Reserved: false,
						Description: "Define the value of the treshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Restore switch state mode",
				Description: "Whenever the AC power return from lost, PAN11 will restore the switch state which/ncould be SWITCH OFF、LAST SWITCH STATE、SWITCH ON. The default setting/nis LAST SWITCH STATE.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Last switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode of Switch Off function",
				Description: "When the mode of switch On/Off is set to 0, any command of switch off will be/ndisabled and the On/Off function of include button will be disabled. The default/nsetting is enable mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indication mode",
				Description: "Show Switch State：When switch is on, LED is on. When switch is off, LED is/noff. The default setting is Show Switch State./n/nShow Night mode：When switch is on, LED is off. When switch is off, LED is/non.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Show switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Show night mode",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Whenever PAN11 switches to on, the auto off timer begin to count down. After the/ntimer decrease to zero, it will switch to off automatically. However if Auto off timer/nis set as 0, the auto off function will be disabled. The default setting is 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto off/nfunction",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define the time interval for auto off.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "Whenever a switch off command, BASIC_SET 、BINARY_SWITCH_SET 、/nSWITCH_ALL_OFF, is received, it could be interpreted as 4 variety of commands./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
		},
	}
}
func New013c00010012() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In Wall Dual relay(1 way) switchmodule",
		Description: "/n            /n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0012",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "If the setting is configured for 1hour (set value =720), the PAN04 will report its instant power consumption every 1 hour to the node of correspond Group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x5sec",
						Reserved: false,
						Description: "Set time interval for device to send power consumption report, e.g. 720*5s=3600s=1/n",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "If the setting is configured for 1hour (set value =6), the PAN04 will report its/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x10min",
						Reserved: false,
						Description: "Set time interval for device to send accumulated power consumtion report, e.g. 6*10min= 1 hour.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Selected Relay",
				Description: "If Controller not using Multi_Channel command class to access the relay of/nPAN04, you may configure the select value to react the Basic Command/nClass, Binary Switch Command Class or Meter Command Class V3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Relay1",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2：Relay2",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3：Relay1 &amp;/nRelay2",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Edge or Pulse mode or Edge-Toggle mode",
				Description: "Manual switch S1 and S2 can set to Edge mode or Pulse mode or Edge-Toggle/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1：Edge mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2：Pulse mode",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3：Edge-Toggle/nmode",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 750,
				Name: "Threshold of current for Load Caution",
				Description: "This is a warning when the current of load over the preset threshold value, if the/nsetting value is 750, when the load current of Relay1 or Relay2 over this value,/nPAN04 will send current meter report to the node of correspond Group, the/nRange of the setting value is from 10 to 750, and the default value is 750.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 750,
						Unit: "x0.01A",
						Reserved: false,
						Description: "Define treshold, e.g. 750*0.01A = 7.5A.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWH for Load Caution",
				Description: "This is a warning when the KWh of load over the preset threshold value, If the/nsetting value is 10000, when the Accumulated Power Consumption of Relay1 or/nRelay2 over this value, PAN04 will send KWh Meter Report command to the/nnode of correspond Group, minimum value is 1KWh and default value is 10000",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "1KWh",
						Reserved: false,
						Description: "Define treshold.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Restore switch state mode",
				Description: "Restores the switch state setting in case the device was disconnected from the power source.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Last switch/nstate",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : Switch on",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Whenever the device switches to on, the auto off timer begin to count down. After the timer decrease to zero, it will switch off automatically. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Disable auto/noff function",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define time interval for auto off function.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "Whenever a switch off command, BASIC_SET 、BINARY_SWITCH_SET 、/nSWITCH_ALL_OFF, is received, it could be interpreted as 4 kinds of/ncommands.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 : Switch on",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Existence of Endpoint 3",
				Description: "Multi-Channel Command is a good way to control relay1 and relay2 of PAN04/nindividually. The endpoint3 of PAN04 is related to both relay1 and relay2. In/nsome condition it becomes redundant in Multi-Channel Command Class.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Endpoint3 exist",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : No Endpoint3",
					},
				},
			},
		},
	}
}
func New013c00010013() *Device{
	return &Device{
		Brand: "Philio",
		Product: "In Wall Dual relay(1 way) switch module",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0013",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Relay selection",
				Description: "Select relay",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Selects relay 1.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Selects relay 2.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Selects both relays.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode selection",
				Description: "Select mode",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Selects edge mode.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Selects pulse mode.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Selects edge-toggle mode.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch state mode",
				Description: "Restore switch/nstate mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Last switch/nstate",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : Switch on",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Sets auto off timer.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Disable auto off/nfunction",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec.",
						Reserved: false,
						Description: "Sets time interval for auto off.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "Select RF off command mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3 : Switch on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Existence of Endpoint3",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 : No Endpoint3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 : Endpoint3 exist",
					},
				},
			},
		},
	}
}
func New013c00010015() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Roller shutter controller",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0015",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "Set report period./n5*720s=3600s=1 hour/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x5 sec",
						Reserved: false,
						Description: "Set time interval of watt meter report period.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "Set report period./n6*10min= 1 hour",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x10 min",
						Reserved: false,
						Description: "Set time interval of KWH meter report period.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 500,
				Name: "Threshold of current for Load caution",
				Description: "Define treshold.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 500,
						Unit: "x0.01A",
						Reserved: false,
						Description: "Set value of treshold warning.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWh for Load caution",
				Description: "Define treshold.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "x1KWh",
						Reserved: false,
						Description: "Set value of treshold warning.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "External switch type",
				Description: "Choose external switch type./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1: One Push button",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2:Two Push button",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Level report mode",
				Description: "Select level report mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1:Report destination/nlevel in 5s",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2:Report 10 percent/nlevel while/nrunning",
					},
				},
			},
		},
	}
}
func New013c00010028() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Energy Plug In Switch",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0028",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0027,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0032,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0075,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "720*5s=3600s=1 hour",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x5sec",
						Reserved: false,
						Description: "Define a time interval. ",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: "6*10min=1 hour",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x10min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 1300,
				Name: "Threshold of current for Load caution",
				Description: "1300*0.01A = 13A",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 1300,
						Unit: "x0,01A",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWh for Load caution",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "KWh",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Restore switch state mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Last switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode of Switch Off function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indication mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Show switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Show night mode",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto off function",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define an auto off interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Status Report mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
		},
	}
}
func New013c00010038() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Energy Plug In Switch",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0001",
		ProductID: "0038",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch Status Report mode",
				Description: "Whenever the status of switches changes, it will send a Binary Switch report to the/ngroup1 node.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Restore switch state mode",
				Description: "Whenever the AC power return from lost, PAN15 will restore the switch state which/ncould be SWITCH OFF、LAST SWITCH STATE、SWITCH ON.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Last switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode of Switch Off function",
				Description: "When the mode of switch On/Off is set to 0, any command of switch off will be/ndisabled and the On/Off function of include button will be disabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Whenever PAN15 switches to on, the auto off timer begin to count down. After the/ntimer decrease to zero, it will switch to off automatically. However if Auto off timer/nis set as 0, the auto off function will be disabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto off/nfunction",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "Whenever a switch off command, BASIC_SET、BINARY_SWITCH_SET、/nSWITCH_ALL_OFF, is received, it could be interpreted as 4 variety of commands./nSwitch Off：It switches to OFF state. The default setting is Switch Off. /nIgnore：The switch off command will be ignored. /nSwitch Toggle：It switches to the inverse of current state. /nSwitch On：It switches to ON state.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Ignore",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch toggle",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
		},
	}
}
func New013c00020002() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Slim Multi-Sensor PST02-A",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Уровень диммирования, отправляемый устройствам из группы 2",
				Description: "Отправлять устройствам из группы 2 заданный уровень диммирования. Так можно при срабатывании датчика открытия или движения включить свет на 50% или открыть жалюзи на 30%.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Уровень диммирования",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 70,
				Name: "Датчик движения",
				Description: "Настройка чувствительности датчика движения.1 - минимальная чувствительность, 99% - максимальная чувствительность",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Чувствительность",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Освещенность",
				Description: "При обнаружении движения проверяется уровень освещенности окружающей среды и если освещенность меньше заданной (т.е. темно), то свет включится. 1 - темно, 99 - ярко",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Освещенность",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Отключить проверку освещенности",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключить датчик движения, датчик открытия и проверку освещенность",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Режим работы",
				Description: "Bit0 и Bit1 работают только если DIP переключатель установлен в режим программирования. Если Bit1 установлен, то Bit0 не используется",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Bit0. 0 - Режим Домашней автоматизации; 1 - Режим Охраны",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bit1. Тестовый режим",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Bit2. Отключить Датчик открытия",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Bit3. 0 - Температура в Фаренгейтах;/n1 - Температура в Цельсиях",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Bit4. Отключить отчеты о освещенности при срабатывании датчика открытия или движения",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Bit5. Отключить отчеты о температуре при срабатывании датчика открытия или движения",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Функция выключателя",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Bit0. Не включать светодиод при сработке датчика открытия",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bit1. Не включать светодиод при сработке датчика движения",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Bit2. Отключить магнит установленный в самом датчике",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Bit3. 0 - Датчик установлен в той же комнате, что и свет; /n1 - Датчик установлен не в той комнате, что и свет. Если Bit2 = 1, эта функция не используется",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Bit4. Отключить задержку в 5 секунд при выключении света, когда дверь закрылась",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Bit5. Не выключать свет после того, когда сработал датчик открытия и включил свет. Если Bit2 = 0, эта функция не используется",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Bit6. При изменении температуры на 3 ° присылать отчет. При температуре больше 60 °C отчет присылается каждые 64 секунды",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время бездействия датчика после обнаружения движения",
				Description: "После обнаружения движения датчик отключается на время указанное в этом параметре. Время бездействия датчика задается с шагом 8 секунд, т.е. 1 = 8 секунд, 3 = 24 секунд. Если значение времени бездействия больше чем в параметре 9, тогда это время на которое будет отключен датчик движения после выключения света",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "8 sec",
						Reserved: false,
						Description: "секунды / 8",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Время выключения",
				Description: "Время через которое датчик движения отправит команду выключения (после того как датчик отправил команду включения и не было движения). Каждое движение сбрасывает время на начало. Время выключения задается с шагом 8 секунд, т.е. 1 = 8 секунд, 4 = 32 секунд",
				Values: []ConfigValue{
					ConfigValue{
						From: 4,
						To: 127,
						Unit: "8 sec",
						Reserved: false,
						Description: "секунды / 8",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Время автоматического отчета о батареи",
				Description: "Время задается с шагом 30 минут, т.е. 1 = 30 минут, 12 = 6 часов",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "30 min",
						Reserved: false,
						Description: "минуты / 30",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Время автоматического отчета о состоянии датчика двери/окна",
				Description: "Время задается с шагом 30 минут, т.е. 1 = 30 минут, 12 = 6 часов",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "30 min",
						Reserved: false,
						Description: "минуты / 30",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Время автоматического отчета о освещенности",
				Description: "Время задается с шагом 30 минут, т.е. 1 = 30 минут, 12 = 6 часов",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "30 min",
						Reserved: false,
						Description: "минуты / 30",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Время автоматического отчета о температуре",
				Description: "Время задается с шагом 30 минут, т.е. 1 = 30 минут, 12 = 6 часов",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "30 min",
						Reserved: false,
						Description: "минуты / 30",
					},
				},
			},
		},
	}
}
func New013c0002000c() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Slim Multisensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "000c",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light. The 0xFF(-1) means turn on the light. For dimmer equipment 1 to 100 means the light strength. 0 means turn off the light./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Activate Light",
					},
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Dimm",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivate Light",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "PIR Sensitivity",
				Description: "PIR sensitivity settings. 0 means disable the PIR motion. 1 means the lowest sensitivity, 99 means the highest sensitivity. High sensitivity means can detected long distance, but if there is more noise signal in the environment, it will re-trigger too frequency./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "sensitivity",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Light Threshold",
				Description: "Setting the illumination threshold to turn on the light. When the event triggered and the environment illumination lower then the threshold, the device will turn on the light. 0 means turn off illumination detected function. And never turn on the light. 1 means darkest. 99 means brightest. 100 means turn off illumination detected function. And always turn on the light. Notice: In none test mode, only the value in 1 to 99 will enable the illumination detected function and update the illumination value./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivate",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Treshhold",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Always turn on Lights",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Operation mode. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/n1 =enable test mode 0 = disable normal mode Notice: This bit only effect by the DIP Switch setting to program mode./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window function.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nSetting the temperature scale. 0: Fahrenheit 1: Celsius/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nDisable the illumination report after event triggered./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "/nDisable the temperature report after event triggered./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Disable the back key release into test mode.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Multi Sensor Function Switch",
				Description: "Multisensor function switch. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate illumination.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable PIR integrate Illumination.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nDisable magnetic integrate PIR (Default is Disable)/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nWhen Bit2 is 0 (Enable), Are the device and the lighting in the same room? 0: In the same room (Default) 1: In a different room. Notice: If this bit is 1, it is recommended also set the Bit1 to 1, cause the PIR triggered, doesn&#39;t mean the people in that room./n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nDisable delay 5 seconds to turn off the light, when door/window closed./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "/nDisable auto turn off the light, after door/window opened to turn on the light. If bit2 is zero, this setting is useless. Notice: If the configuration No.9 is zero, this setting is useless./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "Customer function switch, using bit control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nEnable sending motion OFF report. Note: Depends on the Bit4 0: Report Notification CC, Type: 0x07, Event: 0xFE 1: Sensor Binary Report, Type: 0x0C, Value: 0x00/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR super sensitivity mode.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enable don&#39;t send out BASIC OFF after door closed.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nNotification Type 0: Using Notification Report. 1: Using Sensor Binary Report./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "/nDisable to report battery state when the device triggered./n",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "PIR Re- Detect Interval Time",
				Description: "In the normal mode, after the PIR motion detected, setting the re-detect time. 8 seconds per tick, default tick is 3 (24 seconds). Setting the suitable value to prevent received the trigger signal too frequency. Also can save the battery energy. Notice: If this value bigger than the configuration setting NO. 9. There is a period after the light turned off and the PIR not start detecting./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Turn Off Light Time",
				Description: "After turn on the lighting, setting the delay time to turn off the lighting when the PIR motion is not detected. 8 seconds per tick, default tick is 4 (32 seconds). 0 means never send turn off light command./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the delay time.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The turn off light command is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the battery level. 0 means turn off auto report battery. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "/nDefine the time interval for a battery auto report./n",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The auto report is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Door/Windo w State Time",
				Description: "The interval time for auto report the door/window state. 0 means turn off auto report door/window state. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the illumination. 0 means turn off auto report illumination. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperatur e Time",
				Description: "The interval time for auto report the temperature. 0 means turn off auto report temperature. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each tick. Setting this configuration will effect configuration No.10, No.11, No.12 and No.13. Caution: Setting to 0 means turn off all auto report function./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All auto report functions are disabled.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report. 0 means turn off this function. The unit is Fahrenheit. Enable this function the device will detect every minutes. And when the temperature is over 140 degree Fahrenheit, it will continue report. Enable this functionality will cause some issue please see the detail in the “Temperature Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define the temperature differential to report.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report.q2121111 0 means turn off this function. The unit is percentage. Enable this function the device will detect every minutes. Enable this functionality will cause some issue please see the detail in the “Illumination Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the illumination differential to report.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
		},
	}
}
func New013c0002000d() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Slim Multisensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "000d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light. The 0xFF(-1) means turn on the light. For dimmer equipment 1 to 100 means the light strength. 0 means turn off the light./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Activate Light",
					},
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Dimm",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivate Light",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "PIR Sensitivity",
				Description: "PIR sensitivity settings. 0 means disable the PIR motion. 1 means the lowest sensitivity, 99 means the highest sensitivity. High sensitivity means can detected long distance, but if there is more noise signal in the environment, it will re-trigger too frequency./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "sensitivity",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Light Threshold",
				Description: "Setting the illumination threshold to turn on the light. When the event triggered and the environment illumination lower then the threshold, the device will turn on the light. 0 means turn off illumination detected function. And never turn on the light. 1 means darkest. 99 means brightest. 100 means turn off illumination detected function. And always turn on the light. Notice: In none test mode, only the value in 1 to 99 will enable the illumination detected function and update the illumination value./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Deactivate",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Treshhold",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Always turn on Lights",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Operation mode. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/n1 =enable test mode 0 = disable normal mode Notice: This bit only effect by the DIP Switch setting to program mode./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window function.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nSetting the temperature scale. 0: Fahrenheit 1: Celsius/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nDisable the illumination report after event triggered./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "/nDisable the temperature report after event triggered./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Disable the back key release into test mode.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Multi Sensor Function Switch",
				Description: "Multisensor function switch. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate illumination.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable PIR integrate Illumination.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "/nDisable magnetic integrate PIR (Default is Disable)/n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nWhen Bit2 is 0 (Enable), Are the device and the lighting in the same room? 0: In the same room (Default) 1: In a different room. Notice: If this bit is 1, it is recommended also set the Bit1 to 1, cause the PIR triggered, doesn&#39;t mean the people in that room./n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nDisable delay 5 seconds to turn off the light, when door/window closed./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "/nDisable auto turn off the light, after door/window opened to turn on the light. If bit2 is zero, this setting is useless. Notice: If the configuration No.9 is zero, this setting is useless./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "Customer function switch, using bit control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nEnable sending motion OFF report. Note: Depends on the Bit4 0: Report Notification CC, Type: 0x07, Event: 0xFE 1: Sensor Binary Report, Type: 0x0C, Value: 0x00/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR super sensitivity mode.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enable don&#39;t send out BASIC OFF after door closed.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nNotification Type 0: Using Notification Report. 1: Using Sensor Binary Report./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "/nDisable to report battery state when the device triggered./n",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "PIR Re- Detect Interval Time",
				Description: "In the normal mode, after the PIR motion detected, setting the re-detect time. 8 seconds per tick, default tick is 3 (24 seconds). Setting the suitable value to prevent received the trigger signal too frequency. Also can save the battery energy. Notice: If this value bigger than the configuration setting NO. 9. There is a period after the light turned off and the PIR not start detecting./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Turn Off Light Time",
				Description: "After turn on the lighting, setting the delay time to turn off the lighting when the PIR motion is not detected. 8 seconds per tick, default tick is 4 (32 seconds). 0 means never send turn off light command./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the delay time.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The turn off light command is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the battery level. 0 means turn off auto report battery. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "/nDefine the time interval for a battery auto report./n",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The auto report is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Door/Windo w State Time",
				Description: "The interval time for auto report the door/window state. 0 means turn off auto report door/window state. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the illumination. 0 means turn off auto report illumination. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperatur e Time",
				Description: "The interval time for auto report the temperature. 0 means turn off auto report temperature. The default value is 12. The tick time can setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each tick. Setting this configuration will effect configuration No.10, No.11, No.12 and No.13. Caution: Setting to 0 means turn off all auto report function./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All auto report functions are disabled.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report. 0 means turn off this function. The unit is Fahrenheit. Enable this function the device will detect every minutes. And when the temperature is over 140 degree Fahrenheit, it will continue report. Enable this functionality will cause some issue please see the detail in the “Temperature Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define the temperature differential to report.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report.q2121111 0 means turn off this function. The unit is percentage. Enable this function the device will detect every minutes. Enable this functionality will cause some issue please see the detail in the “Illumination Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define the illumination differential to report.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
		},
	}
}
func New013c0002001e() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smoke Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "001e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "Customer function switch, using bit/ncontrol./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n0: Using Notification Report./n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "Defines the interval time for auto reporting the/nbattery level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define time interval for auto report.",
					},
				},
			},
		},
	}
}
func New013c0002001f() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Flood Multisensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "001f",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Basic Set OFF Level",
				Description: "Setting the BASIC command value./nWhen the flood trigger off, send the BASIC CC to the group 2.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set ON Level",
				Description: "Setting the BASIC command value./nWhen the flood trigger on, send the BASIC CC to the group 2.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Operation mode. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable the Flood function.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Setting the temperature scale./n0: Fahrenheit, 1:Celsius",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable the temperature report/nafter event triggered. (1:Disable,/n0:Enable)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Multsensor Function Switch",
				Description: "Multisensor function switch. Using bit/nto control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Disable the humidity report after/nevent triggered. (1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "Customer function switch, using bit/ncontrol.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Disable send out BASIC OFF/nafter the flood event cleared./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n0: Using Notification Report./n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Disable to report battery state/nwhen the device triggered. (1:Disable,/n0:Enable)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "Reserve.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "Sets the time interval to send an auto report of the battery level./nThe tick time/nis set by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto report is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Defines time interval for auto report.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "Sets the time interval to send an auto report of the temperature. The tick time/nis set by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto report is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Defines interval time for auto report.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Humidity Time",
				Description: "Sets the time interval to send an auto report of the humidity. The tick time/nis set by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto report is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Defines time interval for auto report.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Flood Time",
				Description: "Sets the time interval to send an auto report of the flood state. The tick time/nis set by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto report is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Defines interval time for auto report.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "Sets the time interval for an auto report of each tick./nSetting this configuration will/neffect configuration No.10, No.13,/nNo.14 and No.15./nCaution: Setting to 0 means turn off/nall auto report function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All auto report function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Defines interval time for an auto report each/ntick.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential that is reported./nThe unit is Fahrenheit./nEnable this function the device will/ndetect every 10 seconds./nIf the temperature is over 140/ndegree Fahrenheit, it will continue report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Defines temperature differential that will be reported.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity Differential Report",
				Description: "/nThe humidity differential that is reported./n/nThe unit is percentage./nEnable this function the device will detect every 10 seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "",
						Reserved: false,
						Description: "Defines humidity differential that will be reported.",
					},
				},
			},
		},
	}
}
func New013c00020020() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Temperature and Humidity sensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "0020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "This option is not available for this device.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "/nSetting the temperature scale. 0: Fahrenheit, 1:Celsius/n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "This option is not available for this device.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "The option is not available for this device.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "/nNotification Type, 0: Using Notification Report. 1: Using Sensor Binary Report./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "/nDisable Multi CC in auto report. (1:Disable, 0:Enable)/n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "The option is not available for this device.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "/nThe interval time for auto report the battery level. The tick time can be set by the parameter No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "/nThe interval time for auto report the temperature.The tick time can be set by the parameter No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the interval time.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Humidity Time",
				Description: "/nThe interval time for auto report the humidity. The tick time can be set by the parameter No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the interval time.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "/nThe interval time for auto report each tick. Setting this configuration will effect configuration No.10, No.13, No.14 and No.15. Units of one minute./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "/nSetting to 0 means turn off all auto report function./n",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval for one tick.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "/nThe temperature differential to report. 0 means turn off this function. The unit is Fahrenheit. Enable this function the device will detect every 10 seconds. And when the temperature is over 140 degree Fahrenheit, it will continue report./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define the temperature differential.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity Differential Report",
				Description: "/nThe humidity differential to report. Enable this function the device will detect every 10 seconds./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "%",
						Reserved: false,
						Description: "Define the humidity differential.",
					},
				},
			},
		},
	}
}
func New013c00020021() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Flood sensor ",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "0021",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Basic Set OFF Level",
				Description: "Setting the BASIC command value./nWhen the flood trigger off(0x00), send/nthe BASIC CC to the group 2.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set ON Level",
				Description: "Setting the BASIC command value./nWhen the flood trigger on(0xFF), send/nthe BASIC CC to the group 2.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable the Flood function.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "The option is not available tor this device.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "The option is not available tor this device.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Disable send out BASIC OFF/nafter the flood event cleared./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n0: Using Notification Report./n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Disable to report battery state/nwhen the device triggered. (1:Disable,/n0:Enable)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the/nbattery level. The tick time/ncan be set by the parameter No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Flood Time",
				Description: "The interval time for auto report the/nflood state. The tick time/ncan be set by the parameter No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each/ntick. Setting this configuration will/neffect configuration No.10, No.13,/nNo.14 and No.15.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Setting to 0 means turn off/nall auto report function.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval for one tick.",
					},
				},
			},
		},
	}
}
func New013c0002002b() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Temperature and Humidity sensor",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0002",
		ProductID: "002b",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "This option is not available for this device.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Setting the temperature scale./n0: Fahrenheit, 1:Celsius",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "This option is not available for this device.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "The option is not available for this device.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n0: Using Notification Report./n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report./n(1:Disable, 0:Enable)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "The option is not available for this device.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the/nbattery level./nThe tick time/ncan be set by the parameter No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "The interval time for auto report the/ntemperature.The tick time/ncan be set by the parameter No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the interval time.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Humidity Time",
				Description: "The interval time for auto report the/nhumidity. The tick time/ncan be set by the parameter No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the interval time.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each/ntick. Setting this configuration will/neffect configuration No.10, No.13,/nNo.14 and No.15./nUnits of one minute.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Setting to 0 means turn off/nall auto report function.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "Define the time interval for one tick.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report./n0 means turn off this function./nThe unit is Fahrenheit./nEnable this function the device will/ndetect every 10 seconds./nAnd when the temperature is over 140/ndegree Fahrenheit, it will continue report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define the temperature differential.",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Humidity Differential Report",
				Description: "The humidity differential to report./nEnable this function the device will/ndetect every 10 seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "%",
						Reserved: false,
						Description: "Define the humidity differential.",
					},
				},
			},
		},
	}
}
func New013c0004000a() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Multi Sound Siren",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0004",
		ProductID: "000a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "Customer function switch, using bit/ncontrol./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n0: Using Notification Report./n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disable Alarm",
				Description: "Disable the alarm function./n/nCaution: After the power up, this/nconfiguration always be 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0: Enable Alarm",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1: Disable Alarm",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Alarm Duration",
				Description: "Play alarm sound duration, 1 tick is 30/nseconds. Default is 3 minutes, maximum is 63.5 minutes./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = never auto stop",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Set duration of alarm sound.",
					},
				},
			},
		},
	}
}
func New013c0006001a() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Engery In Wall Meter",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0006",
		ProductID: "001a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter Report Period",
				Description: "5*720s=3600s=1/nhour",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x 5sec ",
						Reserved: false,
						Description: "Define a time interval to send a watt meter report.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "KWH Meter Report Period",
				Description: "5*720s=3600s=1/nhour",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "x 5sec ",
						Reserved: false,
						Description: "Define a time interval to send a kWh meter report.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Selected End Point",
				Description: "The parameter defines which endpoint(s) are selected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "CT1 and CT2",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CT1",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "CT2",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 6000,
				Name: "Threshold of Current for Load Caution",
				Description: "6000*0.01A=60A",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 6000,
						Unit: "x 0,01A",
						Reserved: false,
						Description: "Set up a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWH for Load Caution",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "kWh",
						Reserved: false,
						Description: "Set up a treshold.",
					},
				},
			},
		},
	}
}
func New013c0008001d() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Remote",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0008",
		ProductID: "001d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Setting the BASIC command value to turn on/nthe light. The 0xFF(-1) means turn on the/nlight. For dimmer equipment 1 to 100 means/nthe light strength./n0 means turn off the light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "-1 = Lights are turned on.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Set light strength for dimmer.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Lights are turned off.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Customer Function",
				Description: "Customer function switch, using bit control./n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch AV control/Lighting group/ncontrol. (0: AV control, 1: lighting group/ncontrol)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the battery/nlevel./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off auto report battery.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Set the interval time for auto report the battery/nlevel.",
					},
				},
			},
			ConfigParam{
				ID: 82,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 2 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 2./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 83,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 3 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 3./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 84,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 4 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 4./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 85,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 5 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 5./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 86,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 6 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 6./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 87,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 7 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 7./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 88,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 8 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 8./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 89,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 9 Basic Set Level",
				Description: "Setting the BASIC command value to turn on the light in the association group 9./n0 means using the value of configuration 2 to set.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New013c00080027() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Panic Button",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0008",
		ProductID: "0027",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New013c00090022() *Device{
	return &Device{
		Brand: "Philio",
		Product: "Smart Color Button",
		Description: "/n            /n          ",

		ManufacturerID: "013c",
		ProductType: "0009",
		ProductID: "0022",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Basic Set OFF level",
				Description: "Control the value represented/nby the left-side in area D./nE.g. Setting this configuration/nto 0x0F means range of/nCommand Basic Set value/nstart from 0x0F",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the Basic Set OFF level.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Basic Set ON level",
				Description: "Control the value represented/nby the right-side in area D./nE.g. Setting this configuration/nto 0x1E means range of/nCommand Basic Set value/nstart from 0x1E",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the Basic Set ON level.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto reporting/nthe Battery level. 0/nmeans turn off auto report/nbattery. The default value of 12 is equivalent to 6 hours.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define the time interval.",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Customer Function",
				Description: "Bit 0: Dimmer setting/nmethod./nBit 1: Disable buzzer in timer/nmode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 : Auto send Command Basic/nSet after rotating./n/n1 : Send Command Basic Set/nby touching key after rotating",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "0 = Enable, /n1 = Disable.",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disable Scene Holding report",
				Description: "Send Central Scene Holding/nwhen the button is held.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
				},
			},
		},
	}
}
func New014500010004() *Device{
	return &Device{
		Brand: "BUFFALO",
		Product: "Smat Tap 100V/15A",
		Description: "/n            /n          ",

		ManufacturerID: "0145",
		ProductType: "0001",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0032,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0087,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0077,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "",
				Description: "Store in EEPROM",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "",
				Description: "Store as Treshold",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Store send Options in EEPROM",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "Store Value as Destination Node ID",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014800010001() *Device{
	return &Device{
		Brand: "Eurotronic",
		Product: "Stella Z",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0148",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0077,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014800020001() *Device{
	return &Device{
		Brand: "Comet Z",
		Product: "Comet Z",
		Description: "/n            /n          ",

		ManufacturerID: "0148",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014900000000() *Device{
	return &Device{
		Brand: "WiDom",
		Product: "Universal Roller Shutter",
		Description: "/n            /n          ",

		ManufacturerID: "0149",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Shutter control",
				Description: "Enables/Disables the shutter&#39;s control trough the external Switch",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Favourite level for position ON",
				Description: "Define level. 100% = FULL ON",
				Values: []ConfigValue{
					ConfigValue{
						From: 50,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "From: 50 (50%) to 100 (100% - FULL ON)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Favourite level for position OFF",
				Description: "Define level. 0% = OFF",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 49,
						Unit: "%",
						Reserved: false,
						Description: "From: 0 (OFF) to 49 (49%)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Action on the associated devices when the external switch receives 1 click",
				Description: "Defines the actions to be carried out on the associated devices in terms of Basic Set./n1 – LIKE THE STATUS /n2 – IGNORE IF ON/n3 – IGNORE IF OFF /n4 – IGNORE",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = Basic Set ON_LEVEL/nActions on the button OFF = Basic Set OFF_LEVEL/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON, Actions on the button OFF = No action",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Action on the associated devices when the external switch receives 2 clicks",
				Description: "Defines the actions to be carried out on the associated devices in terms of Basic Set./n1 – LIKE THE STATUS /n2 – IGNORE IF ON/n3 – IGNORE IF OFF /n4 – IGNORE",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = Basic Set ON_LEVEL/nActions on the button OFF = Basic Set OFF_LEVEL/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON, Actions on the button OFF = No action",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Action on the associated devices when the external switch receives 3 clicks",
				Description: "Defines the actions to be carried out on the associated devices in terms of Basic Set./n1 – LIKE THE STATUS /n2 – IGNORE IF ON/n3 – IGNORE IF OFF /n4 – IGNORE",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = Basic Set ON_LEVEL/nActions on the button OFF = Basic Set OFF_LEVEL/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON, Actions on the button OFF = No action",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Action on the associated devices when the external switch is hold",
				Description: "Defines the actions to be carried out on the associated devices in terms of Basic Set./n1 – LIKE THE STATUS /n2 – IGNORE IF ON/n3 – IGNORE IF OFF /n4 – IGNORE",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = Basic Set ON_LEVEL/nActions on the button OFF = Basic Set OFF_LEVEL/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON = No action/nActions on the button OFF = Basic Set OFF_LEVEL",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Actions on the button ON, Actions on the button OFF = No action",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Device status upon receipt of a Basic Set",
				Description: "The device final status reached by the device when it receives a Basic Set command from the Z-Wave network./n1 – AS RECEIVED/n2 – IGNORE IF ON/n3 – IGNORE IF OFF/n4 – IGNORE",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "IF Command received = ON, THEN  Final Status = ON./nIF Command received = OFF, THEN  Final Status = OFF.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IF Command received = ON, THEN initial status is maintained./nIF Command received = OFF, THEN  Final Status = OFF.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IF Command received = ON, THEN  Final Status = ON./nIF Command received = OFF, THEN  initial status is maintained.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IF Command received = ON or OFF, THEN  initial status is maintained, or if the programmed switch-off timer is active, it is restarted.",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "ON_LEVEL value used for devices belonging to Group 2",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 1-click association group./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "OFF_LEVEL value used for devices belonging to Group 2",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 1-click association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "ON_LEVEL value used for devices belonging to Group 3",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 2-click association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "OFF_LEVEL value used for devices belonging to Group 3",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 2-click association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "ON_LEVEL value used for devices belonging to Group 4",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 3-click association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "OFF_LEVEL value used for devices belonging to Group 4",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to 2-click association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "OFF_Level parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "ON_LEVEL value used for devices belonging to Group 5 ",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to Hold association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "OFF_LEVEL value used for devices belonging to Group 5",
				Description: "Defines the values associated to the ON_LEVEL and OFF_LEVEL parameters used in the Basic Set. commands./nValues apply to Hold association group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "OFF_LEVEL parameter is switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define value for dimming purpose.",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Smoke Alarm, CO, CO2 Action ",
				Description: "Defines how the device reacts when it receives one of the following types of alarms: smoke, CO and CO2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to ON.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to OFF.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The alarm will be ignored.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Heat Alarm ",
				Description: "Defines how the device reacts when it receives a Heat Alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to ON.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to OFF.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The alarm will be ignored.",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Water Alarm",
				Description: "Defines how the device reacts when it receives a Water Alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to ON.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to OFF.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The alarm will be ignored.",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Home Security",
				Description: "Defines how the device reacts when it receives a Home Security Alarm.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to ON.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The device status switches to OFF.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "The alarm will be ignored.",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Calibration",
				Description: "Starts the system&#39;s calibration by setting the parameter&#39;s value as final level. During the calibration phase the parameter’s value is set to 1 and it is restored to the default value at the end of the procedure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Set parameter value.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Configuration Reset ",
				Description: "Defines what are the parameters to be restored to default values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "FACTORY RESET: the original manufacturer configuration is restored within the device.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ASSOCIATIONS RESET./nall and only the associations are reset",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CONFIGURATIONS RESET: the associations are maintained while all other configuration parameters are reset to the manufacturer&#39;s original settings, except for this specific configuration.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: /nno action is carried out.",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Protection time",
				Description: "Represents to maximum time allowed to complete a run (from completely open to completely closed). After that time the relay contacts are opened./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "sec",
						Reserved: false,
						Description: "Define time value.",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Inversion of commands UP/DOWN",
				Description: "Inverts the outputs controlling the motor. Once the inversion is enabled, the receipt of an opening/closure command will make the motor move in the opposite direction compared to what happens when the parameter is set on 0./nWARNING: The inversion of commands starts the calibration procedure requiring the system to completely run twice, from being completely open to completely closed./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Inversion disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Inversion enabled.",
					},
				},
			},
			ConfigParam{
				ID: 65,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Learn Mode",
				Description: "efines the sequence of clicks on the external switch to be associated with the Learning Mode status./nINFO: When Learning mode is associated to a click event any configuration related to the associated devices is ignored. The configuration is valid for a single event. After which the default value will be restored (0 – DISABLED).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Action of the Learning mode cannot be enabled through the external switch.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Learning mode activated by 1 click on the external switch.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Learning mode activated by 2 clicks on the external switch.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Learning mode activated by 3 clicks on the external switch.",
					},
				},
			},
		},
	}
}
func New014900120104() *Device{
	return &Device{
		Brand: "WiDom",
		Product: "Universal Relay Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0149",
		ProductType: "0012",
		ProductID: "0104",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Stato del dispositivo quando l&#39;interruttore esterno riceve 1 click   (1 byte) ",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF (3) ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Stato del dispositivo quando l&#39;interruttore esterno riceve 2 click   (1 byte) ",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (4)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Stato del dispositivo quando l&#39;interruttore esterno riceve 3 click          (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (4)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Stato del dispositivo quando l&#39;interruttore esterno rimane premuto (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (4)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Azione svolta sui dispositivi associati quando l&#39;interruttore esterno riceve 1 click (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA ASSOCIATI (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (6)",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Azione svolta sui dispositivi associati quando l&#39;interruttore esterno riceve 2 click (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA ASSOCIATI (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (6)",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Azione svolta sui dispositivi associati quando l&#39;interruttore esterno rimane premuto (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA ASSOCIATI (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (6)",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 5,
				Name: " Azione trasmessa su tutti i dispositivi della rete quando l&#39;interruttore esterno riceve 1 click (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (5)",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 5,
				Name: " Azione trasmessa a tutti i dispositivi dopo due click sull&#39;interruttore esterno ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (5)",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 5,
				Name: " Azione trasmessa a tutti i dispositivi dopo tre click sull&#39;interruttore esterno ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (5)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 5,
				Name: " Azione trasmessa a tutti i dispositivi dopo pressione prolungata sull&#39;interruttore esterno ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (4)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (5)",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Stato del dispositivo al ricevimento di un BASIC SET (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COME RICEVUTO (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (4)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Valore di ON_LEVEL usato per i dispositivi appartenenti al Gruppo 2 (1 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valore di OFF_LEVEL usato per i dispositivi appartenenti al Gruppo 2 (1 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Valore di ON_LEVEL usato per i dispositivi appartenenti al Gruppo 3 (2 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valore di OFF_LEVEL usato per i dispositivi appartenenti al Gruppo 3 (2 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Valore di ON_LEVEL usato per i dispositivi appartenenti al Gruppo 4 (3 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "  ",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valore di OFF_LEVEL usato per i dispositivi appartenenti al Gruppo 4 (3 Click association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "  ",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Valore di ON_LEVEL usato per i dispositivi appartenenti al Gruppo 5 (Hold association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "  ",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Valore di OFF_LEVEL usato per i dispositivi appartenenti al Gruppo 5 (Hold association group) (1 byte)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "  ",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Timer associato all&#39;evento di 1 click sull&#39;interruttore esterno (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " TIMER DISABILITATO (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " TIMER ABILITATO (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Timer associato all&#39;evento di 2 click sull&#39;interruttore esterno (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " TIMER DISABILITATO (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " TIMER ABILITATO (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Timer associato all&#39;evento di 3 click sull&#39;interruttore esterno (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " TIMER DISABILITATO (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " TIMER ABILITATO (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Timer associato all&#39;evento di pressione prolungata sul pulsante esterno (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " TIMER DISABILITATO (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " TIMER ABILITATO (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Timer associato all&#39;evento ricezione di un comando Basic Set (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " TIMER DISABILITATO (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " TIMER ABILITATO (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Tempo di spegnimento (2 bytes) ",
				Description: "  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3600,
						Unit: "",
						Reserved: false,
						Description: "Tempo in secondi (1 - 3600). Valore di default  600 (10 minuti) ",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Validità dello spegnimento programmato (1 byte) ",
				Description: "  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " ANNULLA (0)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " MANTIENI (1)  ",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Smoke Alarm, CO, CO2 Action (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " ON (1)  ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " OFF (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " LAMPEGGIARE (3)  ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 1,
				Name: " Heat Allarm (1 byte)  ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " ON (1)  ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " OFF (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " LAMPEGGIARE (3)  ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 2,
				Name: " Water Allarm (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " ON (1)  ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " OFF (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " LAMPEGGIARE (3)  ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 3,
				Name: " Home Security (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " ON (1)  ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " OFF (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " LAMPEGGIARE (3)  ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 3,
				Name: " Stato di avvio (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " ON (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " OFF (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " STATO PRECEDENTE (3) ",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 4,
				Name: " Reset della configurazione (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " RESET DI FABBRICA (0) ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " RESET ASSOCIAZIONI (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " RESET CONFIGURAZIONI (2) ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (4) ",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 4,
				Name: " Tipo di switch esterno (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (0) ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " PULSANTE (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " INTERRUTTORE (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " AC SENSING (3) ",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " RICONOSCIMENTO AUTOMATICO (4) ",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Protezione del carico (2 byte) ",
				Description: "  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3600,
						Unit: "",
						Reserved: false,
						Description: "Tempo in secondi (1 - 3600). Valore di default 0 ",
					},
				},
			},
			ConfigParam{
				ID: 65,
				Type: "",
				Size: 1,
				Default: 0,
				Name: " Learn Mode (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " IGNORA (0) ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " 1 CLICK (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " 2 CLICK (2) ",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " 3 CLICK (3) ",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 9,
				Name: " Sensitivity (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "  ",
					},
				},
			},
			ConfigParam{
				ID: 56,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Durata della fase di lampeggiamento (1 byte) ",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Tempo di OFF durante il lampeggiamento (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Tempo di ON durante il lampeggiamento (1 byte) ",
				Description: " ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " ",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 6,
				Name: " Azione svolta sui dispositivi associati quando l&#39;interruttore esterno riceve 3 click (1 byte) ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA (1) ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE ON (2)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORA SE OFF (3)",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "SETTA COME STATO INIZIALE (5)",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "IGNORA (6)",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "COMMUTA ASSOCIATI (4)",
					},
				},
			},
		},
	}
}
func New014912140304() *Device{
	return &Device{
		Brand: "WiDom",
		Product: "Energy Driven Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0149",
		ProductType: "1214",
		ProductID: "0304",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Device Status",
				Description: "Controlling the relay by means of a single click on the external switch or on the integrated button.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE: If initial status is ON, then final status is OFF.  If initial status is OFF, then final status is ON.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF; conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Device status",
				Description: "The final status achieved by the device when it receives a Basic Set command through the Z-Wave network.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "AS RECEIVED: If received command is ON, then final status is ON. If received command is OFF, then final status is OFF.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORE IF ON: If received command is ON, then the initial status is maintained.  If received command is OFF, then final status is OFF.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORE IF OFF: If received command is ON, then final status is ON. If received command is OFF, then the initial status is maintained.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: Initial status is maintained.",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 2,
				Default: 4500,
				Name: "Overcurrent level",
				Description: "Sets the current level above which the time spent above that level is measured./nDefined value is divided by 100.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 4500,
						Unit: "A",
						Reserved: false,
						Description: "Define current  treshold.",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Overcurrent time",
				Description: "Sets the time beyond which, in the case of overcurrent at a level higher than that established in parameter 30, an OverCurrent event occurs.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10800,
						Unit: "seconds",
						Reserved: false,
						Description: "Define treshold of overcurrent time.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Next State",
				Description: "Defines the next state of the device if an overcurrent event has occurred.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF: conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE: If the initial status is ON/OFF the system switches to OFF/ON.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Meter Reset",
				Description: "Provides total operating time from last meter reset. When set to 0 it resets the cumulated values of energy and total operating time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Meter parameters, including total operating time, will be reset",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Greater than 0 – IGNORE/n(The meter will not be reset.)",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Energy flow",
				Description: "Determines whether energy events are related to energy consumed or energy produced.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "CONSUMED: Events will be active for Consumed energy flows to which the positive sign will be attributed.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "PRODUCED: Events will be active for Produced energy flows to which the negative sign will be attributed.",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 2,
				Default: 11250,
				Name: "UP Power Level",
				Description: "Sets the level of instantaneous power in Watts beyond which time of permanence above this level is calculated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 11250,
						Unit: "W",
						Reserved: false,
						Description: "Define level of instantaneous power.",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "UP Power Time",
				Description: "Sets the time in seconds beyond which, if instantaneous power remains at levels exceeding threshold defined by parameter 35, a UP Power event occurs.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10800,
						Unit: "sec",
						Reserved: false,
						Description: "Define time parameter.",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "UP Power State",
				Description: "Defines the next status of the device in the case of a UP Power event occurring.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains initial status.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely it maintains its status (ON).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF, conversely it maintains its status (OFF).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE: If the initial status is ON/OFF the system switches to OFF/ON.",
					},
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "UP Power Associated",
				Description: "Defines the status of associated devices in the presence of a UP Power event.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Set parameter for dimming purposes.",
					},
				},
			},
			ConfigParam{
				ID: 39,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "DOWN Power Level",
				Description: "Sets the level of instantaneous power beyond which the time of permanence below this level is calculated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 11250,
						Unit: "W",
						Reserved: false,
						Description: "Define level of instantaneous power.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "DOWN Power Time",
				Description: "Sets the time beyond which, if instantaneous power remains at levels below threshold defined by parameter 39, a DOWN Power event occurs.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 10800,
						Unit: "sec",
						Reserved: false,
						Description: "Define time parameter.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "DOWN Power State",
				Description: "Defines the next state of the device in the case of a DOWN Power event occurring.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF, conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE: If the initial status is ON/OFF the system switches to OFF/ON.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "DOWN Power Associated",
				Description: "Defines the status of associated devices in the presence of a DOWN Power event.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are switched OFF.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are switched ON.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Set parameter for dimming purposes.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 2000000,
				Name: "Energy Level",
				Description: "Sets the energy level that once exceeded an Energy Limit event occurs.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2000000,
						Unit: "KWh",
						Reserved: false,
						Description: "Set energy level.",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Energy Limit State",
				Description: "Defines the next state of the device in the case of an Energy Limit event occurring.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF; conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE: If the initial status is ON/OFF, in the next state it will be OFF/ON.",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Variation Instantaneous Power",
				Description: "Defines the percentage variation of instantaneous power determining the sending of the report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define percentage of variation.",
					},
				},
			},
			ConfigParam{
				ID: 46,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Report Time Frequency",
				Description: "Defines the maximum time in minutes since the previous report beyond which an Instantaneous Power Report will still be sent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "min",
						Reserved: false,
						Description: "Define time parameter.",
					},
				},
			},
			ConfigParam{
				ID: 47,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Variation Total Energy",
				Description: "Defines the increase of total energy required to generate a report listing the level of total energy to the devices associated to the Energy Notification Group.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: No report provided",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Energy variation generating the issuing of a report at 1 thousandth of KWh.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Energy variation generating the issuing of a report at 1 hundredth of KWh.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Energy variation generating the issuing of a report at 1 tenth of KWh.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Energy variation generating the issuing of a report at 1 KWh.",
					},
				},
			},
			ConfigParam{
				ID: 48,
				Type: "",
				Size: 2,
				Default: 2300,
				Name: "Nominal Voltage",
				Description: "Defines the nominal voltage value in tenths of volts. Together with parameter No. 49 this is used by the automatic notification system to send reports on variations of voltage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1100,
						To: 2500,
						Unit: "V",
						Reserved: false,
						Description: "Define parameter in tenths of volts.",
					},
				},
			},
			ConfigParam{
				ID: 49,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Fall in maximum voltage",
				Description: "Defines, as a percentage, the nominal value for permitted fall in maximum voltage.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define parameter.",
					},
				},
			},
			ConfigParam{
				ID: 50,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Electric parameters subjected to automatic notification",
				Description: "Defines which electric parameters, other than power, will be subjected to automatic notification./nThe value to be set for this parameter must be calculated as the sum of values associated to the individual electric parameter:/nPower=0,/nEnergy=2,/nVoltage=4,/nCurrent=8,/nPower factor=16,/nMultilevel Sensor: Power Report=32/nTo send report only for Power please set the value to 0./nBy default the report are sent for (Power, Energy, Voltage, Current, Power Factor) 0&#43;2&#43;4&#43;8&#43;16=30",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 62,
						Unit: "",
						Reserved: false,
						Description: "Specify the calculated value.",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Voltage RMS value",
				Description: "Reading of this parameter returns the value of voltage RMS at the time of the reading expressed in tenths of Volts.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Current RMS value",
				Description: "Returns the value of current RMS expressed in hundredths of Amperes.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power Factor",
				Description: "Returns the value of power factor as a percentage",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Total energy consumed",
				Description: "Returns the value of total energy consumed expressed in Wh (thousandths of KWh).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 55,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Total energy produced",
				Description: "Returns the value of total energy produced expressed in Wh (thousandths of KWh).",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Start-up status",
				Description: "Defines the status of the device following a restart.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON: Device on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "OFF: Device off",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "PREVIOUS STATUS: Status prior to restart",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Configuration reset",
				Description: "Defines which parameters should be reset to default values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "FACTORY RESET: The device is reset to the original factory settings.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ASSOCIATIONS RESET: All associations and only the associations are reset.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CONFIGURATIONS RESET: The associations are maintained while all other configuration parameters are reset to the original factory settings, except for the specific configuration.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: No action is performed.",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Type of external switch",
				Description: "Defines the type of external switch connected to the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The external switch is not connected or not present.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "BUTTON: The external switch is a normally open button.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "SWITCH: The external switch is a traditional switch.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "AUTOMATIC RECOGNITION: After the first single click on the external switch, the system automatically determines the type of external switch used and sets the parameter with the new value accordingly.",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Load control",
				Description: "Defines the load control mode.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "DIRECT CONTROL: The external load is controlled directly by the relay. Reference diagram local load control.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "CONTROL BY MEANS OF A CONTACTOR WITH NORMALLY OPEN COMMAND: The external load is controlled by a contactor that in a resting state has open contacts (load control by means of external contactor).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "CONTROL BY MEANS OF A CONTACTOR WITH NORMALLY CLOSED COMMAND: The external load is controlled by a contactor that in a resting state has closed contacts (load control by means of external contactor).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "AS AN EXTERNAL INDICATOR: The relay is only used to control the ignition of an external warning light, as, for example, in the case of notification of excess loads and surges/n(remote load control).",
					},
				},
			},
		},
	}
}
func New014912140504() *Device{
	return &Device{
		Brand: "WiDom",
		Product: "Universal double Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0149",
		ProductType: "1214",
		ProductID: "0504",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Outputs Status 1 Click",
				Description: "Defines the status of the output O1/O2 when the switch connected to I1/I2 receives 1 Click.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF; conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Output Status 2 Clicks",
				Description: "Defines the status of the output O1/O2 when the switch connected to I1/I2 receives 2 Click.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "TOGGLE",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ON: If the initial status is OFF the system switches to ON; conversely, it maintains its status (ON).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "OFF: If the initial status is ON the system switches to OFF; conversely, it maintains its status (OFF).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE: The device maintains the initial status",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of outputs",
				Description: "Defines if the outputs are controlled individually, as a traditional device with two channels, or if its behaviour simulates a single pole double throw relay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SINGLE CHANNELS: Channel 1 and Channel 2 are controlled individually",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "SINGLE POLE DOUBLE THROW RELAY: The two channels are in opposite status. If the Channel 1 is close the Channel 2 is open, if the Channel 1 is open the Channel 2 is close. The value of the parameter defines the closing delay of the relay in tenth of seconds",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Number of clicks that activate the control of the associated devices",
				Description: "Defines the number of clicks on the Switch 1 or Switch 2 that enable the control of the correspondent associated devices.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are controlled by 1 Click on the correspondent external switch",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Associated devices are controlled by 2 Clicks on the correspondent external switch",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Level used to control the devices associated to group 2 and 3",
				Description: "Defines how to control the devices associated to group 2 and 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The associated devices are switched OFF",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "The associated devices are switched ON",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "The associated devices (dimmer, roller shutters) are set to the indicated level (only for devices associated to group 3)",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is ON/OFF, the associated devices are ON/OFF",
					},
					ConfigValue{
						From: 101,
						To: 101,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is ON the associated devices are ON; if it is OFF no action is taken on the associated devices",
					},
					ConfigValue{
						From: 102,
						To: 102,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is OFF the associated devices are OFF; if it is ON no action is taken on the associated devices",
					},
					ConfigValue{
						From: 103,
						To: 103,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is ON the associated devices are OFF; if it is OFF no action is taken on the associated devices",
					},
					ConfigValue{
						From: 104,
						To: 104,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is OFF the associated devices are ON; if it is ON no action is taken on the associated devices",
					},
					ConfigValue{
						From: 105,
						To: 105,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 1 is ON/OFF, the associated devices are OFF/ON",
					},
					ConfigValue{
						From: 106,
						To: 106,
						Unit: "",
						Reserved: false,
						Description: "No action is taken on the associated devices",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Level used to control the devices associated to group 4 and 5",
				Description: "Defines how to control the devices associated to group 4 and 5.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The associated devices are switched OFF",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "The associated devices are switched ON",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "The associated devices (dimmer, roller shutters) are set to the indicated level (only for devices associated to group 5)",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is ON/OFF, the associated devices are ON/OFF",
					},
					ConfigValue{
						From: 101,
						To: 101,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is ON the associated devices are ON; if it is OFF no action is taken on the associated devices",
					},
					ConfigValue{
						From: 102,
						To: 102,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is OFF the associated devices are OFF; if it is ON no action is taken on the associated devices",
					},
					ConfigValue{
						From: 103,
						To: 103,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is ON the associated devices are OFF; if it is OFF no action is taken on the associated devices",
					},
					ConfigValue{
						From: 104,
						To: 104,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is OFF the associated devices are ON; if it is ON no action is taken on the associated devices",
					},
					ConfigValue{
						From: 105,
						To: 105,
						Unit: "",
						Reserved: false,
						Description: "If the Relay 2 is ON/OFF, the associated devices are OFF/ON",
					},
					ConfigValue{
						From: 106,
						To: 106,
						Unit: "",
						Reserved: false,
						Description: "No action is taken on the associated devices",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer to switch ON the Channel 1",
				Description: "Defines the time after which the Channel 1 is switched ON.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Timer disabled",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "sec",
						Reserved: false,
						Description: "After this time the relay of the Channel 1 is ON",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer to switch ON the Channel 2",
				Description: "Defines the time after which the Channel 2 is switched ON.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Timer disabled",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "After this time the relay of the Channel 2 is ON",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer to switch OFF the Channel 1",
				Description: "Defines the time after which the Channel 1 is switched OFF.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Timer disabled",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "After this time the relay of the Channel 1 is OFF",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Timer to switch OFF the Channel 2",
				Description: "Defines the time after which the Channel 2 is switched OFF.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Timer disabled",
					},
					ConfigValue{
						From: 1,
						To: 32000,
						Unit: "",
						Reserved: false,
						Description: "After this time the relay of the Channel 2 is OFF",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Outputs status upon receipt of a Multi-Channel Basic Set command",
				Description: "The two channels can be controlled individually by Z-Wave network. The status of the channels upon receipt of a Multi-Channel Basic Set command is defined by the value set on the parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "AS RECEIVED",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "IGNORE IF ON",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "IGNORE IF OFF",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "IGNORE",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Outputs status upon receipt of a Basic Set command",
				Description: "The channels of the device can be controlled individually from all other Z-Wave devices that support the multichannel feature. In order to support also the integration with no-multichannel systems, this parameter allows to define if the receipt of a no-multichannel command controls only the Channel 1 or both.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The receipt of a Basic Set ON/OFF set the Channel 1 to ON/OFF",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "The receipt of a Basic Set ON/OFF set both the Channel 1 and the Channel 2 to ON/OFF",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Start-up status",
				Description: "Defines the status of the device following a restart.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Both Relay 1 and Relay 2 OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Relay 1 ON, Relay 2 OFF",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay 1 OFF, Relay 2 ON",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both Relay 1 and Relay 2 ON",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "PREVIOUS STATUS: Status prior to restart",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Configuration reset",
				Description: "Defines which parameters should be reset to default values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The device is reset to the original factory settings",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All associations and only the associations are reset",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The associations are maintained while all other configuration parameters are reset to the original factory settings, except for the specific configuration.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "The device will be restarted",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "No action is performed",
					},
				},
			},
			ConfigParam{
				ID: 62,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Type of external switch",
				Description: "Defines the type of external switch connected to the device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The actions on the external switch are ignored. In this mode, the device can only be controlled via the network.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The external switch is a normally open button",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The external switch is a traditional switch",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "After the first single click on the external switch, the system automatically determines the type of external switch used and sets the parameter with the new value accordingly.",
					},
				},
			},
		},
	}
}
func New014d00000000() *Device{
	return &Device{
		Brand: "enblink",
		Product: "enblink",
		Description: "/n            /n          ",

		ManufacturerID: "014d",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014d00010001() *Device{
	return &Device{
		Brand: "enblink",
		Product: "enblink",
		Description: "/n            /n          ",

		ManufacturerID: "014d",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f00000000() *Device{
	return &Device{
		Brand: "HomeSeer",
		Product: "SmartStick&#43;",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f44503030() *Device{
	return &Device{
		Brand: "Linear",
		Product: "PD300Z-2",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4450",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Load sense",
				Description: "set parameter to 0 to disable load sense, set parameter to 1 to enable load sense",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014f44573034() *Device{
	return &Device{
		Brand: "Linear",
		Product: "WD500Z-1",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4457",
		ProductID: "3034",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Start Level",
				Description: "A dimmer receiving this command will start dimming from that start level if this bit is set to 0. If the bit is set to 1, the dimmer will ignore the start level and instead start dimming from its current level.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Indication",
				Description: "The WD500Z-1 will flicker its LED when it is transmitting to any of its groups. This can be changed if desired.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "To change the top of the switch to OFF and the bottom to ON change parameter to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 2",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 3",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "LED Transmission Indication",
				Description: "The WD500Z-1 will flicker its LED when it is transmitting to any of its groups./nParameter set to 0 = not flicker/nParameter set to 1 = flicker the entire time of transmitting/nParameter set to 2 = flicker for only 1 second",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014f44573331() *Device{
	return &Device{
		Brand: "Linear",
		Product: "WD1000Z-1",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4457",
		ProductID: "3331",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Start Level",
				Description: "A dimmer receiving this command will start dimming from that start level if this bit is set to 0. If the bit is set to 1, the dimmer will ignore the start level and instead start dimming from its current level.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Indication",
				Description: "The WD500Z-1 will flicker its LED when it is transmitting to any of its groups. This can be changed if desired.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "To change the top of the switch to OFF and the bottom to ON change parameter to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 2",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 3",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "LED Transmission Indication",
				Description: "The WD500Z-1 will flicker its LED when it is transmitting to any of its groups. Parameter set to 0 = not flicker Parameter set to 1 = flicker the entire time of transmitting Parameter set to 2 = flicker for only 1 second",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014f47423030() *Device{
	return &Device{
		Brand: "Linear",
		Product: "GB00Z-1",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4742",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x009c,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0082,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f47443032() *Device{
	return &Device{
		Brand: "Linear",
		Product: "GD00Z-X",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4744",
		ProductID: "3032",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0066,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0022,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f47443530() *Device{
	return &Device{
		Brand: "Linear",
		Product: "NGD00Z Garage Door Controller",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4744",
		ProductID: "3530",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0066,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0022,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f47543038() *Device{
	return &Device{
		Brand: "LinearLinc",
		Product: "BulbZ",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "4754",
		ProductID: "3038",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dim Level Memory",
				Description: "By default, the LB60Z-1 bulb will go to full brightness when turned on. To have/nthe bulb turn on to the last dim level setting, set parameter 1 to 1.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The bulb will be full brightness when turned on.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The bulb will turn on to the last dim level setting.",
					},
				},
			},
		},
	}
}
func New014f52463133() *Device{
	return &Device{
		Brand: "Linear",
		Product: "FS20Z",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "5246",
		ProductID: "3133",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New014f52503030() *Device{
	return &Device{
		Brand: "Linear",
		Product: "PS15Z-2",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "5250",
		ProductID: "3030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 104,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Flash Mode",
				Description: "set parameter to 1 for normal ON/OFF operation, set parameter to 0 to enable flash mode",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014f52523530() *Device{
	return &Device{
		Brand: "Linear",
		Product: "WO15Z-1",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "5252",
		ProductID: "3530",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Set parameter to 0 to have the blue indicator LED show state of controlled outlet. Set parameter to 1 to have indicator show opposite state of controlled outlet.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New014f54573033() *Device{
	return &Device{
		Brand: "Linear",
		Product: "WT00Z-1",
		Description: "/n            /n          ",

		ManufacturerID: "014f",
		ProductType: "5457",
		ProductID: "3033",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dim Start Level",
				Description: "A dimmer receiving this command will start dimming from that start level if this bit is set to 0. If the bit is set to 1, the dimmer will ignore the start level and instead start dimming from its current level.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Suspend Group 4",
				Description: "Setting parameter to 1 will stop the WT00Z-1 from transmitting to devices that are associated in group 4.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Night Light",
				Description: "The LED will turn ON when the status of the devices in group 1 is ON. To make the LED turn ON when the status of the devices is OFF set this parameter to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert Switch",
				Description: "To change the top of the switch to OFF and the bottom to ON change parameter to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ignore start level when recieving dim commands",
				Description: "By default the WT00Z-1 sends the dim command so that the dimmer will start dimming from its current dim level rather then the start level embedded in the command. To change this set the configuration parameter to 0.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "ON/OFF dim rate",
				Description: "dim step parameter/nvalid values: 1-99",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "ON/OFF dim rate",
				Description: "dim timer parameter/nvalid values: 1-255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Local control dim rate",
				Description: "dim step parameter/nvalid values: 1-99",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Local control dim rate",
				Description: "dim timer parameter/nvalid values: 1-255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "ALL ON/ ALL OFF dim rate",
				Description: "dim step parameter/nvalid values: 1-99",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "ALL ON/ ALL OFF dim rate",
				Description: "dim timer parameter/nvalid values: 1-255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disable group 4 during a dim command",
				Description: "Prevent the WT00Z-1 from commanding the devices in group 4 duringthe DIM START command, set parameter 13 to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 1",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 2",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable Shade Control Group 3",
				Description: "The switch can control shade control devices if this parameter is set to 1.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "LED Transmission Indication",
				Description: "The WD500Z-1 will flicker its LED when it is transmitting to any of its groups. Parameter set to 0 = not flicker Parameter set to 1 = flicker the entire time of transmitting Parameter set to 2 = flicker for only 1 second",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Poll: minutes",
				Description: "Will poll the first node in group 1in order to keep itself synchronized with the group if this configuration parameter is set to 1. How often it will poll is configured with this parameter./nValid values: 1-255",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Poll first node in group 1",
				Description: "Will poll the first node in group 1in order to keep itself synchronized with the group if this configuration parameter is set to 1",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New015100020001() *Device{
	return &Device{
		Brand: "Sercomm",
		Product: "Z-Wave Clamp Power Meter",
		Description: "/n            /n          ",

		ManufacturerID: "0151",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "",
				Description: "",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New015100030003() *Device{
	return &Device{
		Brand: "Sercomm",
		Product: "DoorWindow Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0151",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015200030002() *Device{
	return &Device{
		Brand: "GR",
		Product: "Power Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015200030003() *Device{
	return &Device{
		Brand: "GR",
		Product: "Siren",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015200030512() *Device{
	return &Device{
		Brand: "G.R.",
		Product: "Auto Valve",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0003",
		ProductID: "0512",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0027,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015202020511() *Device{
	return &Device{
		Brand: "G.R.",
		Product: "Auto Valve",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0202",
		ProductID: "0511",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015205000001() *Device{
	return &Device{
		Brand: "G.R",
		Product: "Door/Window Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0500",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015205000003() *Device{
	return &Device{
		Brand: "G.R.",
		Product: "PIR Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0152",
		ProductType: "0500",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015400010001() *Device{
	return &Device{
		Brand: "Popp &amp; Co.",
		Product: "Z-Weather",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x009b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0089,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015400030001() *Device{
	return &Device{
		Brand: "Popp",
		Product: "Wall Plug Switch 05438",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0087,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение первого канала через",
				Description: "Если не 0, автоматически отключает реле первого канала после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Действие при получении радиокоманды выключения первого канала",
				Description: "Определяет поведение при получении радио команды выключения первого канал. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по датчику движения и отключения по прошествии определённого времени: в случае использования нескольких датчиков движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включить нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нагрузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нагрузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет, выключится",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Энергопотребление первого канала",
				Description: "Укажите потребление нагрузки в ваттах, для подсчета энергопотребления. Максимальная нагрузка 1800 Ватт.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 3500,
						Unit: "",
						Reserved: false,
						Description: "Ватт",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Цвет Выкл",
				Description: "Цвет выключенного состояния",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Красный",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Зелёный",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Синий",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Желтый",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Цвет Вкл",
				Description: "Цвет включенного состояния",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Красный",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Зелёный",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Синий",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Желтый",
					},
				},
			},
		},
	}
}
func New015401000101() *Device{
	return &Device{
		Brand: "Z-Wave.Me",
		Product: "KFOBC",
		Description: "/n            /n            /n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "0100",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005e,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 1 и 3",
				Description: "В раздельном режиме кнопка 1 работает с группой A, кнопка 3 с группой C. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме A/C - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой A, двойной с группой C.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим работы пары кнопок 2 и 4",
				Description: "В раздельном режиме кнопка 2 работает с группой B, кнопка 4 с группой D. Нажатие - Вкл, удержание - диммирование Вверх, двойное нажатие - Выкл, нажатие-удержание - Вниз. В парном режиме B/D - Вверх/Вниз соответственно. Клик - Вкл/Выкл, удержания - диммирование Вверх/Вниз. Одинарный клик работает с группой B, двойной с группой D.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Раздельно",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "В паре без двойных кликов",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "В паре с двойными кликами",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы A",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 1 (группа 1) отправится команда 10 * 1 &#43; 1(Вкл) = 11.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы B",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 2 (группа 2) отправится команда 10 * 2 &#43; 1(Вкл) = 21.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы C",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:   в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 3 (группа 3) отправится команда 10 * 1 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Действия для группы D",
				Description: "В режиме Только Включать/Выключать при диммировании Вверх отправляется команда Включить, Вниз - команда Выключить. В режиме Сцен номер сцены вычисляется так: (10 * группа &#43; ActionID), где ActionID это: 1 - Вкл, 2 = Выкл, 3 = Начало диммирования Вверх, 4 = Начало диммирования Вниз, 5 = Окончание диммирования Вверх, 6 = Окончание диммирования Вниз. Пример:  в режиме &#34;В паре без двойных кликов&#34; при нажатии на кнопку 4 (группа 2) отправится команда 10 * 2 &#43; 2(Выкл) = 22.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Включать/Выключать и Диммировать (отправлять Basic Set и Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только Включать/Выключать (отправлять Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включать всё/Выключать всё",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Отправлять Сцены",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Отправлять преднастроенные Сцены",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Управлять ближайшими устройствами",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Управлять замком",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Отправлять глобальные сцены контроллеру",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять следующие команды включить/выключит всё",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Только выключить всё",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Только включить всё",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Включить и выключить всё",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Инвертировать кнопки",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Отправлять непрошенные отчёт заряда батареек Battery Report при пробуждении",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Тому же узлу, что и оповещение от пробуждении",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Широковещательная рассылка соседним узлам",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Блокировать просыпания, немотря на настроки интервала пробуждения",
				Description: "Если брелок просыпается вдалеке от контроллера, несколько попыток связаться с контроллером приведут к бессмысленной трате батареек. Для брелока, часто находящегося вне дома рекомендуется не активировать просыпания.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Просыпания заблокированы",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Просыпается в соответствии с настройками",
					},
				},
			},
		},
	}
}
func New015401000201() *Device{
	return &Device{
		Brand: "Popp &amp; Co.",
		Product: "Popp Smoke Detector",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "0100",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Siren alarm sequence interval ",
				Description: "The  additional  siren  is  creating  a  different  acoustic  signal  differentiate  from  the /nsmoke alarm. This sound is partly on and partly off. This parameter defines the total /nlength of the interval in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 129,
						Unit: "seconds",
						Reserved: false,
						Description: "seconds (default 10)",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Siren alarm tone length",
				Description: "The  additional  siren  is  creating  a  different  acoustic  signal  differentiate  from  the /nsmoke alarm. This sound is partly on and partly off. This parameter defines the total /nlength of the sound versus silence within this interval.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "seconds",
						Reserved: false,
						Description: "seconds (default 8)",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Value of On-Command ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "seconds",
						Reserved: false,
						Description: "(default 99)",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Value of Off-Command",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "seconds",
						Reserved: false,
						Description: "(default 99)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Status of automated meshing of smoke alarms",
				Description: "This  smoke  detector  can  automatically  inform  other  smoke  detectors  of  same /ntype about smoke alarms. They will then also turn on the siren. This function is a  /nrequirement of wireless networked smoke detectors",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active (default)",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Status of automated meshing of battery alarms ",
				Description: "This  smoke  detector  can  automatically  inform  other  smoke  detectors  of  same /ntype about battery alarms. They will then also turn on the siren. This function is a  /nrequirement of wireless networked smoke detectors.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "active (default)",
					},
				},
			},
		},
	}
}
func New015411000001() *Device{
	return &Device{
		Brand: "Popp",
		Product: "123610",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "1100",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Восстанавливать состояние реле после отключения питания",
				Description: "Определяет восстанавливать ли состояние реле на то, которое было до отключения питания устройства.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Не восстанавливать. После подачи питания устройство будет в состоянии &#34;Выключено&#34;",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Восстанавливать",
					},
				},
			},
		},
	}
}
func New015411000002() *Device{
	return &Device{
		Brand: "Popp",
		Product: "123580",
		Description: "/n            /n            /n            /n          ",

		ManufacturerID: "0154",
		ProductType: "1100",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0075,
			},
			&CommandClass{
				ID: 0x0077,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Режим световой индикации",
				Description: "Режим работы светодиода",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключен",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Индикация состояния реле",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Ночной режим (противоположно состоянию реле)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Управляется классом комманд Indicator",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Авто отключение через",
				Description: "Если не 0, автоматически отключает реле после определённого пользователем времени",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "секунд",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Что делать при получении радиокоманды выключения",
				Description: "		Определяет поведение при получении радио команды выключения. Может использоваться совместно с функцией авто отключения: Игнорирование - для включения света по детектору движения и отключения по прошествии определённого времени: в случае использования нескольких детекторов движения каждый будет пытаться выключить свет сам, что приведёт к неправильной логике работы; Включть нагрузку - для включения света при нажатии на кнопки Вкл и Выкл на пульте управления и отключения по прошествии определённого времени. Выключение по кнопке будет продолжать работать (если не отключено)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Выключить нарузку",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Игнорировать",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Включить нарузку",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Включить, если нагрузка выключена, иначе выключить",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Игнорировать начальный уровень",
				Description: "Определяет игнорировать ли начальный уровень димминга в коммандах StartLevelChange (начать изменение яркости) даже если он указан или нет",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Нет",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Да",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Время диммирования",
				Description: "Время димирования при нажатии на кнопки и при получении команды Set (если она не содержит времени включения). Если не 0, то диммирование будет плавным, что сбережёт лампочку дольше.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Мгновенно",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Время долгого диммирования",
				Description: "Время димирования при удержании кнопок и при получении команды StartLevelChange (начать изменение яркости; если она не содержит времени включения).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "секунды",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Устанавливать максимальный уровень яркости при включении",
				Description: " Определяет устанавливать ли максимальную яркость при получении команды Включить. По умолчанию по команде /n/n	Включить диммер восстанавливает последний уровень яркости. Настройка этого параметра позволяет устанавливать м/n/n	аксимальную яркость по второй команде Включить (если уже включен) или всегда включать диммер на максимальную яркость",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "last dim level",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "maximum dim level when already turned on",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Always maximum dim level",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Время диммирования Баю-бай",
				Description: "		Время димирования при двойном нажатии на кнопку выключения для функции Баю-бай. Данная функция работает только если нагрузка управляется одинарным нажатием или удержанием кнопок. Если включено, устройство будет ждать характерное время нажатия второго нажатия. Данная функция приведёт к небольшой задержке при одинарном нажати /n/n		",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Отключено",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "в минутах",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Конечный уровень диммирования функции Баю-бай",
				Description: "Конечный уровень, до которого диммировать функции Баю-бай. Используйте 0 для полного выключения света.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "%",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Характерное время нажатия",
				Description: "Харакерное время для отличия нажатия, удержания, двойного и тройного нажатий",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "в единицах 10мс",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Ограничивать минимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 95,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Ограничивать максимальный уровень яркости",
				Description: "Максимальный уровень должен быть выше минимального",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Работать как реле: только выключен или на полную",
					},
					ConfigValue{
						From: 10,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Ограничить уровнем",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Включаться на заданном уровне яркости",
				Description: "Эта функция работает, только если в параметре &#34;Устанавливать максимальный уровень яркости при включении&#34; выбрано &#34;Нет&#34; или &#34;Если уже включен&#34;, иначе этот параметр игнорируется и свет всегда будет включаться на 100%",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Использовать предыдущий уровень яркости",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Задать уровень %",
					},
				},
			},
			ConfigParam{
				ID: 51,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза до импульса",
				Description: "	Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 52,
				Type: "",
				Size: 1,
				Default: 28,
				Name: "Пауза после импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 60,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 53,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Ширина импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат! Для диммируемых светодиодных и энергосберегающих газоразрядных ламп используйте значение по умолчанию.",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 20,
						Unit: "10/156 ms",
						Reserved: false,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 54,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Тип импульса",
				Description: "Важно: не трогайте эти параметры, если вы не уверены, что они значат!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Длинный импульс",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Короткий импульс",
					},
				},
			},
		},
	}
}
func New015900010001() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "Flush dimmer",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0030,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 1 switch type",
				Description: "The parameter defines the type of the used switch.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch type (push button)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 contact type",
				Description: "The parameter defines the contact type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normally open) input type",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normally close) input type",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 3 contact type",
				Description: "The parameter defines the contact type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normally open) input type",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normally close) input type",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Deactivate/Activate ALL ON / ALL OFF",
				Description: "The parameter defines the status of the ALL ON/ALL OFF functions./nDimmer module responds to commands ALL ON/n/ ALL OFF that may be sent by the main/ncontroller or by other controller belonging to the/nsystem.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active, ALL OFF is not/nactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active, ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF is not active",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "State of device after power failure",
				Description: "The parameter defines if the state of the device should be either saved or not in case of a power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush dimmer module saves its state/nbefore power failure (it returns to the last/nposition saved before a power failure).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush dimmer module does not save the/nstate after a power failure, it returns to &#34;off&#34;/nposition.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Power report on power change",
				Description: "The parameter defines if a power report should be sent depending on the predefined power change in percent.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Reporting enabled./nPower report is send (push) only when actual/npower in Watts in real time changes for more/nthan set percentage comparing to previous/nactual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Power report by time interval",
				Description: "A power report is sent based on the  predefined time interval in seconds.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "",
						Reserved: false,
						Description: "1 second – 65535 seconds. Reporting enabled. Power report is send with time interval set by entered value.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum dimming value",
				Description: "The parameter defines the maximum dimming value./nNOTE: The maximum level may not be lower than the minimum level! 99% max. dimming value is defined by Z-Wave multilevel device class.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "2% – 99%, step is 1%. Maximum dimming values is set by entered value.",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Minimum dimming value",
				Description: "The parameter defines the minimum dimming value./nNOTE: The maximum level may not be lower than the minimum level! 1% min. dimming value is defined by Z-Wave multilevel device class.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "%",
						Reserved: false,
						Description: "1% – 98%, step is 1%. Minimum dimming values is set by entered value.",
					},
				},
			},
			ConfigParam{
				ID: 65,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Dimming time (soft on/off)",
				Description: "Set value means time of moving the Dimmer between min. and max. dimming values by short press of push button I1 or controlled through UI./nDefault value is 100 (Dimming time between min. and max. dimming values is 1s)./n1 - 255 = 10 mseconds – 2550 mseconds (2,55s), step is 10 mseconds",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the dimming time.",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dimming time when key pressed",
				Description: "Time of moving the Dimmer between min. and max dimming values by continues hold of push button I1./n1- 255 = 1 second – 255 seconds",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "Define the dimming time.",
					},
				},
			},
		},
	}
}
func New015900010051() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "Flush dimmer ZMNHDD1",
		Description: "/n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0001",
		ProductID: "0051",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0059,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 1 switch type",
				Description: "The parameter defines the type of the used switch.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 - mono-stable switch type (push button) – button quick press turns between previous set dimmer value and zero",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 switch type",
				Description: "The parameter defines the type of the used switch.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 - mono-stable switch type (push button) – button quick press turns between previous set dimmer value and zero",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 contact type",
				Description: "The parameter defines the type contact type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normally open) input type",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normally close) input type",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 3 contact type",
				Description: "The parameter defines the type contact type.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normally open) input type",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normally close) input type",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Deactivate/Activate ALL ON / ALL OFF",
				Description: "The parameter defines the status of the ALL ON/ALL OFF functions./nDimmer module responds to commands ALL ON/n/ ALL OFF that may be sent by the main/ncontroller or by other controller belonging to the/nsystem.",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active, ALL OFF is not/nactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active, ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF is not active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning OFF output after set time ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto OFF disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32536,
						Unit: "",
						Reserved: false,
						Description: "/n                     1second - 32536 seconds Auto OFF enabled with/ndefine time, step is 1 second.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning ON output after set time ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto ON disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32536,
						Unit: "",
						Reserved: false,
						Description: "/n                     1second - 32536 seconds Auto ON enabled with/ndefined time, step is 1 second.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable/Disable 3way switch",
				Description: "Dimming is done by push button or switch connected to I1 (by default)./nEnabling 3way switch, dimming can be controlled by push button or/nswitch connected to I1 and I2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "single push button (connected to I1)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "3 way switch (connected to I1 and I2)",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Enable/Disable Double click function",
				Description: "If Double click function is enabled, a fast double click on the push/nbutton will set dimming power at maximum dimming value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "double click disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "double click enabled",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the device after a power/nfailure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush dimmer module saves its state before power failure (it/nreturns to the last position saved before a power failure).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush dimmer module does NOT save the state after a power/nfailure, it returns to &#34;off&#34; position.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Power reporting in Watts on power change",
				Description: "Set value means percentage, set value from 0 - 100=0% - 100%. NOTE: if power changed is less than 1W, the report is not sent (pushed), independent of percentage set. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "reporting disabled.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Reporting enabled./nPower report is send (push) only when actual/npower in Watts in real time changes for more/nthan set percentage comparing to previous/nactual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Power reporting in Watts by time interval",
				Description: "Set value means time interval (0 - 32767) in seconds, when power report is sent. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "reporting disabled.",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "%",
						Reserved: false,
						Description: "Reporting enabled./nPower report is sent (push) only when actual/npower in Watts in real time changes for more/nthan set percentage comparing to previous/nactual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Minimum dimming value",
				Description: "NOTE: The minimum level may not be higher than the maximum level!/n1% min. dimming value is defined by Z-Wave multilevel device class. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "",
						Reserved: false,
						Description: "1% - 98%, step is 1%. Minimum dimming values is set/nby entered value.",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum dimming value",
				Description: "NOTE: The maximum level may not be lower than the minimum level!/n99% max. dimming value is defined by Z-Wave multilevel device class.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: " 2% - 99%, step is 1%. Maximum dimming values is set/nby entered value.",
					},
				},
			},
			ConfigParam{
				ID: 65,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Dimming time (soft on/off)",
				Description: "Set value means time of moving the Dimmer between min. and max./ndimming values by short press of push button I1 or controlled through/nUI (BasicSet).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: " 100 mseconds - 2550 mseconds (2,55s), step is 100 mseconds.",
					},
				},
			},
			ConfigParam{
				ID: 66,
				Type: "",
				Size: 2,
				Default: 3,
				Name: "Dimming time when key pressed",
				Description: "Time of moving the Dimmer between min. and max dimming values by/ncontinues hold of push button I1 or associated device.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "1 second – 255 seconds.",
					},
				},
			},
			ConfigParam{
				ID: 67,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Ignore start level",
				Description: "This parameter is used with association group 3./nA receiving device SHOULD respect the start level if the Ignore Start/nLevel bit is 0. A receiving device MUST ignore the start level if the/nIgnore Start Level bit is 1",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "respect start level",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ignore start level",
					},
				},
			},
			ConfigParam{
				ID: 68,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Dimming duration",
				Description: "This parameter is used with association group 3./nThe Duration field MUST specify the time that the transition should/ntake from the current value to the new target value. A supporting/ndevice SHOULD respect the specified Duration value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "dimming duration according to parameter 66",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "1 - 127 (from 1 to 127 seconds).",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable / Disable Endpoints I2 or select/nNotification Type and Event",
				Description: "Enabling I2 means that Endpoint (I2) will be present on UI. Disabling it/nwill result in hiding the endpoint according to the parameter set value./nAdditionally, a Notification Type and Event can be selected for the/nendpoint. /n/nEndpoint device type selection:/n/n** notification sensor (1 - 6):/nGENERIC_TYPE_SENSOR_NOTIFICATION,/nSPECIFIC_TYPE_NOTIFICATION_SENSOR /n/n** sensor binary (9): /nGENERIC_TYPE_SENSOR_BINARY,/nSPECIFIC_TYPE_NOT_USED.  /n/nNOTE 1: After parameter change, first exclude module (without setting/nparameters to default value) and then re-include the module! /n/nNOTE 2: When the parameter is set to value 9 the notifications are/nsend for Home Security. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Home Security; Motion Detection, unknown loc",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Carbon Monoxide; Carbon Monoxide detected, unknown/nlocation.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Carbon Dioxide; Carbon Dioxide detected, unknown location.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Water Alarm; Water Leak detected, unknown loc.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Heat Alarm; Overheat detected, unknown loc.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Smoke Alarm; Smoke detected, unknown loc.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Endpoint, I2 disabled.",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Sensor binary",
					},
				},
			},
			ConfigParam{
				ID: 101,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable / Disable Endpoints I3 or select/nNotification Type and Event",
				Description: "Enabling I3 means that Endpoint (I3) will be present on UI. Disabling it/nwill result in hiding the endpoint according to the parameter set value./nAdditionally, a Notification Type and Event can be selected for the/nendpoint. /n/nEndpoint device type selection:/n/n** notification sensor (1 - 6):/nGENERIC_TYPE_SENSOR_NOTIFICATION,/nSPECIFIC_TYPE_NOTIFICATION_SENSOR /n/n** sensor binary (9): /nGENERIC_TYPE_SENSOR_BINARY,/nSPECIFIC_TYPE_NOT_USED.  /n&lt;p&gt;/nNOTE 1: After parameter change, first exclude module (without setting/nparameters to default value) and then re-include the module! /n/nNOTE 2: When the parameter is set to value 9 the notifications are/nsend for Home Security. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Home Security; Motion Detection, unknown loc",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Carbon Monoxide; Carbon Monoxide detected, unknown/nlocation.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Carbon Dioxide; Carbon Dioxide detected, unknown location.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Water Alarm; Water Leak detected, unknown loc.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Heat Alarm; Overheat detected, unknown loc.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Smoke Alarm; Smoke detected, unknown loc.",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Endpoint, I3 disabled.",
					},
					ConfigValue{
						From: 9,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "Sensor binary",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 2,
				Default: 32536,
				Name: "Temperature sensor offset settings/nNotification Type and Event",
				Description: "Set value is added or subtracted to actual measured value by sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 32536,
						To: 32536,
						Unit: "",
						Reserved: false,
						Description: "32536 - offset is 0.0C",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "From 1 to 100 - value from 0.1 °C to 10.0 °C is added to actual/nmeasured temperature. ",
					},
					ConfigValue{
						From: 1001,
						To: 1100,
						Unit: "",
						Reserved: false,
						Description: "From 1001 to 1100 - value from -0.1 °C to -10.0 °C is subtracted/nto actual measured temperature ",
					},
				},
			},
			ConfigParam{
				ID: 120,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Digital temperature sensor reporting",
				Description: "If digital temperature sensor is connected, module reports measured/ntemperature on temperature change defined by this parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "reporting  disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "1 - 127 = 0,1°C - 12,7°C, step is 0,1°C.",
					},
				},
			},
		},
	}
}
func New015900020001() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "ZMNHBA2",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0073,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "switch type - Input 1",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "switch type - Input 2",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 127,
				Name: "Activate / deactivate functions ALL ON/ALL OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On is active - All Off is not active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relays Q1 and Q2 after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module saves its state before power failure (it returns to the last position saved before a power failure)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module does not save the state after a power failure, it returns to &#34;off&#34; position.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 78,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Forced Flush shutter calibration",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Calibration",
					},
				},
			},
		},
	}
}
func New015900020002() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "ZMNHAA2",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0073,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "switch type - Input 1",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "switch type - Input 2",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Activate / deactivate functions ALL ON/ALL OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On is active - All Off is not active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relays Q1 and Q2 after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module saves its state before power failure (it returns to the last position saved before a power failure)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module does not save the state after a power failure, it returns to &#34;off&#34; position.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
		},
	}
}
func New015900020051() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "Flush 2 relays",
		Description: "/n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0002",
		ProductID: "0051",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Input 1 switch type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch type (push button)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 switch type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch type (push button)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type ",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Activate / deactivate functions ALL ON/ALL OFF",
				Description: "On/Off module responds to commands ALL ON / ALL OFF that may be sent by the main controller or by other controller belonging to the system. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active ALL OFF is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active ALL OFF is not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning off output Q1 after set time",
				Description: "When relay Q1 is ON it goes automatically OFF after time defined by this parameter. Timer is reset to zero each time the module receive ON command regardless from where it comes (push button, associated module, controller,..)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto OFF disabled",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "/n32535 seconds (325,35s) Auto OFF enabled with define time, step is 1s or 10ms according to parameter nr.15/n",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning on output Q1 after set time",
				Description: "When relay is OFF it goes automatically ON after time defined by this parameter. Timer is reset to zero each time the module receive OFF command regardless from where it comes (push button, associated module, controller,..)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto ON disabled",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "/n32536 seconds (325,35s) Auto ON enabled with define time, step is 1s or 10ms according to parameter nr.15/n",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Time Unit",
				Description: "Automatic turning off / on seconds or milliseconds selection. Note that parameter is valid for both outputs Q1, Q2 and is the same for turning off or on. /n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "seconds selected",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "milliseconds selected",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relay after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relay module saves its state before power failure (it returns to the last position saved before a power failure)./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relay module does not save the state after a power failure, it returns to &#34;off&#34; position./n",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Q1 Switch selection",
				Description: "Set value means the type of the device that is connected to the output. The device type can be normally open (NO) or normally close (NC)./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 0V (NC).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "/nWhen system is turned off the output is 230V or 24V (NO)./n",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 2,
				Default: 32536,
				Name: "Temperature sensor offset settings",
				Description: "Set value is added or subtracted to actual measured value by sensor./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "offset is 0.0°C",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "/nValue from 0.1 °C to 10.0 °C is added to actual measured temperature./n",
					},
					ConfigValue{
						From: 1001,
						To: 1100,
						Unit: "",
						Reserved: false,
						Description: "/nValue from -0.1 °C to -10.0 °C is subtracted to actual measured temperature./n",
					},
				},
			},
			ConfigParam{
				ID: 120,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Digital temperature sensor reporting",
				Description: "If digital temperature sensor is connected, module reports measured temperature on temperature change defined by this parameter./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "x 0,1°C",
						Reserved: false,
						Description: "Define the temperature change that is reported.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning off output Q2 after set time ",
				Description: "When relay Q2 is ON it goes automatically OFF after time defined by this parameter. Timer is reset to zero each time the module receive ON command regardless from where it comes (push button, associated module, gateway,..).  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto OFF disabled ",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "",
						Reserved: false,
						Description: "1second (0,01s) – 32535 seconds (325,35s) Auto OFF enabled with define time, step is 1s or 10ms according to parameter nr.15",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning on output Q2 after set time ",
				Description: "When relay Q2 is OFF it goes automatically ON after time defined by this parameter. Timer is reset to zero each time the module receive OFF command regardless from where it comes (push button, associated module, gateway,..).  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto ON disabled ",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "",
						Reserved: false,
						Description: "1second (0,01s) – 32536 seconds (325,35s) Auto ON enabled with define time, step is 1s or 10ms according to parameter nr.15",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Power reporting in Watts on power change for Q1",
				Description: "Set value means percentage, set value from 0 – 100 = 0% - 100%. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting Disabled ",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Power reporting in Watts on power change for Q2",
				Description: "Set value means percentage, set value from 0 – 100 = 0% - 100%. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting Disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Reporting enabled. Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "Set value means time interval (0 – 32535) in seconds, when power report is send. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting Disabled",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "sec",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value.",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Power reporting in Watts by time interval for Q2",
				Description: "Set value means time interval (0 – 32535) in seconds, when power report is send. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting Disabled",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "sec",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. ",
					},
				},
			},
			ConfigParam{
				ID: 64,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Q2 Switch selection",
				Description: "Set value means the type of the device that is connected to the PWM output. The device type can be normally open (NO) or normally close (NC).  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 0V (NC).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 230V (NO).",
					},
				},
			},
		},
	}
}
func New015900020053() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "Flush 1D Relay",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0002",
		ProductID: "0053",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Input 1 switch type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable switch type (push button)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable switch type ",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 contact type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normally open) input type",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normally close) input type",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 2,
				Default: 255,
				Name: "Activate / deactivate functions ALL ON/ALL OFF",
				Description: "Flush 1D relay module responds to commands ALL ON / ALL OFF that may be sent by the main controller or by other controller belonging to the system. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active ALL OFF is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ALL ON is not active ALL OFF active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active ALL OFF is not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ALL ON active, ALL OFF active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning off output after set time",
				Description: "When relay is ON it goes automatically OFF after time defined by this parameter. Timer is reset to zero each time the module receive ON command regardless from where it comes (push button, associated module, controller,..).  ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto OFF disabled ",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "32535 seconds (325,35s) Auto OFF enabled with define time, step is 1s or 10ms according to parameter nr.15",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Automatic turning on output after set time",
				Description: "When relay is OFF it goes automatically ON after time defined by this parameter. Timer is reset to zero each time the module receive OFF command regardless from where it comes (push button, associated module, controller,..). ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto ON disabled ",
					},
					ConfigValue{
						From: 1,
						To: 32535,
						Unit: "x 0,01 sec",
						Reserved: false,
						Description: "32536 seconds (325,35s) Auto ON enabled with define time, step is 1s or 10ms according to parameter nr.15",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Time Unit",
				Description: "Automatic turning off / on seconds or milliseconds selection",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "seconds selected",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "milliseconds selected",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relay after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 1D relay module saves its state before power failure (it returns to the last position saved before a power failure).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 1D relay module does not save /nthe state after a power failure, it returns to  /n&#34;off&#34; position./n",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Output Switch selection",
				Description: "Set value means the type of the device that is connected to the output. The device type can be normally open (NO) or normally close (NC). ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 0V (NC).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 230V or 24V (NO).",
					},
				},
			},
			ConfigParam{
				ID: 100,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Enable / Disable Endpoint I2 or select Notification Type and Event",
				Description: "Enabling I2, means that Endpoint (I2) will be present on UI. /nDisabling it will result in hiding the endpoint according to the parameter set value. Additionally, a Notification Type and Event can be selected for the endpoint. /nNOTE: After parameter change module has to be reincluded into the network for the setting to take effect!",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Endpoint, I2 disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Home Security; Motion Detection, unknown location",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Carbon Monoxide; Carbon Monoxide detected, unknown location.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Carbon Dioxide; Carbon Dioxide detected, unknown location.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Water Alarm; Water Leak detected, unknown location.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Heat Alarm; Overheat detected, unknown location.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Smoke Alarm; Smoke detected, unknown location.",
					},
				},
			},
			ConfigParam{
				ID: 110,
				Type: "",
				Size: 2,
				Default: 32536,
				Name: "Temperature sensor offset settings",
				Description: "Set value is added or subtracted to actual measured value by sensor. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "offset is 0.0°C",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Value from 0.1 °C to 10.0 °C is added to actual measured temperature.",
					},
					ConfigValue{
						From: 1001,
						To: 1100,
						Unit: "",
						Reserved: false,
						Description: "Value from -0.1 °C to -10.0 °C is subtracted to actual measured temperature.",
					},
				},
			},
			ConfigParam{
				ID: 120,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Digital temperature sensor reporting",
				Description: "If digital temperature sensor is connected, module reports measured temperature on temperature change defined by this parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "x 0,1°C",
						Reserved: false,
						Description: "Define the temperature change that is reported.",
					},
				},
			},
		},
	}
}
func New015900030002() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "ZMNHCA2",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0073,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "switch type - Input 1",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "switch type - Input 2",
				Description: "defines the switch typ (mono/bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 127,
				Name: "Activate / deactivate functions ALL ON/ALL OFF",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On is active - All Off is not active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Automatic turning Off relay Q2 after set time ",
				Description: "Defines the time after the relay turning off in ms",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Auto Off disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Time in ms (Max: 65535)",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relays Q1 and Q2 after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module saves its state before power failure (it returns to the last position saved before a power failure)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module does not save the state after a power failure, it returns to &#34;off&#34; position.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 41,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change for Q2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 78,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Forced Flush shutter calibration",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "inactive",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Calibration",
					},
				},
			},
		},
	}
}
func New015900050001() *Device{
	return &Device{
		Brand: "Qubino",
		Product: "ZMNHIA2",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0159",
		ProductType: "0005",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0073,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "0",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "switch type - Input 1",
				Description: "Defines the switchtype (mono-, bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Schaltertyp - Input 2",
				Description: "Defines the switchtype (mono-, bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Schaltertyp - Input 3",
				Description: "Defines the switchtype (mono-, bi-stable)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "mono-stable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "bi-stable",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 2 contact-type",
				Description: "Defines the contact-type (NO/NC)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normal open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normal close)",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Input 3 contact-type",
				Description: "Defines the contact-type (NO/NC)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "NO (normal open)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "NC (normal close)",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Aktiviert/Deaktiviert alle Funktionen",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active - All Off is active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On is active - All Off is not active",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 65535,
				Name: " Set point set by I2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 990,
						Unit: "",
						Reserved: false,
						Description: "0.0 °C to 99.0 °C",
					},
					ConfigValue{
						From: 1001,
						To: 1150,
						Unit: "",
						Reserved: false,
						Description: "-0.1 °C to -15.0 °C",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 65535,
				Name: " Set point set by I2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 990,
						Unit: "",
						Reserved: false,
						Description: "0.0 °C to 99.0 °C",
					},
					ConfigValue{
						From: 1001,
						To: 1150,
						Unit: "",
						Reserved: false,
						Description: "-0.1 °C to -15.0 °C",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Saving the state of the relay after a power failure",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module saves its state before power failure (it returns to the last position saved before a power failure)",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flush 2 relays module does not save the state after a power failure, it returns to &#34;off&#34; position.",
					},
				},
			},
			ConfigParam{
				ID: 40,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power reporting in Watts on power change",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Reporting disabled",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power report is send (push) only when actual power in Watts in real time changes for more than set percentage comparing to previous actual power in Watts, step is 1%.",
					},
				},
			},
			ConfigParam{
				ID: 42,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Power reporting in Watts by time interval for Q1",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Report disabled",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "ms",
						Reserved: false,
						Description: "Reporting enabled, Power report is send with time interval set by entered value. (Max: 65535ms)",
					},
				},
			},
			ConfigParam{
				ID: 43,
				Type: "",
				Size: 4,
				Default: 132,
				Name: "Hysteresis On",
				Description: "This parameter defines temperature min difference between real measured temperature and set-point temperature to turn device on. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "0.0 °C to 12.7 °C",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "- 0.1 °C to -12.7 °C",
					},
				},
			},
			ConfigParam{
				ID: 44,
				Type: "",
				Size: 4,
				Default: 132,
				Name: "Hysteresis Off",
				Description: "This parameter defines temperature min difference between real measured temperature and set-point temperature to turn device off. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "0.0 °C to 12.7 °C",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "- 0.1 °C to -12.7 °C",
					},
				},
			},
			ConfigParam{
				ID: 45,
				Type: "",
				Size: 4,
				Default: 50,
				Name: "Antifreeze",
				Description: "Set value means at which temperature the device will be turned on even if the thermostat was manually set to off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "0.0 °C to 12.7 °C",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "- 0.1 °C to -12.6 °C",
					},
				},
			},
			ConfigParam{
				ID: 60,
				Type: "",
				Size: 4,
				Default: 50,
				Name: "Too low temperature limit",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "0.1°C – 100.0°C, step is 0.1°C",
					},
				},
			},
			ConfigParam{
				ID: 61,
				Type: "",
				Size: 4,
				Default: 50,
				Name: "Too high temperature limit",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "0.1°C – 100.0°C, step is 0.1°C",
					},
				},
			},
			ConfigParam{
				ID: 63,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switch selection",
				Description: "Set value means the type of the device that is connected to the relay output. (NO/NC)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 0 V",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When system is turned off the output is 230 V",
					},
				},
			},
		},
	}
}
func New015a10070002() *Device{
	return &Device{
		Brand: "Jintaobao",
		Product: "Curtain Motor",
		Description: "/n            /n          ",

		ManufacturerID: "015a",
		ProductType: "1007",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Motor Open, Go to Direction B",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Motor Stop",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Motor Close, Go to Direction A",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Motor Position",
				Description: "Return motor current position",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Set the parameter to move motor to desired position.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Return motor current position",
				Description: "Get only",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the value.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Motor revert direction",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Clear motor lead tail endpoint setting",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Return motor status flag",
				Description: "Get Only",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "motor is closing, go to direction A",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "motor is opening, go to direction B",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "motor endpoint A has setting",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "motor endpoint B has setting",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "direction revert",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Enable manual pulling function",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Disable manual pulling function",
				Description: "Set only, any value possible",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New015e80150001() *Device{
	return &Device{
		Brand: "Locstar",
		Product: "Single latch door lock",
		Description: "/n            /n          ",

		ManufacturerID: "015e",
		ProductType: "8015",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0022,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004c,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0077,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015f00000000() *Device{
	return &Device{
		Brand: "MCOHome ",
		Product: "Touch Panel Switch ",
		Description: "/n            /n            /n          ",

		ManufacturerID: "015f",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015f00010001() *Device{
	return &Device{
		Brand: "Mcohome",
		Product: "Mini Energy Dimmer",
		Description: "/n            /n          ",

		ManufacturerID: "015f",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "0x00: Switch(2 state switch mode)/n0x01: Button( Momentary button mode)/n",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New015f00020001() *Device{
	return &Device{
		Brand: "Mcohome",
		Product: "Mini Energy Switch",
		Description: "/n            /n          ",

		ManufacturerID: "015f",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "0x00: Switch(2 state switch mode)/n0x01: Button( Momentary button mode)/n",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New015f31020202() *Device{
	return &Device{
		Brand: "MCOHome",
		Product: "Touch Panel Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "015f",
		ProductType: "3102",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015f41020201() *Device{
	return &Device{
		Brand: "MCOHome",
		Product: "Touch Panel Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "015f",
		ProductType: "4102",
		ProductID: "0201",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015f41020202() *Device{
	return &Device{
		Brand: "MCOHome",
		Product: "Touch Panel Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "015f",
		ProductType: "4102",
		ProductID: "0202",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New015f51020103() *Device{
	return &Device{
		Brand: "MCOHome ",
		Product: "Touch Panel Switch ",
		Description: "/n            /n          ",

		ManufacturerID: "015f",
		ProductType: "5102",
		ProductID: "0103",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New016000000000() *Device{
	return &Device{
		Brand: "We.R",
		Product: "Z-Wave Dongle",
		Description: "/n            /n          ",

		ManufacturerID: "0160",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New016330010301() *Device{
	return &Device{
		Brand: "Prowell",
		Product: "ZW-702",
		Description: "/n            /n          ",

		ManufacturerID: "0163",
		ProductType: "3001",
		ProductID: "0301",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0020,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x004e,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New016500010001() *Device{
	return &Device{
		Brand: "NodOn",
		Product: "Z-Wave&#43; Smart Plug ON/OFF",
		Description: "/n            /n          ",

		ManufacturerID: "0165",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Default State",
				Description: "This parameter defines the status of the Smart Plug/nafter a Power Failure or after being plugged.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Status before Power Failure",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power Failure",
				Description: "This parameter is to set-up the Power Failure / Recover/nnotification and the associated group/n(Groups 4, 5, 6, 7, 8).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 67,
						Unit: "",
						Reserved: false,
						Description: "The value may be the sum of available values./nFor example, if you want to activate Power Failure and/nenable group 4 &amp; 5, the parameter value is 1&#43;2&#43;4=7./n/n1 = Power Failure detection disable/n2 = Power Failure enable (report to Lifeline only)/n3 = Enable group 4/n4 = Enable group 5/n8 = Enable group 6/n16 = Enable group 7/n32 = Enable group 8",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Follow State",
				Description: "This parameter allows to enable or deactivate Group 2/n&amp; Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "This parameter allows to enable or deactivate Group 2/n&amp; Group 3./n/nDESCRIPTION:/n0 = Group 2 &amp; Group 3 disable/n1 = Group 2 enable/n2 = Group 3 enable",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Always On",
				Description: "This parameter forces the Smart Plug status to be ON./nWhile enable it is not possible to switch OFF the plug/n(local or wireless).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Always ON disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Always ON enable",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 1",
				Description: "The NodOn® Smart Plug embeds Smart Alarm/nmanagement features, in order to react to different/nkinds of Notifications and Events (According to/n“Notification V1” command class)/nUp to 8 Alarms can be configured, through Configuration/nparameters #5 to #20./nFor each Alarm, the set-up is done through 2/nconfiguration parameters./nThis parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type1",
				Description: "This parameter is to set the Alarm Specifications./nIn order to configure properly each alarm, please use/nyour Home Automation Gateway interface or our/nonline form at :/nwww.nodon.fr/support/asp3_alarm",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 2",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type2",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 3",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type3",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 4",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type4",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 5",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type5",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 6",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type6",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 7",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type7",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Alarm Type 8",
				Description: "This parameter is to set the Alarm Type.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "ALARM SPECIFICATIONS Type8",
				Description: "This parameter is to set the Alarm Specifications.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New016500010003() *Device{
	return &Device{
		Brand: "NodOn",
		Product: "Z-Wave Plus Micro Smart Plug ON/OFF",
		Description: "/n            /n          ",

		ManufacturerID: "0165",
		ProductType: "0001",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Default State",
				Description: "This parameter defines the status of the Micro Smart Plug after a power outage/nor after being plugged.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Status before power outage",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Follow State",
				Description: "This parameter allows to enable or disable Group 2 &amp; Group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Group 2 &amp; Group 3 disable",
					},
					ConfigValue{
						From: 1,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "1=Group 2 enable; 2=Group 3 enable; The value may be the sum of available values./nFor example, if you want to enable Group 2 &amp; 3, the parameter value is 1&#43;2=3. ",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Always On",
				Description: "This parameter forces the Micro Smart Plug status to be ON. While enable it is/nnot possible to switch OFF the plug (local or wireless).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Always ON disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Always ON enable",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Power Auto-Sending Report",
				Description: "This parameter will send a power report automatically if the power value/nchanges of x % W (Watt) compared to the last report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power Auto-Polling Report Disable",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Power Auto-Polling Report Enable with 1% (to100%)/ndifferential",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 2,
				Default: 2000,
				Name: "Overload Report",
				Description: "This parameter will switch off the Micro Smart Plug in case the power is above x/nW (Watt) and send an alarm to the primary controller./nThis parameter has the highest execution priority between all the metering/nconfigurations for security reason.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Overload Report Disable (Not Recommended)",
					},
					ConfigValue{
						From: 1,
						To: 2000,
						Unit: "W",
						Reserved: false,
						Description: "Overload Report enable with a upper limit of 1 W/n(to 2000 W)",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 2,
				Default: 1000,
				Name: "Energy Auto-Sending Report",
				Description: "This parameter will send a new energy report automatically if the energy value/nchanges of x Wh (Watt-hour) compared to the last report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Energy Auto-Polling Report Disable",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "Wh",
						Reserved: false,
						Description: "Energy Auto-Polling Report enable with 1 Wh (to/n65535 Wh) diffential",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 2,
				Default: 3600,
				Name: "Metering Pulse",
				Description: "Whatever other metering reports, this parameter will send one power and/none energy report to the lifeline every x s (Seconds).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Metering Pulse disable",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Metering Pulse enable and send report every/n1 s (to 65535 s)",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 20,
				Name: "Power High Threshold",
				Description: "This parameter defines the High Threshold power value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power High Threshold disable",
					},
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "W",
						Reserved: false,
						Description: "Power High Threshold enable/nwith the value from 1 W (to 65535 W)",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Power Low Threshold",
				Description: "This parameter defines the Low Threshold power value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power Low Threshold disable",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Power Low Threshold enable/nwith the value from 1 W (to 65535 W)",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 7,
				Name: "Power Threshold Action",
				Description: "This parameter will define the Micro Smart Plug actions if the power Low and/nHigh Threshold are reached.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power Threshold Action is disable.",
					},
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "1=Power High Threshold Action is enable/nand send the command OFF to Group 9; 3=Power High Threshold Action is enable/nand send the command ON to Group 9; 4=Power Low Threshold Action is enable/nand send the command OFF to Group 10; 12=Power Low Threshold Action is enable/nand send the command ON to Group 10; The value may be the sum of available values./nFor example, if you want:/n- Power High Threshold Action is enable and sent ON to Group 9(3)/n- Power Low Threshold Action is enable and sent OFF to Group 10 (4)/nthe parameter value must be 3&#43;4=7.",
					},
				},
			},
		},
	}
}
func New016500020001() *Device{
	return &Device{
		Brand: "NodOn®",
		Product: "OCTAN Remote",
		Description: "/n            /n          ",

		ManufacturerID: "0165",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Mono",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Duo",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Mono",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Duo",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE TYPE",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Central Scene",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Activation",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No LED",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash Blue after button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Blinking to confirm command",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both options above (1&amp;2)",
					},
				},
			},
		},
	}
}
func New016500020002() *Device{
	return &Device{
		Brand: "NodOn®",
		Product: "Soft Remote",
		Description: "/n            /n          ",

		ManufacturerID: "0165",
		ProductType: "0002",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Mono",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Duo",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Mono",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Duo",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE TYPE",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Central Scene",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Scene Activation",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No LED",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash Blue after button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Blinking to confirm command",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both options above (1&amp;2)",
					},
				},
			},
		},
	}
}
func New016500020003() *Device{
	return &Device{
		Brand: "NodOn®",
		Product: "Wall Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0165",
		ProductType: "0002",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 1&amp;3 PROFILE",
				Description: "To set-up the profile of buttons 1 &amp; 3",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTONS 2&amp;4 PROFILE",
				Description: "To set-up the profile of buttons 2 &amp; 4",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "MONO",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "DUO",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "SCENE TYPE",
				Description: "To choose the way of sending Scene to the gateway",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "CENTRAL SCENE",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SCENE ACTIVATION",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 1 CONFIGURATION",
				Description: "To set-up the how button 1 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 2",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 2 CONFIGURATION",
				Description: "To set-up the how button 2 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 3",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 3 CONFIGURATION",
				Description: "To set-up the how button 3 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 4",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "BUTTON 4 CONFIGURATION",
				Description: "To set-up the how button 4 behaves, when set in MONO Profile",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Control Group 5",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All Switch ON",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All Switch OFF",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED MANAGEMENT",
				Description: "How to set up LED behaviour",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No LED",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Flash Blue after button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Blinking to confirm command",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Both options above (1&amp;2)",
					},
				},
			},
		},
	}
}
func New016601000100() *Device{
	return &Device{
		Brand: "Swiid",
		Product: "Cord Switch",
		Description: "/n            /n            /n          ",

		ManufacturerID: "0166",
		ProductType: "0100",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Switchmodus",
				Description: "Select the Switch-mode/nThe Value 255 is the normal-mode(switch on and off)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch off only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch off only",
					},
				},
			},
		},
	}
}
func New017100010001() *Device{
	return &Device{
		Brand: "WeBeHome Home Gateway 900",
		Product: "Home Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0171",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New017300030002() *Device{
	return &Device{
		Brand: "Leak Gopher",
		Product: "Z-WAVE Valve controller",
		Description: "/n            /n          ",

		ManufacturerID: "0173",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New017500010011() *Device{
	return &Device{
		Brand: "devolo",
		Product: "Metering Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0175",
		ProductType: "0001",
		ProductID: "0011",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 720,
				Name: "Watt Meter",
				Description: "If the setting is configured for 1hour (set value =720), the Home Control Metering/nPlug will report its instant power consumption every 1 hour to Group1 node. The/nmaximum interval to report its instant power consumption is 45 hours/n(5s*32767/3600=45hr).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval (720*5s=3600s=1 hour).",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 6,
				Name: "KWH Meter Report Period",
				Description: " If the setting is configured for 1hour (set value =6), the Home Control Metering Plug/nwill report its Accumulated Power Consumption (KW/h) every 1 hour to Group1/nnode. The maximum interval to report its Accumulated Power Consumption/n(KW/h) is 227.55 days (10min*32767/1440=227.55 days).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval (6*10min=1 hour).",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 1300,
				Name: "Threshold of current for Load caution",
				Description: "This is a warning when the current of load over the preset threshold value, if the/nsetting value is 1300, when the load current of Relay1 over this value, Home/nControl Metering Plug/nwill send current meter report to warn the Group1 node, the Range of the setting/nvalue is from 10 to 1300,and the default value is 1300./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 1300,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold (1300*0.01A = 13A).",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 10000,
				Name: "Threshold of KWh for Load caution",
				Description: "This is a warning when the KWh of load over the preset threshold value, If the/nsetting value is 10000, when the Accumulated Power Consumption of Relay1 over/nthis value, Home Control Metering Plug will send KWH meter report to warn the/nGroup1 node,/nminimum value is 1KWh and default value is 10000 kWh.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 10000,
						Unit: "kWh",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Restore switch state mode",
				Description: "Whenever the AC power return from lost, Home Control Metering Plug will restore/nthe switch state which could be SWITCH OFF、LAST SWITCH STATE、SWITCH/nON. The default setting is LAST SWITCH STATE.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " Switch off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Last switch state",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Mode of Switch Off function",
				Description: "When the mode of switch On/Off is set to 0, any command of switch off will be/ndisabled and the On/Off function of include button will be disabled. The default/nsetting is enable mode. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indication mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Show Switch State：When switch is on, LED is on. When switch is off, LED/nis off.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "When switch is on, LED is off. When switch is off, LED/nis on.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "When the state of switch changes, LED will be on only/none second, then LED keeps off.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Auto off timer",
				Description: "Whenever Home Control Metering Plug switches to on, the auto off timer begin to/ncount down. After the timer decrease to zero, it will switch to off automatically./nHowever if Auto off timer is set as 0, the auto off function will be disabled. The/ndefault setting is 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: " Disable auto off/nfunction",
					},
					ConfigValue{
						From: 1,
						To: 32767,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval for auto off.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "RF off command mode",
				Description: "Whenever a switch off command,BASIC_SET、 BINARY_SWITCH_SET、/nSWITCH_ALL_OFF, is received, it could be interpreted as a variety of 4 commands.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "It switches to OFF state.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The switch off command will be ignored.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "It switches to the inverse of current state.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "It switches to ON state./n",
					},
				},
			},
		},
	}
}
func New01750002000d() *Device{
	return &Device{
		Brand: "devolo",
		Product: "Motion Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0175",
		ProductType: "0002",
		ProductID: "000d",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Setting the BASIC command value to/nturn on the light. The 0xFF(-1) means/nturn on the light. For dimmer/nequipment 1 to 100 means the light/nstrength./n0 means turn off the light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Device is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Set a value for dimming purposes.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Device is turned on.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 80,
				Name: "PIR Sensitivity",
				Description: "PIR sensitivity settings./n0 means disable the PIR motion./n1 means the lowest sensitivity,/n99 means the highest sensitivity./nHigh sensitivity means can detected/nlong distance, but if there is more/nnoise signal in the environment, it will/nre-trigger too frequency. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Motion detection is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Adjust the sensitivity.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Light Threshold",
				Description: "Setting the illumination threshold to/nturn on the light. When the event/ntriggered and the environment/nillumination lower then the threshold,/nthe device will turn on the light./n0 means turn off illumination detected/nfunction. And never turn on the light./n1 means darkest./n99 means brightest./n100 means turn off illumination/ndetected function. And always turn on/nthe light. Notice: In none test mode, only the/nvalue in 1 to 99 will enable the/nillumination detected function and/nupdate the illumination value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Illumination detection is disabled. Associated devices won&#39;t be turned on.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Illumination detection is disabled. Associated devices will always be turned on.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Operation mode. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 means enable test mode, 0 means disable normal mode. Notice:/nThis bit only effect by the DIP Switch/nsetting to program mode.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window/nfunction./n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Setting the temperature scale./n 0: Fahrenheit, 1:Celsius",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: " Disable the illumination report/nafter event triggered./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable the temperature report/nafter event triggered./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Disable the back key release/ninto test mode.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "MultSensor  Function Switch",
				Description: "Multisensor function switch. Using bit/nto control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate/nillumination.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable PIR integrate/nIllumination.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate PIR/n(Default is Disable)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "When Bit2 is 0 (Enable), Are the/ndevice and the lighting in the same/nroom?/n 0: In the same room(Default),/n 1: In the different room. Notice: If this bit is 1, it is/nrecommended also set the Bit1 to 1,/ncause the PIR triggered, doesn&#39;t/nmean the people in that room./n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Disable delay 5 seconds to turn/noff the light, when door/window/nclosed.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable auto turn off the light,/nafter door/window opened to turn on/nthe light. Notice: If bit2 is zero, this setting is/nuseless./nNotice: If the configuration No.9 is/nzero, this setting is useless./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "Customer function switch, using bit/ncontrol.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable sending motion OFF/nreport. Note: Depends on the Bit4,/n0: Report Notification CC,/nType: 0x07, Event: 0xFE/n1: Sensor Binary Report,/nType: 0x0C, Value: 0x00",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR super sensitivity/nmode.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enable don&#39;t send out BASIC/nOFF after door closed./n",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type,/n 0: Using Notification Report./n 1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Disable to report battery state/nwhen the device triggered./n",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "PIR ReDetect  Interval Time",
				Description: "In the normal mode, after the PIR/nmotion detected, setting the re-detect/ntime. 8 seconds per tick, default tick is/n3 (24 seconds)./nSetting the suitable value to prevent/nreceived the trigger signal too/nfrequency. Also can save the battery/nenergy./nNotice: If this value bigger than the/nconfiguration setting NO. 9. There is a/nperiod after the light turned off and/nthe PIR not start detecting.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Turn Off Light Time",
				Description: "After turn on the lighting, setting the/ndelay time to turn off the lighting/nwhen the PIR motion is not detected./n8 seconds per tick, default tick is 4 (32/nseconds)./n0 means never send turn off light/ncommand.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Associated device won&#39;t be turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the/nbattery level./n0 means turn off auto report battery./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto reports.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the/nillumination./n0 means turn off auto report/nillumination./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto report.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "The interval time for auto report the/ntemperature./n0 means turn off auto report/ntemperature./nThe default value is 12. The tick time/ncan setting by the configuration No.20./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable auto report.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each/ntick. Setting this configuration will/neffect configuration No.10, No.11,/nNo.12 and No.13./nCaution: Setting to 0 means turn off/nall auto report function. The unit is one minute.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All auto reports are disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the duration of one tick.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report./n0 means turn off this function./nThe unit is Fahrenheit./nEnable this function the device will/ndetect every minutes./nAnd when the temperature is over 140/ndegree Fahrenheit, it will continue/nreport./nEnable this functionality will cause/nsome issue please see the detail in the/n“Temperature Report” section.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is turned off.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define a temperature differential to report.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report./n0 means turn off this function./nThe unit is percentage./nEnable this function the device will/ndetect every minutes./nEnable this functionality will cause/nsome issue please see the detail in the/n“Illumination Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define an illumination differential to report.",
					},
				},
			},
		},
	}
}
func New01750002000e() *Device{
	return &Device{
		Brand: "devolo",
		Product: "Door/Window Contact",
		Description: "/n            /n          ",

		ManufacturerID: "0175",
		ProductType: "0002",
		ProductID: "000e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0030,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0031,
				Secure: true,
				NonSecure: false,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Setting the BASIC command value to/nturn on the light. The 0xFF(-1) means/nturn on the light. For dimmer/nequipment 1 to 100 means the light/nstrength./n0 means turn off the light.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Turn off associated devices.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value for dimming purposes.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Turn on associated devices.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Light Threshold",
				Description: "Setting the illumination threshold to/nturn on the light. When the event/ntriggered and the environment/nillumination lower then the threshold,/nthe device will turn on the light./n0 means turn off illumination detected/nfunction. And never turn on the light./n1 means darkest./n99 means brightest./n100 means turn off illumination/ndetected function. And always turn on/nthe light. /nNotice: In none test mode, only the/nvalue in 1 to 99 will enable the/nillumination detected function and/nupdate the illumination value./n/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off illumination detected/nfunction. And never turn on the light.",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define a value: 1 means darkest, /n99 means brightest.",
					},
					ConfigValue{
						From: 100,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "100 means turn off illumination/ndetected function. And always turn on/nthe light.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Operation Mode",
				Description: "Operation mode. Using bit to control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " 1 means enable test mode,/n 0 means disable normal mode. Notice:/nThis bit only effect by the DIP Switch/nsetting to program mode",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable the door/window/nfunction./n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: " Setting the temperature scale./n 0: Fahrenheit, 1:Celsius",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Disable the illumination report/nafter event triggered.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable the temperature report/nafter event triggered./n",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: " Disable the back key release/ninto test mode.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "MultiSensor  Function Switch",
				Description: "Multisensor function switch. Using bit/nto control.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate/nillumination./n",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Disable PIR integrate/nIllumination./n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Disable magnetic integrate PIR/n(Default is Disable).",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "When Bit2 is 0 (Enable), Are the/ndevice and the lighting in the same/nroom?/n 0: In the same room(Default),/n 1: In the different room. Notice: If this bit is 1, it is/nrecommended also set the Bit1 to 1,/ncause the PIR triggered, doesn&#39;t/nmean the people in that room.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Disable delay 5 seconds to turn/noff the light, when door/window/nclosed./n",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable auto turn off the light,/nafter door/window opened to turn on/nthe light. Notice: If bit2 is zero, this setting is/nuseless. Notice: If the configuration No.9 is/nzero, this setting is useless./n/n ",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "Customer Function",
				Description: "Customer function switch, using bit/ncontrol.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: " Enable sending motion OFF/nreport. /nNote: Depends on the Bit4,/n0: Report Notification CC,/nType: 0x07, Event: 0xFE/n1: Sensor Binary Report,/nType: 0x0C, Value: 0x00/n",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: " Enable PIR super sensitivity/nmode./n",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enable don&#39;t send out BASIC/nOFF after door closed.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Notification Type, /n0: Using Notification Report, /n1: Using Sensor Binary Report.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Disable Multi CC in auto report.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: " Disable to report battery state/nwhen the device triggered.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Battery Time",
				Description: "The interval time for auto report the/nbattery level. /n0 means turn off auto report battery./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off auto report battery.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Door/Windo w State Time",
				Description: "The interval time for auto report the/ndoor/window state./n0 means turn off auto report/ndoor/window state./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off auto report.",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Illumination Time",
				Description: "The interval time for auto report the/nillumination./n0 means turn off auto report/nillumination./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off auto report ",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Auto Report Temperature Time",
				Description: "The interval time for auto report the/ntemperature./n0 means turn off auto report/ntemperature./nThe default value is 12. The tick time/ncan setting by the configuration No.20.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off auto report",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 30,
				Name: "Auto Report Tick Interval",
				Description: "The interval time for auto report each/ntick. Setting this configuration will/neffect configuration No.10, No.11,/nNo.12 and No.13. /nCaution: Setting to 0 means turn off/nall auto report function./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All auto report function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Adjust the number of ticks.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Temperature Differential Report",
				Description: "The temperature differential to report./n0 means turn off this function./nThe unit is Fahrenheit./nEnable this function the device will/ndetect every minutes./nAnd when the temperature is over 140/ndegree Fahrenheit, it will continue/nreport. Enable this functionality will cause/nsome issue please see the detail in the/n“Temperature Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off this function. ",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "°F",
						Reserved: false,
						Description: "Define a temperature differential.",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Illumination Differential Report",
				Description: "The illumination differential to report./n0 means turn off this function./nThe unit is percentage./nEnable this function the device will/ndetect every minutes. /nEnable this functionality will cause/nsome issue please see the detail in the/n“Illumination Report” section./n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 means turn off this function. ",
					},
					ConfigValue{
						From: 1,
						To: 127,
						Unit: "%",
						Reserved: false,
						Description: "Define an illumination differential.",
					},
				},
			},
		},
	}
}
func New017501000101() *Device{
	return &Device{
		Brand: "devolo",
		Product: "4 button Wall Controller",
		Description: "/n            /n          ",

		ManufacturerID: "0175",
		ProductType: "0100",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 1 and 3 pair mode ",
				Description: "Button 1 and 3 pair mode (Parameter Number 1, Parameter Size 1) In separate mode button 1 works with group A, button 3 with groups C. Click is On, Hold is dimming Up, Double click is Off, Click-Hold is dimming Down. In pair button 1/3 are Up/Down correspondingly. Click is On/Off, Hold is dimming Up/Down. Single clicks works with group A, double click with group C.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 2 and 4 pair mode ",
				Description: "Button 2 and 4 pair mode (Parameter Number 2, Parameter Size 1) In separate mode button 2 works with control group B, button 4 with control group D. Click is On, Hold is dimming Up, Double click is Off, Click-Hold is dimming Down. In pair button B/D are Up/Down correspondingly. Click is On/Off, Hold is dimming Up/Down. Single clicks works with group B, double click with group D.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Command to Control Group A ",
				Description: "This parameter defines the command to be sent to devices of control group A when the related button is pressed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Command to Control Group B",
				Description: "This parameter defines the command to be sent to devices of control group B when the related button is pressed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Command to Control Group C ",
				Description: "This parameter defines the command to be sent to devices of control group C when the related button is pressed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway ",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Command to Control Group D",
				Description: "This parameter defines the command to be sent to devices of control group D when the related button is pressed",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway ",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch All Commands",
				Description: "Send the following Switch All commands ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch off only ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on only ",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Switch all on and off",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert buttons ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Blocks wakeup even when wakeup interval is set ",
				Description: "If the device wakes up and there is no controller nearby, several unsuccessful communication attempts will drain battery.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is blocked",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is possible if configured accordingly.",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Unsolicited Battery Report",
				Description: "Send unsolicited Battery Report on Wake Up ",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To same node as wake up notification ",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Broadcast to neighbours",
					},
				},
			},
		},
	}
}
func New017600010002() *Device{
	return &Device{
		Brand: "Telldus",
		Product: "TellStick ZNet Lite",
		Description: "/n            /n          ",

		ManufacturerID: "0176",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New017600050001() *Device{
	return &Device{
		Brand: "Telldus",
		Product: "Door/window sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0176",
		ProductType: "0005",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 2 Command Type",
				Description: "Select what type of command to be sent to nodes in association/ngroup 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Basic",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch Binary",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch Multilevel",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Sent Value Association Group 2",
				Description: "Select what value that should be sent to association group 2.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define a dim level which will be transferred.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Last Value will be sent.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Commands to Association Group 2",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "inverted",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Association Group 3 Command Type",
				Description: "Select what type of command to be sent to nodes in association/ngroup 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Basic",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch Binary",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch Multilevel",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Sent Value Association Group 3",
				Description: "Select what value that should be sent to association group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define a dim level which will be transferred.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Last value will be sent.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Type of Commands to Association Group 3",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "inverted",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED-Indicator",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "on",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lifeline Command Type",
				Description: "Select the type of command to be sent in the Lifeline.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Notification",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Sensor Binary",
					},
				},
			},
		},
	}
}
func New01785a44414e() *Device{
	return &Device{
		Brand: "Andersen",
		Product: "VeriLock Translator",
		Description: "/n            /n          ",

		ManufacturerID: "0178",
		ProductType: "5a44",
		ProductID: "414e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 100,
				Name: "Buzzer Volume",
				Description: "Adjust the Buzzer Volume./nNexia sends 0/33/66/100.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Set the buzzer volume.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor Discovery Mode",
				Description: "Start or stop Sensor Discovery Mode./nStarting this mode allows the user to add/remove sensors on the ZID./nNexia sends 0/1/nZID responds with 0-3./nZID sends capability report of end point upon successful addition of sensor.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = Enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Night Light Mode",
				Description: "Turn Night Light Mode On/Off./nBuzzer and LED’s do not operate when Night Light Mode is enabled.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0=False",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1=True",
					},
				},
			},
		},
	}
}
func New017c00010002() *Device{
	return &Device{
		Brand: "heatapp! sense",
		Product: "heatapp! sense temperatur sensor z-wave",
		Description: "/n            /n          ",

		ManufacturerID: "017c",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "delta temperature",
				Description: "Configuration parameter 1 &#34;delta temperature&#34;/n/nDefault value is 5 (0.5°C).",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 50,
						Unit: "",
						Reserved: false,
						Description: "It is possible to set in the range of 2 to 50, in 0.1/ndegree steps.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "temperature scale",
				Description: "Configuration parameter 2 &#34;temperature scale&#34;/n/nDefault value is 0.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "0 to 127(0x00-0x7F) = Celsius",
					},
					ConfigValue{
						From: 128,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "-128 to -1 (0x80-0xFF ) = Fahrenheit",
					},
				},
			},
		},
	}
}
func New017c00060003() *Device{
	return &Device{
		Brand: "heatapp! floor",
		Product: "floor heating regulator z-wave",
		Description: "/n            /n          ",

		ManufacturerID: "017c",
		ProductType: "0006",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Missing Radio Link time",
				Description: "Sets the maximum amount of time the device will wait for reconnection/nbefore going to emergency mode (All switches/nON).",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 24,
						Unit: "",
						Reserved: false,
						Description: "It is possible to set a range of 10min to 4hours. Default value is 30min. The time interval is set in 10 min steps.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Relay Type",
				Description: "Sets relay type. Default relay/ntype is normal open.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0 = normal open",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1 = normal close",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2 = switching",
					},
				},
			},
		},
	}
}
func New017f00010001() *Device{
	return &Device{
		Brand: "WINK",
		Product: "HUB",
		Description: "/n            /n          ",

		ManufacturerID: "017f",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0091,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018200010001() *Device{
	return &Device{
		Brand: "Almond&#43;",
		Product: "Almond&#43;",
		Description: "/n            /n          ",

		ManufacturerID: "0182",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018302010701() *Device{
	return &Device{
		Brand: "Universe Future",
		Product: "UF Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0183",
		ProductType: "0201",
		ProductID: "0701",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018444473031() *Device{
	return &Device{
		Brand: "domitech",
		Product: "Plug In On/Off Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0184",
		ProductType: "4447",
		ProductID: "3031",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Configuration",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will be OFF when the connected appliance is ON, and the LED indicator will be ON when the connected appliance is OFF.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will be ON when the connected appliance is ON and the LED indicator will be OFF when the connected appliance is OFF.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will always be OFF, regardless of connected appliance being ON or OFF.",
					},
				},
			},
		},
	}
}
func New018444473033() *Device{
	return &Device{
		Brand: "domitech",
		Product: "In Wall On/Off Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0184",
		ProductType: "4447",
		ProductID: "3033",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED indicator",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will turn ON whenever the connected appliance or light is turned OFF. When the appliance is turned ON, the LED will turn OFF.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will turn ON whenever the connected appliance is turned ON and the LED will turn OFF when the appliance is turned OFF.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED will always be turned OFF regardless of the ON/OFF status of the connected appliance.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Orientation of On/Off Rocker Switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The connected light will turn ON by pressing the top side of the rocker switch and turn OFF by pressing the bottom side.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The connected light will turn OFF by pressing the top side of the rocker switch and turn ON by pressing the bottom side.",
					},
				},
			},
		},
	}
}
func New018444473034() *Device{
	return &Device{
		Brand: "domitech",
		Product: "In Wall Dimmer Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0184",
		ProductType: "4447",
		ProductID: "3034",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Orientation of ON/OFF rocker switch",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The connected light will turn ON by pressing the top side of the rocker switch and turn OFF by pressing the bottom side.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The connected light will turn OFF by pressing the top side of the rocker switch and turn ON by pressing the bottom side.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Dimming increments",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Indicates the number of increments brightness can be adjusted from low to high and from high to low.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Time interval of brightness change",
				Description: "The resolution is 10 milliseconds. For example, a default value of 3 means the timer runs out every 30 milliseconds. Using the combinations of these 2 parameters, you can create a dim rate adjustment range as short as 10 milliseconds to a very slow dim rate. ",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Select time out duration to move to the next brightness level. Larger the number, slower the response rate to adust dim levels.",
					},
				},
			},
		},
	}
}
func New018447443032() *Device{
	return &Device{
		Brand: "domitech",
		Product: "Plug In Dimmer Switch",
		Description: "/n            /n          ",

		ManufacturerID: "0184",
		ProductType: "4744",
		ProductID: "3032",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED Indicator",
				Description: "The parameter defines the functionality of the LED indicator.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will be OFF when the connected appliance is ON, and the LED indicator will be ON when the connected appliance is OFF.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator will be ON when the connected appliance is ON, and the/nLED indicator will be OFF when the connected appliance is OFF.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "The LED indicator is always OFF regardless of the load condition.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Lighting Level",
				Description: "The time interval of brightness change between dimming up and down can be adjusted by/nchanging the following configuration with a controller(if supported)./nindicates the number of levels the lighting will change when the timer runs out.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Define the parameter for the change of the level of the lighting.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Timer",
				Description: "The time interval of brightness change between dimming up and down can be adjusted by/nchanging the following configuration with a controller(if supported)./nIndicates the time duration of each level./nThe resolution is 10 milliseconds. For example, a default value of 3 means the timer runs out/nevery 30 milliseconds. Using the combinations of these 2 parameters, you can create a dim/nrate adjustment range as short as 10 milliseconds to a very slow dim rate.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define the time duration of each level.",
					},
				},
			},
		},
	}
}
func New018b00400001() *Device{
	return &Device{
		Brand: "Smart Gas Cock",
		Product: "Smart Gas Controller",
		Description: "/n            /n          ",

		ManufacturerID: "018b",
		ProductType: "0040",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00010001() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Door Contact",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00010002() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Motion Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00020001() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "SRAC",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0002",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00030001() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Smoke Detect",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00030002() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Heat Detector US",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00030003() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Water Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00030004() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Smoke Detector",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0003",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00030009() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Carbon Monoxide Detector",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0003",
		ProductID: "0009",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018e00040002() *Device{
	return &Device{
		Brand: "CLIMAX TECHNOLOGY",
		Product: "Power Meter Switch",
		Description: "/n            /n          ",

		ManufacturerID: "018e",
		ProductType: "0004",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New018f01000101() *Device{
	return &Device{
		Brand: "WallC",
		Product: "4 button Wall Controller",
		Description: "/n            /n          ",

		ManufacturerID: "018f",
		ProductType: "0100",
		ProductID: "0101",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 1 and 3 pair mode",
				Description: "In separate mode button 1 works with group 1, button 3 with groups 3. Click is On, Hold is dimming Up, Double click/nis Off, Click-Hold is dimming Down. In pair button 1/3 are Up/Down correspondingly. Click is On/Off, Hold is/ndimming Up/Down. Single clicks works with group 1, double click with group 3.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button 2 and 4 pair mode",
				Description: "In separate mode button 2 works with group 2, button 4 with groups 4. Click is On, Hold is dimming Up, Double click/nis Off, Click-Hold is dimming Down. In pair button 2/4 are Up/Down correspondingly. Click is On/Off, Hold is/ndimming Up/Down. Single clicks works with group 2, double click with group 4.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separately",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair without double clicks",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "In pair with double clicks",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Action on group 1",
				Description: "In Switch On/Off only mode On command is sent on Dim Up, Off on Dim Down. In Scenes mode the scene ID sent/nis (10 * group &#43; ActionID), where ActionID is: 1 = On, 2 = Off, 3 = Dim Up Start, 4 = Dim Down Start, 5 = Dim Up Stop,/n6 = Dim Down Stop",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Action on group 2",
				Description: "In Switch On/Off only mode On command is sent on Dim Up, Off on Dim Down. In Scenes mode the scene ID sent/nis (10 * group &#43; ActionID), where ActionID is: 1 = On, 2 = Off, 3 = Dim Up Start, 4 = Dim Down Start, 5 = Dim Up Stop,/n6 = Dim Down Stop",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Action on group 3",
				Description: "In Switch On/Off only mode On command is sent on Dim Up, Off on Dim Down. In Scenes mode the scene ID sent/nis (10 * group &#43; ActionID), where ActionID is: 1 = On, 2 = Off, 3 = Dim Up Start, 4 = Dim Down Start, 5 = Dim Up Stop,/n6 = Dim Down Stop",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 8,
				Name: "Action on group 4",
				Description: "In Switch On/Off only mode On command is sent on Dim Up, Off on Dim Down. In Scenes mode the scene ID sent/nis (10 * group &#43; ActionID), where ActionID is: 1 = On, 2 = Off, 3 = Dim Up Start, 4 = Dim Down Start, 5 = Dim Up Stop,/n6 = Dim Down Stop",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off and Dim (send Basic Set and Switch Multilevel)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch On/Off only (send Basic Set)",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Switch All",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Send Scenes",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Send Preconfigured Scenes",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Control devices in proximity",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Control DoorLock",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "Central Scene to Gateway",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "Typical click time out",
				Description: "Typical time used to differentiate click, hold and double clicks",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "x 10ms",
						Reserved: false,
						Description: "Define a time interval to differentiate between the inputs.",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send the following Switch All commands",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch off only",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Switch on only",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Switch all on and off",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Invert buttons",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "no ",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "yes",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "LED confirmation mode",
				Description: "This allows to save battery time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No confirmations",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Confirm button press",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Confirm button press and delivery",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Blocks wake up even when wake up interval is set",
				Description: "If the Wall Controller wakes up and there is no controller nearby, several unsuccessful communication attempts will/ndrain battery.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is blocked",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Wakeup is possible if configured accordingly",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Send unsolicited Battery Report on Wake Up",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "No",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "To same node as wake up notification",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Broadcast to neighbours",
					},
				},
			},
		},
	}
}
func New019000010001() *Device{
	return &Device{
		Brand: "Building 36 Intelligent Thermostat",
		Product: "Building 36 Intelligent Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0190",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0044,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "HVAC System Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Normal",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Heat Pump",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Heat Stages",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Number of Heat Stages",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Number of Cool Stages	",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Cool Stages",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Heat Fuel Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Fossil Fuel",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Electric",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Calibration Temperature",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 4294967196,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Calibration Temperature Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Overshoot",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Overshoot Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Swing",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 30,
						Unit: "",
						Reserved: false,
						Description: "Swing Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Heat Staging Delay",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "min",
						Reserved: false,
						Description: "Heat Staging Delay",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Cool Staging Delay",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 60,
						Unit: "min",
						Reserved: false,
						Description: "Cool Staging Delay",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Balance Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 950,
						Unit: "",
						Reserved: false,
						Description: "Balance Setpont Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Recovery Settings",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Comfort",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Efficient",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Fan Circulation Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 240,
						Unit: "min",
						Reserved: false,
						Description: "Fan Circulation Period",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Fan Circulation Duty Cycle",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Duty Cycle",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Fan Purge Time",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 3600,
						Unit: "sec",
						Reserved: false,
						Description: "Purge Time",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Maximum Heat Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 350,
						To: 950,
						Unit: "",
						Reserved: false,
						Description: "Max Heat Setpoint Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Minimum Heat Setpoint",
				Description: "Min Heat Setpoint Range (in deg. F) Precision is tenths of a degree.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Maximum Cool Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 500,
						To: 950,
						Unit: "",
						Reserved: false,
						Description: "Max Cool Setpoint Range(in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Minimum Cool Setpoint",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 500,
						To: 950,
						Unit: "",
						Reserved: false,
						Description: "Min Cool Setpoint (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Thermostat Lock",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Compressor Delay",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 60,
						Unit: "min",
						Reserved: false,
						Description: "Compressor Delay ",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Demand Response Period",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 240,
						Unit: "min",
						Reserved: false,
						Description: "Demand Response Period",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Demand Response Duty Cycle",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Demand Response Duty Cycle",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Temperature Display Units",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Fahrenheit",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Celsius",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "HVAC Modes Enabled",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat, Cool",
					},
					ConfigValue{
						From: 31,
						To: 31,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat, Cool, Auto, Emergency Heat",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Off, Cool",
					},
					ConfigValue{
						From: 15,
						To: 15,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat, Cool, Auto",
					},
					ConfigValue{
						From: 19,
						To: 19,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat, Emergency Heat",
					},
					ConfigValue{
						From: 23,
						To: 23,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat, Cool, Emergency Heat",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Off, Heat",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Power Source",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "C-Wire",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Battery",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configurable Terminal Setting",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "W3",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "H",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "DH",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery Alert Threshold Low",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Battery Alert Range",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Battery Alert Threshold Very Low",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Very Low Battery Alert Range",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Remote Temperature Enable",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Heat Differential",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Heat Differential (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Cool Differential",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Cool Differential (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Temperature Reporting Threshold",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Temperature Reporting Range (in deg. F) Precision is tenths of a degree.",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "O/B Select",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "O/B Terminal acts as B terminal, closed when cooling",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "O/B Terminal acts as O terminal, closed when heating",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Z-Wave Echo Association Reports",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enabled",
					},
				},
			},
		},
	}
}
func New019000030001() *Device{
	return &Device{
		Brand: "Building 36 Temperature Sensor",
		Product: "Building 36 Temperature Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0190",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "4",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 600,
				Name: "Wake up Period",
				Description: "Number of seconds the sensor will stay in the Wake up state following a button press.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a wake up interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 1755,
				Name: "Low Battery Level",
				Description: "Low Battery Report threshold.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1000,
						To: 2500,
						Unit: "",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 10,
				Name: "Temperature Reporting Threshold",
				Description: "The minimum temperature difference required to send a new ambient temperature report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable reporting threshold, report temperature every time thermistor is read.",
					},
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "x0.1 °F",
						Reserved: false,
						Description: "Set up a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 1,
				Name: "Configuration Bitmask",
				Description: "Configuration bitmask for various device configuration settings.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Temperature: If 1, Send unsolicited temperature reports, disable if 0",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: true,
						Description: "",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: true,
						Description: "",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 8,
				Name: "Battery Reporting Interval",
				Description: "The number wakeup intervals between autonomous battery reports. Units : Wake Up Intervals (as defined by Wake Up Command Class)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable autonomous battery reports.",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define a reporting interval based upon the wake up intervals.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 2,
				Default: 60,
				Name: "Temperature Checking Interval",
				Description: "How often the sensor will check the thermistor value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "Define an interval.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature Reporting Interval",
				Description: "The number wakeup intervals between autonomous temperature reports. These interval reports should be sent regardless of the setting of the temperature reporting threshold. Units : Wake Up Intervals (as defined by Wake Up Command Class)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable autonomous temperature reports",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Define a reporting interval based upon the wake up intervals.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature Calibration O",
				Description: "Adjust reported temperature by &#43;/- 10 degrees Fahrenheit for calibration. Units : 0.1 °F",
				Values: []ConfigValue{
					ConfigValue{
						From: 65436,
						To: 100,
						Unit: "x0.1°F",
						Reserved: false,
						Description: "Adjust the reported temperature if needed.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 7200,
				Name: "Mandatory Temperature Reporting Interval",
				Description: "Temperature will be reported regardless of differential from threshold.",
				Values: []ConfigValue{
					ConfigValue{
						From: 60,
						To: 64801,
						Unit: "sec",
						Reserved: false,
						Description: "Define an interval.",
					},
				},
			},
		},
	}
}
func New019500010001() *Device{
	return &Device{
		Brand: "SmartLife Box",
		Product: "MyAlert",
		Description: "/n            /n          ",

		ManufacturerID: "0195",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New019900010001() *Device{
	return &Device{
		Brand: "Gemalto",
		Product: "Gemalto Multi Access Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0199",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New019a00030003() *Device{
	return &Device{
		Brand: "Sensative",
		Product: "Strips-MaZw",
		Description: "/n            /n          ",

		ManufacturerID: "019a",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0030,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Notification Type",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Binary Sensor report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Notification report",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Basic report",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indication",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Specific event indication (*) Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "On",
					},
				},
			},
		},
	}
}
func New019b00010001() *Device{
	return &Device{
		Brand: "HEATIT",
		Product: "Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "019b",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Version: "6",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New019c00010001() *Device{
	return &Device{
		Brand: "Visonic",
		Product: "PowerMaster 360",
		Description: "/n            /n          ",

		ManufacturerID: "019c",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New019e00010001() *Device{
	return &Device{
		Brand: "wibutler",
		Product: "wibutler pro",
		Description: "/n            /n          ",

		ManufacturerID: "019e",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New020000010001() *Device{
	return &Device{
		Brand: "Xuan",
		Product: "An Apps Driven IoT Hub (Gateway)",
		Description: "/n            /n          ",

		ManufacturerID: "0200",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x008f,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "6",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0047,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New020600000000() *Device{
	return &Device{
		Brand: "CISCO",
		Product: "Connected Life Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0206",
		ProductType: "0000",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0046,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x004c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0047,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New020700270100() *Device{
	return &Device{
		Brand: "Forest Group",
		Product: "Shuttle L Z-Wave",
		Description: "/n            /n          ",

		ManufacturerID: "0207",
		ProductType: "0027",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New020e47543038() *Device{
	return &Device{
		Brand: "domitech",
		Product: "Z-Wave LED Light Bulb",
		Description: "/n            /n          ",

		ManufacturerID: "020e",
		ProductType: "4754",
		ProductID: "3038",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Dim Level",
				Description: "You may select the Dim level whenever the light is turned back ON to be either full/nbrightness (100% dim level) or be the same as the last dim setting when the light was /npreviously ON.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0, the brightness level will be resume to full brightness when the dt Smart/nBulb is turned ON every time.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1, the brightness level will maintain same dim level as the last setting when/nthe dt Smart Bulb is turned ON again./n",
					},
				},
			},
		},
	}
}
func New022300010001() *Device{
	return &Device{
		Brand: "Schwaiger Home",
		Product: "Schwaiger Home Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0223",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022300010002() *Device{
	return &Device{
		Brand: "TELE System",
		Product: "GetMagic",
		Description: "/n            /n          ",

		ManufacturerID: "0223",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022a01000100() *Device{
	return &Device{
		Brand: "Timevalve",
		Product: "Timevalve Smart",
		Description: "/n            /n          ",

		ManufacturerID: "022a",
		ProductType: "0100",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "5",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 2400,
				Name: "Valve Default Timeout",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 300,
						To: 2400,
						Unit: "sec",
						Reserved: false,
						Description: "Define the valves default timeout.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 2400,
				Name: "Remaining Time to Close",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 35400,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 4,
				Default: 86400,
				Name: "Periodic Report Interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 600,
						To: 4294967295,
						Unit: "sec",
						Reserved: false,
						Description: "range: 600~4,294,967,295; Define a time interval.",
					},
				},
			},
		},
	}
}
func New022d01000001() *Device{
	return &Device{
		Brand: "olleh",
		Product: "IoT home-manager hub(LAN Type)",
		Description: "/n            /n          ",

		ManufacturerID: "022d",
		ProductType: "0100",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022e00010001() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "Deadbolt Door Lock",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008b,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x008a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x004e,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Security Function",
				Description: "The parameter defines several security functions.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "System disable",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "System enable",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Request for Enable",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Fail",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Privacy Mode",
				Description: "Choose if privacy mode is either on or off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Registered User ID",
				Description: "The number of registered user codes.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 20,
						Unit: "",
						Reserved: false,
						Description: "Registered user codes",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Platform",
				Description: "Select the used platform.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Common",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Samsung SDS",
					},
				},
			},
		},
	}
}
func New022e00030003() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "Smart Button",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0003",
		ProductID: "0003",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022e00040004() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "Window/Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0004",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022e00050005() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "PIR Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0005",
		ProductID: "0005",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "SENSOR SENSITIVITY ",
				Description: "Sensitivity setting value",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Define the sensor sensitivity from 1 (high) to 3 (low).",
					},
				},
			},
		},
	}
}
func New022e00060006() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "Tilt Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0006",
		ProductID: "0006",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0050,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "SENSOR SENSITIVITY ",
				Description: "Parameter sets the sensitivity setting value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "0x01(HIGH_SENSITIVITY) ~ 0x04(LOW_SENSITIVITY)",
					},
				},
			},
		},
	}
}
func New022e00070007() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "IoT HUB",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0007",
		ProductID: "0007",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0062,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New022e00070008() *Device{
	return &Device{
		Brand: "SAMSUNG SDS",
		Product: "Central Static Controller",
		Description: "/n            /n          ",

		ManufacturerID: "022e",
		ProductType: "0007",
		ProductID: "0008",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x004e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New023000030001() *Device{
	return &Device{
		Brand: "ID Lock",
		Product: "ID Lock 101",
		Description: "/n            /n          ",

		ManufacturerID: "0230",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0072,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0098,
				Secure: true,
			},
			&CommandClass{
				ID: 0x005a,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0080,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0073,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
			},
			&CommandClass{
				ID: 0x0086,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0062,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0063,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0085,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0059,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x0071,
				InNIF: "false",
				Secure: true,
			},
			&CommandClass{
				ID: 0x008a,
				InNIF: "false",
				Secure: true,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Door Lock Mode",
				Description: "parameter defines the door lock mode",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Away, Manual Lock",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Disable Away, Auto Lock",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Enable Away, Manual Lock",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Enable Away, Auto Lock",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "RFID Register Mode",
				Description: "parameter controls RFID registration",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Begin RFID Registering mode on the door lock",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "RFID Database clear",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "",
						Reserved: false,
						Description: "RFID Registering mode stop",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Door Hinge Position Mode",
				Description: "parameter defines the door hinge position",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Right",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Left",
					},
				},
			},
		},
	}
}
func New02340003010a() *Device{
	return &Device{
		Brand: "Z-Home Control",
		Product: "Z-Wave switch module for FUGA® installations",
		Description: "/n            /n          ",

		ManufacturerID: "0234",
		ProductType: "0003",
		ProductID: "010a",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0028,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005b,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0087,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Upper paddle buttons mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separate mode (toggle mode).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair mode, left side sends on/up commands, right side sends off/down commands.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lower paddle buttons mode.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Separate mode (toggle mode).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "In pair mode, left side sends on/up commands, right side sends off/down commands.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED #1 mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indication is disabled (LED can be controlled by Indicator Command Class Set commands).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button, with inverted indication.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of corresponding paddle (in pair mode).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding paddle (in pair mode), with inverted indication.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay, with inverted indication.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "LED show a 5 seconds indication when the corresponding button is pressed.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED #2 mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indication is disabled (LED can be controlled by Indicator Command Class Set commands).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button. (Default)",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button, with inverted indication.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of corresponding paddle (in pair mode).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding paddle (in pair mode), with inverted indication.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay, with inverted indication.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "LED show a 5 seconds indication when the corresponding button is pressed.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED #3 mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indication is disabled (LED can be controlled by Indicator Command Class Set commands).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button, with inverted indication.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of corresponding paddle (in pair mode).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding paddle (in pair mode), with inverted indication.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay, with inverted indication.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "LED show a 5 seconds indication when the corresponding button is pressed.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED #4 mode.",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indication is disabled (LED can be controlled by Indicator Command Class Set commands).",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding button, with inverted indication.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of corresponding paddle (in pair mode).",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the corresponding paddle (in pair mode), with inverted indication.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay.",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "LED indicates the status of the built-in relay, with inverted indication.",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "LED show a 5 seconds indication when the corresponding button is pressed.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED #1 brightness level.",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED #2 brightness level.",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED #3 brightness level.",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 50,
				Name: "LED #4 brightness level.",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is on.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED #1 off brightness level",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED #2 off brightness level",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED #3 off brightness level",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "LED #4 off brightness level",
				Description: "0 - 100/nSpecifies the brightness level of the LED when it is off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 100,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Relay mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Relay is controlled by button #1 or by upper paddle when pair mode is active.",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Relay is controlled by button #2 or by upper paddle when pair mode is active.",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Relay is controlled by button #3 or by lower paddle when pair mode is active.",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Relay is controlled by button #4 or by lower paddle when pair mode is active.",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Relay is activated for one second and is controlled by button #1 or by upper paddle when pair mode is active.",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Indicator mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Indicator Set level values are only used to control the LED.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Indicator Set level values are also used by internal LED activations.",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Scene notification offset",
				Description: "Button #1 will send scene [value], button #2 will send scene [value] &#43; 1, button #3 will send scene [value] &#43; 2, button #4 will send scene [value] &#43; 3. (Default = 1)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Scene notifications are turned off.",
					},
					ConfigValue{
						From: 1,
						To: 201,
						Unit: "",
						Reserved: false,
						Description: "Define a value.",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Disable House Cleaning Mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "House Cleaning Mode is enabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "House Cleaning Mode is disabled; double-press button scene notifications will be disabled too.",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Multilevel Switch on single press for device 1 (button #1)",
				Description: "Byte 1: Enable / Disable /n0 = Disabled – When single pressing the button, nodes associated to group 6 won’t be switched. /n1 = Enabled – When single pressing the button, nodes associated to group 6 will be switched between the configured upper and lower switch values. (Default) /nByte 2: Upper switch value: 0 – 99, 255; /nWhen single pressing the button for ON, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 255)/nByte 3: Lower switch value: 0 - 99; When single pressing the button for OFF, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 0)/nByte 4: Not used – must be set to 0.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Multilevel Switch on single press for device 2",
				Description: "Byte 1: Enable / Disable /n0 = Disabled – When single pressing the button, nodes associated to group 6 won’t be switched. /n1 = Enabled – When single pressing the button, nodes associated to group 6 will be switched between the configured upper and lower switch values. (Default) /nByte 2: Upper switch value: 0 – 99, 255; /nWhen single pressing the button for ON, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 255)/nByte 3: Lower switch value: 0 - 99; When single pressing the button for OFF, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 0)/nByte 4: Not used – must be set to 0.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Multilevel Switch on single press for device 3 (button #3)",
				Description: "Byte 1: Enable / Disable /n0 = Disabled – When single pressing the button, nodes associated to group 6 won’t be switched. /n1 = Enabled – When single pressing the button, nodes associated to group 6 will be switched between the configured upper and lower switch values. (Default) /nByte 2: Upper switch value: 0 – 99, 255; /nWhen single pressing the button for ON, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 255)/nByte 3: Lower switch value: 0 - 99; When single pressing the button for OFF, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 0)/nByte 4: Not used – must be set to 0.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Multilevel Switch on single press for device 4 (button #4)",
				Description: "Byte 1: Enable / Disable /n0 = Disabled – When single pressing the button, nodes associated to group 6 won’t be switched. /n1 = Enabled – When single pressing the button, nodes associated to group 6 will be switched between the configured upper and lower switch values. (Default) /nByte 2: Upper switch value: 0 – 99, 255; /nWhen single pressing the button for ON, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 255)/nByte 3: Lower switch value: 0 - 99; When single pressing the button for OFF, a Multilevel Switch Set with this value will be send to devices in association group 6. (Default = 0)/nByte 4: Not used – must be set to 0.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Control of association groups for device 1 (button #1)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 1, nodes in the association groups will not be switched, button activations will still send switch values.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 1, nodes in the association groups will be switched.",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Control of association groups for device 2 (button #2)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 2, nodes in the association groups will not be switched, button activations will still send switch values.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 2, nodes in the association groups will be switched.",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Control of association groups for device 3 (button #3)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 3, nodes in the association groups will not be switched, button activations will still send switch values.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 2, nodes in the association groups will be switched.",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Control of association groups for device 4 (button #4)",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 4, nodes in the association groups will not be switched, button activations will still send switch values.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "When commands are received by device 4, nodes in the association groups will be switched.",
					},
				},
			},
		},
	}
}
func New023800030004() *Device{
	return &Device{
		Brand: "Milan",
		Product: "Milan Infoway",
		Description: "/n            /n          ",

		ManufacturerID: "0238",
		ProductType: "0003",
		ProductID: "0004",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New023900010001() *Device{
	return &Device{
		Brand: "Stelpro",
		Product: "Z-Wave Plus Line-Volt Thermostat",
		Description: "/n            /n          ",

		ManufacturerID: "0239",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0042,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New023c00010002() *Device{
	return &Device{
		Brand: "Safetech Products",
		Product: "The Doorlock",
		Description: "/n            /n          ",

		ManufacturerID: "023c",
		ProductType: "0001",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0062,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "4",
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024000010001() *Device{
	return &Device{
		Brand: "Technicolor",
		Product: "Ize Extender",
		Description: "/n            /n          ",

		ManufacturerID: "0240",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New0244ba5e0001() *Device{
	return &Device{
		Brand: "Athom",
		Product: "Homey",
		Description: "/n            /n          ",

		ManufacturerID: "0244",
		ProductType: "ba5e",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0022,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "8",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024500030001() *Device{
	return &Device{
		Brand: "permundo",
		Product: "Smart Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0245",
		ProductType: "0003",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Local Control",
				Description: "The parameter defines whether the device works with default settings or if the device can only be controlled with Z-Wave.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LocalControlOFF",
					},
					ConfigValue{
						From: 1,
						To: 7,
						Unit: "",
						Reserved: false,
						Description: "0",
					},
				},
			},
		},
	}
}
func New024500030002() *Device{
	return &Device{
		Brand: "permundo",
		Product: "Smart Mini Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0245",
		ProductType: "0003",
		ProductID: "0002",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send Meter Report Enable",
				Description: "This parameter defines Disable/Enable meter report measure data to controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable Report",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Meter Report Interval",
				Description: "This parameter defines interval time(in seconds) that Meter report data to main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval. Range is from 1 to 65535.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 13,
				Name: "Configure maximum over-load current",
				Description: "This parameter defines maximum current the plug can provide to load that be connected to plug. If the current consumed by load greater than maximum current, the plug will cut off power.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 16,
						Unit: "A",
						Reserved: false,
						Description: "Set the upper current threshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Configure maximum Alarm current",
				Description: "This parameter defines maximum current, if the current plug provide to load great than this parameter, the plug will send over-current notification to main controller and the LED will be turn RED, but plug cannot cut-off power. This value must be less than parameter #3",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "A",
						Reserved: false,
						Description: "Set a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Led Display Enable",
				Description: "This parameter defines the LED indication Function ON/OFF. This parameter can be configured with 0 or 1, where 0 means disable LED indication Function and will always be turn-off, and 1 means enable LED Function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable LED.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable LED.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 10,
				Name: "Configure power report",
				Description: "This parameter defines by how much power consumed must change to be reported to the Z-Wave Controller or Z-Wave Gateway, in percents. If the rate of power consumed change ratio is greater than this parameter, the plug will report the results, voltage, current, power and energy, that plug measure to Z-Wave Controller or Z-Wave Gateway.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a value for reports to be triggered.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Remember Relay ON/OFF status",
				Description: "This parameter defined the relay status if remember or not. If remembered, the plug will restore the relay status last power off when the plug supply power next time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Don’t Remember, the relay will keep OFF when Plug Supply Power",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Remember the Relay Status",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure Plug Time switch Function",
				Description: "This parameter defines the timer function Enable/Disable. This parameter can be configured with 0 or 1, where 0 means disable time switch function and 1 enable. The time period will be defined in parameter #9./nIf this parameter is Set to 1, and when turn the plug relay on, the timer in plug start run with time period defined in parameter #9 and the plug will turn the relay off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Time switch Disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Time switch Enable",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "Configure Time switch Period",
				Description: "This parameter defines the time period that plug time switch off. This parameter can be configured 1 ~ 65535(in minutes). If Parameter #9 is set to ‘1’, and relay is turn-on, the relay will be turn-off after delay this parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
		},
	}
}
func New024700420001() *Device{
	return &Device{
		Brand: "LG UPLUS",
		Product: "Smart Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0247",
		ProductType: "0042",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008b,
			},
			&CommandClass{
				ID: 0x0032,
				Version: "3",
			},
			&CommandClass{
				ID: 0x007a,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0070,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0025,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
				NonSecure: false,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Standby Power Settings",
				Description: "First 3 Bytes : Standby Power Setting Value /nLast 1 Byte : Standby Power Enable/Disable /nIf the value is set by 1000, standby power equals 10.00w (0x0003E8) and standby power enable is 1. (total 0x0003E801)/n",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Periodic Measurement Value Transmission",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Periodic Measurement Value Transmission disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Periodic Measurement Value Transmission Enable",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Power Accumulation",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Power Accumulation Stop",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Power Accumulation Start",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Connected Device",
				Description: "- Before setting the standby power it does not report.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Connected Device Not Use",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Connected Device Use",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "Periodic Measurement Value Transmission Interval",
				Description: "Minimum time interval : 10minutes/nValue : 144(10min * 144) = 24 hours interval =&gt;MAX; Value : 1 (10minutes * 1) = 10minutes interval; /nValue : 2 (10minutes * 2) = 20minutes interval/n",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 145,
						Unit: "x 10 min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
		},
	}
}
func New024800010001() *Device{
	return &Device{
		Brand: "coqon",
		Product: "coqon qbox",
		Description: "/n            /n          ",

		ManufacturerID: "0248",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0055,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0023,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005f,
			},
			&CommandClass{
				ID: 0x0061,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x004d,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0052,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0067,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0069,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0034,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0052,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024a01020304() *Device{
	return &Device{
		Brand: "BTSTAR",
		Product: "Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "024a",
		ProductType: "0102",
		ProductID: "0304",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "7",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024b01000001() *Device{
	return &Device{
		Brand: " EchoLife",
		Product: " LS1015",
		Description: "/n            /n          ",

		ManufacturerID: "024b",
		ProductType: "0100",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024d00010001() *Device{
	return &Device{
		Brand: "Z-Works",
		Product: "LiveConnect Center",
		Description: "/n            /n          ",

		ManufacturerID: "024d",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New024d47610001() *Device{
	return &Device{
		Brand: "Z-Works Inc.",
		Product: "施錠センサー",
		Description: "/n            /n          ",

		ManufacturerID: "024d",
		ProductType: "4761",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Secure: true,
				NonSecure: false,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0071,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Checking thumb turn status interval",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 30,
						To: 127,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "LED indicator for data transmission",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "LED indicator is always off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "LED indicator lights 1 second after thumb turn status close to open",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "LED indicator lights 1 second after thumb turn status open to close",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "LED indicator lights 1 second after changed thumb turn status",
					},
				},
			},
		},
	}
}
func New024f00010001() *Device{
	return &Device{
		Brand: "Smartly",
		Product: "Smartly Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "024f",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "6",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New025800030082() *Device{
	return &Device{
		Brand: "CoolCam",
		Product: "Door/Window Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "0082",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "OFF Delay",
				Description: "This configuration parameter that can be used to adjust the amount of delay before the OFF command is transmitted. This parameter can be configured with the value of 0 through 65535, where 0 means send OFF command immediately and 65535 means 65535 seconds of delay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a delay.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF, Alarm cancelling or turning a device off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Dim Level (Multilevel Switch Device)",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON (Binary Switch Device)",
					},
				},
			},
		},
	}
}
func New025800030083() *Device{
	return &Device{
		Brand: "CoolCam",
		Product: "PIR Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "0083",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0031,
				Version: "7",
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "Sensitivity Level Setting",
				Description: "This parameter defines the sensitivity of PIR detector, it is recommended to test the detector with movements from a farthest end of the coverage area at first time of use. If movements cannot be detected sensitively, simply adjust the sensitivity level with this parameter. This Parameter can be configured with the value of 1 through 4, where 1 means high sensitivity and 4 means lowest sensitivity.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Define a sensitivity level.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 2,
				Name: "On/Off Duration",
				Description: "This parameter can be determined how long the associated devices should stay ON status. For instance, this parameter is set to 30(second), the PIR detector will send a BASIC_SET Command to an associated device with value basic set level if PIR detector is triggered and the associated device will be turned on 30(second) before it is turned off. This Parameter value must be large than Parameter 6#. If user set this parameter to default by Configure CC, the parameter #6 will be set to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 600,
						Unit: "sec",
						Reserved: false,
						Description: "Define how long the associated devices should stay on.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Basic Set Command will be sent where contains a value when PIR detector is triggered, the receiver will take it for consideration; for instance, if a lamp module is received the Basic Set Command of which value is decisive as to how bright of dim level of lamp module shall be. This Parameter is used to some associated devices.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF, Alarm cancelling or turning a device off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "ON. Define a dim level.",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "PIR Detecting Function Enabled/Disabled",
				Description: "This parameter can be enabled or disabled the PIR detector detecting function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable PIR Detector Function",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Enable PIR Detector Function",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Ambient Illumination Lux Level",
				Description: "This parameter can be set a lux level value which determines when the light sensor is activated. If the ambient illumination level falls below this value and a person moves across or within the detected area , PIR detector will send a Z-Wave ON command(i.e. BASIC_SET (value = parameter 3) to an associated device and activate it.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "",
						Reserved: false,
						Description: "Define a lux level.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Re-trigger Interval Setting",
				Description: "This Parameter can be used to adjust the interval of being re-triggered after the PIR detector has been triggered. This Parameter value must be less than Parameter 2#. If user set this parameter to default by Configure CC, the parameter #2 will be set to default value.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 2,
				Default: 180,
				Name: "Light Sensor Polling Interval",
				Description: "This Parameter can be set the light sensor measure ambient illumination level interval time./nNOTE: This Value Must Be less than Wakeup Interval Time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 60,
						To: 36001,
						Unit: "sec",
						Reserved: false,
						Description: "Define an interval time.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Lux Level Function Enable",
				Description: "If this parameter is set to ‘1’, and when Lux level less than the value define by parameter #5, PIR detector will send a BASIC_SET command frame(i.e. BASIC_SET (value = parameter 3) to an associated device and activate it. If Lux Level greater than the value define by parameter #5, PIR detector will not send a BASIC_SET command frame.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 100,
				Name: "Ambient Illumination Lux Level Report",
				Description: "This parameter defines by how much Lux Level must change, in lux, to be reported to the main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 1000,
						Unit: "lux",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
		},
	}
}
func New025800030085() *Device{
	return &Device{
		Brand: "CoolCam",
		Product: "Water Leakage Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "0085",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 120,
				Name: "Configuring Alarm Duration Time",
				Description: "If this parameter is set to ‘0’, the beep and LED will be turn on/nalways until water leakage is not detected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "beep and LED will be turn on/nalways",
					},
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "define time interval",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Configure Alarm Interval",
				Description: "This Parameter defines beep on /off interval time when water leakage is detected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 255,
						Unit: "min",
						Reserved: false,
						Description: "define time interval",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 60,
				Name: "Configure First Alarm On Time Duration",
				Description: "This parameter defines beep on duration first time when water leakage is detected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 10,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "define time interval",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Configure Alarm on Time Duration",
				Description: "This parameter defines beep on duration after fist beep on when water leakage is/ndetected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 5,
						To: 255,
						Unit: "sec",
						Reserved: false,
						Description: "define time interval",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Configure Alarm Enable/Disable",
				Description: "This parameter defines beep on is enabled or disabled when water leakage is/ndetected. ‘0’ indicate beep on is disable, but LED will be turned on when water/nleakage detected. ‘1’ indicate beep on is enabled, the BEEP and LED will be turned on/nwhen water leakage detected.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "beep is disable; LED will be turned on",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "BEEP and LED will be turned on",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Configure Water Leakage Detected Enable/Disable",
				Description: "This parameter defines the function than water leakage detect is enabled or disabled./n‘0’ indicate disable water leakage detect, ‘1’ indicate enable water leakage detect.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "function disabled",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "function enabled",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Basic Set Command will be sent where contains a value when the door/window is opened or/nclosed, the receiver will take it for consideration; for instance, if a lamp module is received the/nBasic Set Command of which value is decisive as to how bright of dim level of lamp module shall/nbe.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "define Basic Set value",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "on",
					},
				},
			},
		},
	}
}
func New025800030087() *Device{
	return &Device{
		Brand: "CoolCam",
		Product: "Wall Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "0087",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Meter Report",
				Description: "This parameter defines Disable/Enable meter report measure data to controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Disable Report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable Report",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Meter Report Interval",
				Description: "This parameter defines interval time (in seconds) that Meter reports data to main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval. Range is from 1 to 65535 seconds.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 13,
				Name: "Maximum Over-load Current",
				Description: "This parameter defines maximum current the plug can provide to load that be connected to plug. If the current consumed by load is greater than maximum current, the plug will cut off power, and send NOTIFICATION_EVENT_POWER_MANAGEMENT_OVER_LOAD_DETECTED to associated devices in lifeline. Red Led will blink every seconds until current is normal (less than Parameter #3). You must remove the loader and turn on the Plug (press the button once) to enable current monitor and clear NOTIFICATION ALARM./nThis parameter value must be great than #4. If user set this parameter to default by Configure CC, the parameter #4 will be set to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 16,
						Unit: "A",
						Reserved: false,
						Description: "Set the upper current threshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Maximum Alarm Current",
				Description: "This parameter defines maximum current, if the current plug provide to load is great than this parameter, the plug will light yellow LED, but plug cannot cut-off power./nThis parameter value must be less than parameter #3. If user set this parameter to default by Configure CC, the parameter #3 will be set to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "A",
						Reserved: false,
						Description: "Set Alarm upper current threshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Led Display Enable",
				Description: "This parameter defines the LED indication Function ON/OFF. This parameter can be configured with 0 or 1, where 0 means disable LED indication Function and will always be turn-off, and 1 means enable LED Function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Diasable LED function.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Enable LED function.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Power Report",
				Description: "This parameter defines by how much power consumed must change to be reported to the Z-Wave Controller or Z-Wave Gateway, in percents. If the rate of power consumed change ratio is greater than this parameter, the plug will report the results, voltage, current, power and energy, that plug measure to Z-Wave Controller or Z-Wave Gateway.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Relay ON/OFF Status",
				Description: "This parameter defined the relay status if remember or not. If remembered, the plug will restore the relay status last power off when the plug supply power next time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Relay won&#39;t remember last status.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Remember the Relay Status.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Plug Time Switch Function",
				Description: "This parameter defines the timer function Enable/Disable. This parameter can be configured with 0 or 1, where 0 means disable time switch function and 1 enable. The time period will be defined in parameter #9./nIf this parameter is Set to 1, and when turn the plug relay on, the timer in plug start run with time period defined in parameter #9 and the plug will turn the relay off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Time switch is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Time switch is enabled.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "Time switch Period",
				Description: "This parameter defines the time period that plug time switch off. This parameter can be configured 1 ~ 65535(in minutes). If Parameter #9 is set to ‘1’, and relay is turn-on, the relay will be turn-off after delay this parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
		},
	}
}
func New025800031082() *Device{
	return &Device{
		Brand: "CoolCam",
		Product: "Door/Window Detector",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "1082",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Configuring the OFF Delay",
				Description: "This configuration parameter that can be used to adjust the amount of delay before the OFF/ncommand is transmitted. This parameter can be configured with the value of 0 through 65535,/nwhere 0 means send OFF command immediately and 65535 means 65535 seconds of delay.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Basic Set Level",
				Description: "Basic Set Command will be sent where contains a value when the door/window is opened or/nclosed, the receiver will take it for consideration; for instance, if a lamp module is received the/nBasic Set Command of which value is decisive as to how bright of dim level of lamp module shall/nbe.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF, Alarm cancelling or turning a device off",
					},
					ConfigValue{
						From: 1,
						To: 99,
						Unit: "",
						Reserved: false,
						Description: "Dim Level (Multilevel Switch Device)",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "ON (Binary Switch Device)",
					},
				},
			},
		},
	}
}
func New025800031087() *Device{
	return &Device{
		Brand: " CoolCam",
		Product: "Wall Plug",
		Description: "/n            /n          ",

		ManufacturerID: "0258",
		ProductType: "0003",
		ProductID: "1087",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0032,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0020,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Send Meter Report Enable",
				Description: "This parameter defines Disable/Enable meter report measure data to controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable report",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "enable report",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 300,
				Name: "Meter Report Interval",
				Description: "This parameter defines interval time (in seconds) that Meter report data to main controller.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "sec",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 13,
				Name: "Configure maximum over‐load current.",
				Description: "This parameter defines maximum current the plug can provide to load that be connected to plug./nIf the current consumed by load is greater than maximum current, the plug will cut off power,/nand send NOTIFICATION_EVENT_POWER_MANAGEMENT_OVER_LOAD_DETECTED to associated/ndevices in lifeline. Red Led will blink every seconds until current is normal (less than Parameter/n#3). You must remove the loader and turn on the Plug (press the button once) to enable current/nmonitor and clear NOTIFICATION ALARM./nThis parameter value must be great than #4. If user set this parameter to default by Configure CC,/nthe parameter #4 will be set to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 16,
						Unit: "A",
						Reserved: false,
						Description: "Set the upper current threshold.",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 12,
				Name: "Configure maximum Alarm current.",
				Description: "This parameter defines maximum current, if the current plug provide to load is great than this/nparameter, the plug will light yellow LED, but plug cannot cut‐off power./nThis parameter value must be less than parameter #3. If user set this parameter to default by/nConfigure CC, the parameter #3 will be set to default value.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 15,
						Unit: "A",
						Reserved: false,
						Description: "Set Alarm upper current threshold.",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Led Display Enable",
				Description: "This parameter defines the LED indication Function ON/OFF. This parameter can be configured/nwith 0 or 1, where 0 means disable LED indication Function and will always be turn‐off, and 1/nmeans enable LED Function.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function enabled.",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "Configure report by Current Changed",
				Description: "This parameter defines by how much current changed must change to be reported to the Z‐Wave/nController or Z‐Wave Gateway, in percents. If the rate of current change ratio is greater than this/nparameter, the plug will report the results, voltage, current, power and energy, that plug measure/nto Z‐Wave Controller or Z‐Wave Gateway.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 100,
						Unit: "%",
						Reserved: false,
						Description: "Define a treshold.",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Remember Relay ON/OFF status",
				Description: "This parameter defined the relay status if remember or not. If remembered, the plug will restore/nthe relay status last power off when the plug supply power next time.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Don’t Remember, the relay will keep OFF when Plug Supply Power.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Remember the Relay Status.",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Configure Plug Time switch Function",
				Description: "This parameter defines the timer function Enable/Disable. This parameter can be configured with/n0 or 1, where 0 means disable time switch function and 1 enable. The time period will be defined/nin parameter #9./nIf this parameter is Set to 1, and when turn the plug relay on, the timer in plug start run with time/nperiod defined in parameter #9 and the plug will turn the relay off.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Time switch disable.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Time switch enable.",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 2,
				Default: 150,
				Name: "Configure Time switch Period",
				Description: "This parameter defines the time period that plug time switch off. This parameter can be/nconfigured 1 ~ 65535(in minutes). If Parameter #9 is set to ‘1’, and relay is turn‐on, the relay will/nbe turn‐off after delay this parameter.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 65535,
						Unit: "min",
						Reserved: false,
						Description: "Define a time interval.",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Button On/Off Enable",
				Description: "This parameter defines the button on/off function is enabled or not on the top of the wall plug./nThis parameter can be configured 0 and 1. If this parameter is set to ‘1’, users can turn on and off/nthe wall plug by pressing the button on the top of the wall plug. If this parameter is set to ‘0’, the/nwall plug cannot be turned on and off by pressing the button.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Function is disabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Function is enabled.",
					},
				},
			},
		},
	}
}
func New025d01000100() *Device{
	return &Device{
		Brand: "Contec intelligent housing",
		Product: "Da Vinci Wall Controller",
		Description: "/n            /n          ",

		ManufacturerID: "025d",
		ProductType: "0100",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x005b,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "EP 1",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "EP 2",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "EP 3",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "EP 4",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "EP 5",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "EP 6",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
		},
	}
}
func New025d02000100() *Device{
	return &Device{
		Brand: "Contec intelligent housing",
		Product: "Da Vinci Wall Controller",
		Description: "/n            /n          ",

		ManufacturerID: "025d",
		ProductType: "0200",
		ProductID: "0100",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x005b,
			},
			&CommandClass{
				ID: 0x0060,
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 1",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "EP 1",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 2",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 2,
				Name: "EP 2",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 3",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "EP 3",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 4",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 1,
				Default: 4,
				Name: "EP 4",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 5",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 1,
				Default: 5,
				Name: "EP 5",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 6",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 6,
				Name: "EP 6",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 7",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 8",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Type",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "on/off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "blind up",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "blind down",
					},
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Partner ID",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 9,
						Unit: "",
						Reserved: false,
						Description: "EP as Partner ID",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Blind Duration",
				Values: []ConfigValue{
					ConfigValue{
						From: 3,
						To: 127,
						Unit: "",
						Reserved: false,
						Description: "Duration",
					},
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "EP 9",
				Description: "Relay Output",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Relay Output",
					},
				},
			},
		},
	}
}
func New026001680168() *Device{
	return &Device{
		Brand: "HEIMAN",
		Product: "Door Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0260",
		ProductType: "0168",
		ProductID: "0168",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New026080011000() *Device{
	return &Device{
		Brand: "HEIMAN",
		Product: "Motion Sensor",
		Description: "/n            /n          ",

		ManufacturerID: "0260",
		ProductType: "8001",
		ProductID: "1000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0084,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0030,
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New027200010001() *Device{
	return &Device{
		Brand: "Dune HD",
		Product: "Dune HD Solo 4K",
		Description: "/n            /n          ",

		ManufacturerID: "0272",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008f,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0081,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0098,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0026,
			},
			&CommandClass{
				ID: 0x0025,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x008a,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0077,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0073,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "3",
			},
			&CommandClass{
				ID: 0x005a,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x009c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0066,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0030,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x004c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x007a,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0082,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0087,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0032,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x003d,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "9",
			},
			&CommandClass{
				ID: 0x0071,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0075,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0035,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002d,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x004e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x009e,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0044,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x0045,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0040,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0042,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x008b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0063,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New027601390001() *Device{
	return &Device{
		Brand: "Systemair",
		Product: "Remotely Controlled Ventilation",
		Description: "/n            /n          ",

		ManufacturerID: "0276",
		ProductType: "0139",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0044,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0071,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x007a,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0020,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "System Type (read-only)",
				Description: " Ventilation System Type",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 2,
				Default: 12,
				Name: "Filter - Period (read-only)",
				Description: "In step of 30 days; 6=180days",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Filter - Days Used (read-only)",
				Description: "How many days has been/nused since the last change",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Boost Mode Remaining Time (read-only)",
				Description: "How many seconds are left/nfor Boost mode",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Temperature Setpoint Step (read-only)",
				Description: "The min change available in/ndegree Celsius x 10; 25 = 2.5 C.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "CDx New Firmware Version Available",
				Description: "The New FW Version:/nMSB – don’t care/0x00,/nNext – version High,/nNext – version Middle,/nLSB – version Low.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "PCU-ECx New Firmware Version Available",
				Description: "The New FW Version:/nMSB – don’t care/0x00,/nNext – version High,/nNext – version Middle,/nLSB – version Low.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New027700010001() *Device{
	return &Device{
		Brand: "Pixela Corporation",
		Product: "Sensor Gateway",
		Description: "/n            /n          ",

		ManufacturerID: "0277",
		ProductType: "0001",
		ProductID: "0001",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0055,
			},
			&CommandClass{
				ID: 0x0056,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0022,
			},
			&CommandClass{
				ID: 0x0098,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x004d,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0052,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0067,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x007a,
				Secure: true,
				NonSecure: false,
				Version: "3",
			},
			&CommandClass{
				ID: 0x0069,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0034,
				Secure: true,
				NonSecure: false,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0059,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0080,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0033,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0062,
				Controlled: "true",
				InNIF: "false",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				InNIF: "false",
				Version: "4",
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				InNIF: "false",
				Version: "3",
			},
			&CommandClass{
				ID: 0x0031,
				Controlled: "true",
				InNIF: "false",
				Version: "5",
			},
			&CommandClass{
				ID: 0x0026,
				Controlled: "true",
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New52540000531e() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "Z-URC 550 US",
		Description: "/n            /n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0000",
		ProductID: "531e",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x002c,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525400008510() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "BW8510US",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0000",
		ProductID: "8510",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New5254000103e9() *Device{
	return &Device{
		Brand: "Homescenario",
		Product: "HSK-100Z AV Scenario Controller",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0001",
		ProductID: "03e9",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525400018332() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "Z-URC™ 550EU",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0001",
		ProductID: "8332",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
				InNIF: "false",
			},
			&CommandClass{
				ID: 0x0021,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0027,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0070,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0000,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002b,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x002c,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0094,
				Controlled: "true",
				Version: "4",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525400018380() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZRC-100",
		Description: "/n            /n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0001",
		ProductID: "8380",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0084,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002d,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525400018510() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "BW8510EU",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0001",
		ProductID: "8510",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New5254000b8510() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "BW8510CN",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "000b",
		ProductID: "8510",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x005e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0021,
			},
			&CommandClass{
				ID: 0x0084,
				Controlled: "true",
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0059,
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x005b,
				Controlled: "true",
				Version: "2",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525401008371() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZXT-310US",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0100",
		ProductID: "8371",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0094,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 3,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 4,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 7,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 9,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 10,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 11,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 12,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 14,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 15,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 16,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 20,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "UIRD formatted raw data/nfor the Simple AV/ncommand number or key/nbeing downloaded or/nuploaded; /n/nParameter value depends on IR/ncode data",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "Simple AV Command Key",
				Description: "The Simple AV command/nnumber or key going to be/ndownloaded to the ZXT-/n310; /n/nParameter value referred to/nSimple AV/ncommand class/nkey ID",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Download Status Register",
				Description: "The status value 1, 3, 4/nwill be reset to 0 when/nZXT-310 receive a get/ncommand to this/nparameter",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IR channel/nidle",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OK",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Downloading",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Command/nFull",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Operation/nFail",
					},
				},
			},
			ConfigParam{
				ID: 23,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 24,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "The Simple AV command number or key going to be learned",
				Description: "Referred to/nSimple AV/ncommand class/nkey ID",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Learning status register",
				Description: "The status value 1, 3, 4/nwill be reset to 0 when/nZXT-310 receive a get/ncommand to this/nparameter",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "IR channel/nidle",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OK",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Downloading",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Command/nFull",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Operation/nFail",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "IR code number for built-in code library",
				Description: "Refer “Code list”/nfor details",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "External IR Emitter power level",
				Description: "If IR output port routing/nis set to 1, IR transmission/npower level cannot be/nchanged",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal/npower mode",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "high power/nmode",
					},
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "IR output port routing",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 1",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 2",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 3",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 4",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 5",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Route IR/noutput from this ZWave-/nto-IR/nchannel to IR Port 6",
					},
				},
			},
			ConfigParam{
				ID: 30,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR transmission mode",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Continuous/nIR transmission/nmode",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "Single shot/nIR transmission/nmode",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 34,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Check Library Version (Read Only)",
				Description: "Byte 1, Model/nsuffix; /nByte 2, Reserved; /nByte 3, 4 Library/nVersion",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Reserved",
				Description: "For internal/nreference only",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "End point selection control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 1",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 2",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 3",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 4",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 5",
					},
					ConfigValue{
						From: 6,
						To: 6,
						Unit: "",
						Reserved: false,
						Description: "Endpoint 6",
					},
				},
			},
		},
	}
}
func New525401018371() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZXT-310EU",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0101",
		ProductID: "8371",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0070,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0094,
				Version: "4",
			},
			&CommandClass{
				ID: 0x0060,
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Parameter 1 to 20",
				Description: "Each individual IR control code can be encoded into an 80-bytes URID format./nZXT-310 utilizes 20 parameter numbers with 4 data bytes in each parameter to/nhold this 80 bytes UIRD data. Gateway or controller can use these Parameter/nNumbers to download UIRD data to ZXT-310.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 21,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "",
				Description: "These two bytes represent the Simple AV Command Number associated with/nthe 80-bytes UIRD data going to be downloaded to ZXT-310./nFor example, user wants to set up an IR code for “Volume Down” and he has/nthe IR control code in UIRD format. He would send the Simple AV Command/nNumber, “0x0002”, using Parameter Number 21 to ZXT-310. Afterward, he/nwould use Parameter Number 1 to 20 to transfer the corresponding URID data.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 22,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Download status register (Read only)/n0000 0000: Idle - this IR channel is idle/n0000 0001: OK - previous download is processed correctly/n0000 0010: Downloading - ZXT-310 is busy processing previous download/ncommand/n0000 0011: Full - UIRD data area of this IR channel is full. Each IR channel/nsupports up to 64 learned or downloaded Simple AV command numbers or/nkeys. It means that all locations are being used/n0000 0100 : Failed - latest download process failed",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "",
				Description: "These two bytes represent the Simple AV Command Number or key going to/nbe learned. For example, user wants to learn the IR code for “Volume Down” of his TV set./nHe would send the Simple AV Command Number, “0x0002”, to ZXT-310 using/nParameter Number 25. The status LED on ZXT-310 will turn on and stay on/nindicating it is in IR-learning mode. Gateway and Controller developers should/npoll the “Learning status register” (Parameter Number 26), and instruct end/nuser to press and hold the “Volume Down” button of his original remote control/nfor a few seconds. ZXT-310 will flash the status LED twice if the operation is/nsuccessful. It will flash the status LED six times if it fails to learn the IR code or/nit doesn’t receive any IR signal for 15 seconds.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Learning status register (Read only)/n0000 0000: Idle - this IR channel is idle/n0000 0001: OK - latest learning process completed correctly/n0000 0010: Learning - ZXT-310 is busy processing previous learning request./n0000 0011: Full - UIRD data area of this IR channel is full. Each IR channel/ncan supports up to 64 learned or downloaded Simple AV command numbers or/nkeys. It means that all locations are being used/n0000 0100: Failed - latest learning request failed",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "",
				Description: "IR code number of the built-in code library to be loaded to the “Simple AV/nCommand Number to IR control code” mapping table",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "IR transmission power level/n0x00: normal power mode/n0xFF: high power mode (default)/nIf IR output port routing is set to 1, IR transmission power level cannot be changed",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 29,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "IR output port routing/n0x06: Route IR output from this Z-Wave-to-IR channel to IR Port 6/n0x05: Route IR output from this Z-Wave-to-IR channel to IR Port 5/n0x04: Route IR output from this Z-Wave-to-IR channel to IR Port 4 0x03: Route IR output from this Z-Wave-to-IR channel to IR Port 3/n0x02: Route IR output from this Z-Wave-to-IR channel to IR Port 2/n0x01: Route IR output from this Z-Wave-to-IR channel to IR Port 1 (default)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 31,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "IR transmission mode/n0x00: Continuous IR transmission mode (default)/n0xFF: Single shot IR transmission mode",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 36,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "",
				Description: "Check Library Version (Read Only)/nByte 1 &amp; 2 : Firmware Version/nByte 3 &amp; 4 : Library Version",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 38,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "End point selection control/n0x01: end point 1 (default)/n0x02: end point 2/n0x03: end point 3/n0x04: end point 4/n0x05: end point 5/n0x06: end point 6/nNote: For controllers that do not support “multi-channel command class”, ZXT-310 will/ndirect all received Z-Wave commands to Z-Wave-to-IR channel 1 or EP1 (the default/nchannel). If controller developers want to support multiple AV equipment without/n“multi-channel command class” support, they can use this configuration command to/nselect another active Z-Wave-to-IR channel. For example, controller would like to send/ncommand to Z-Wave-to-IR channel 3. It should send a configuration command with/nparameter 38 and data 0x03h making channel 3 as the active channel first, and then,/nsend the desired command.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New525401018377() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZXT-120EU",
		Description: "/n            /n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0101",
		ProductID: "8377",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0072,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Indicate a location for IR code  learning and start learning",
				Description: "In case none of the code on the code list works for the targeted air conditioner, user can use IR code learning function. See manual at section &#34;IR Code Learning&#34; for a description of the procedure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "ON (resume)",
					},
					ConfigValue{
						From: 2,
						To: 11,
						Unit: "",
						Reserved: false,
						Description: "19°C cool - 28°C cool",
					},
					ConfigValue{
						From: 12,
						To: 21,
						Unit: "",
						Reserved: false,
						Description: "19°C heat - 28°C heat",
					},
					ConfigValue{
						From: 22,
						To: 22,
						Unit: "",
						Reserved: false,
						Description: "Dry mode",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Learning status register",
				Description: "Note: The status value 0x01 and 0x04 will be reset to 0 when the ZXT-120 receive a get command to this parameter",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Idle - this IR channel is idle",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OK - the latest learning process successful and completed",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Learning - the ZXT-120 is busy processing previous learning request",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Failed - the latest learning request failed",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR code number for built-in  code library ",
				Description: "Look up the code list of ZXT-120 according to your AC brand.",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "External IR Emitter power  level ",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal power mode",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "high power mode",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Surround IR control",
				Description: "To avoid the IR interference by disabling the surrounding IR emitter if 2 air-conditioners in a room are used. Extend the battery life by disabling the Surround IR Emitters",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable Surround IR Emitters",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "enable Surround IR Emitters",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "AC function &#34;Swing&#34; control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SWING OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SWING AUTO",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 4,
				Default: 0,
				Name: "Learn location status",
				Description: "Bit mask = 1, learn location has learn data. Otherwise, Bit mask = 0.",
				Values: []ConfigValue{
				},
			},
		},
	}
}
func New525401078377() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZXT-120IL",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0107",
		ProductID: "8377",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0040,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0043,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0044,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR code",
				Description: "Indicate a location for IR code learning and start learning",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 22,
						Unit: "1",
						Reserved: false,
						Description: "location for IR code",
					},
				},
			},
			ConfigParam{
				ID: 26,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Learning Status register",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Idle",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "OK - the latest learning process successful and complete",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "Learning - The ZXT is busy",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "Failed",
					},
				},
			},
			ConfigParam{
				ID: 27,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "IR code number",
				Description: "for built-in library",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Please refer to the &#34;code list&#34;",
					},
				},
			},
			ConfigParam{
				ID: 28,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "External IR Emitter power level",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "normal power mode",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "High power mode",
					},
				},
			},
			ConfigParam{
				ID: 32,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "Surround IR control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "disable surround IR emitters",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "enable surround IR emitters",
					},
				},
			},
			ConfigParam{
				ID: 33,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "AC function &#34;SWING&#34; control",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "SWING OFF",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "SWING AUTO",
					},
				},
			},
			ConfigParam{
				ID: 35,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Learn location status",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "Bit",
						Reserved: false,
						Description: "On (resume)",
					},
					ConfigValue{
						From: 7,
						To: 7,
						Unit: "Bit",
						Reserved: false,
						Description: "24°C cool",
					},
					ConfigValue{
						From: 8,
						To: 8,
						Unit: "Bit",
						Reserved: false,
						Description: "25°C cool",
					},
					ConfigValue{
						From: 12,
						To: 12,
						Unit: "Bit",
						Reserved: false,
						Description: "19°C heat",
					},
					ConfigValue{
						From: 16,
						To: 16,
						Unit: "Bit",
						Reserved: false,
						Description: "23°C heat",
					},
				},
			},
			ConfigParam{
				ID: 37,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Sensor temperature compensation",
				Description: "",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "0°C",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "1°C",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "2°C",
					},
					ConfigValue{
						From: 3,
						To: 3,
						Unit: "",
						Reserved: false,
						Description: "3°C",
					},
					ConfigValue{
						From: 4,
						To: 4,
						Unit: "",
						Reserved: false,
						Description: "4°C",
					},
					ConfigValue{
						From: 5,
						To: 5,
						Unit: "",
						Reserved: false,
						Description: "5°C",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "-1°C",
					},
					ConfigValue{
						From: 254,
						To: 254,
						Unit: "",
						Reserved: false,
						Description: "-2°C",
					},
					ConfigValue{
						From: 253,
						To: 253,
						Unit: "",
						Reserved: false,
						Description: "-3°C",
					},
					ConfigValue{
						From: 252,
						To: 252,
						Unit: "",
						Reserved: false,
						Description: "-4°C",
					},
					ConfigValue{
						From: 251,
						To: 251,
						Unit: "",
						Reserved: false,
						Description: "-5°C",
					},
				},
			},
		},
	}
}
func New525402008030() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZTS-100US",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "0200",
		ProductID: "8030",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0081,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0045,
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0042,
			},
			&CommandClass{
				ID: 0x0047,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525410008140() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZRP-100US ",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "1000",
		ProductID: "8140",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New52544d534331() *Device{
	return &Device{
		Brand: "SCHLAGE",
		Product: "Schlage LiNK Split-System Air Conditioning Controller",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "4d53",
		ProductID: "4331",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0080,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0031,
			},
			&CommandClass{
				ID: 0x0044,
			},
			&CommandClass{
				ID: 0x0040,
			},
			&CommandClass{
				ID: 0x0043,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 2,
				Default: 0,
				Name: "IR Library Code Number",
				Description: "Refer to code number in Code/nList (Appendix in Manual)",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 73,
						Unit: "",
						Reserved: false,
						Description: "Please refer to Manual Appendix: Code List",
					},
				},
			},
			ConfigParam{
				ID: 2,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "Swing Control",
				Description: "default value can be 0 or 1, depends on IR code data",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Swing Off",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Swing On",
					},
				},
			},
		},
	}
}
func New525480010000() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8001",
		ProductID: "0000",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0000,
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525480018020() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZRM-80SA ",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8001",
		ProductID: "8020",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0025,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x008e,
				Version: "2",
			},
			&CommandClass{
				ID: 0x005a,
			},
			&CommandClass{
				ID: 0x0060,
				Controlled: "true",
				Version: "3",
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All On/All Off",
				Description: "Choose if All On/All Off mode should be activated or deactivated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off is not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off active",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch state after power failure",
				Description: "Switch returns to the last position saved before power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch does not save the/nstate after power failure, it returns to/n&#34;off&#34; position.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch saves its state/nbefore power failure.",
					},
				},
			},
		},
	}
}
func New525482008130() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZDS-200US",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8200",
		ProductID: "8130",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All On/All Off",
				Description: "Activate/Deactivate All On/All Off",
				Values: []ConfigValue{
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off active",
					},
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off is not active",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch fail safe ",
				Description: "Switch returns to the last position/nsaved before power failure",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch does not save/nthe state after power failure, it/nreturns to &#34;off&#34; position.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch saves its state/nbefore power failure.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Double click option",
				Description: "Enable/disable bouble click option (set to max./nbrightness).",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Double click function/ndisabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Double click function enabled.",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dimmer Mode",
				Description: "Time of moving the Dimmer from 0%/nto max. dimming values.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 5,
						Unit: "sec",
						Reserved: false,
						Description: "Adjust time interval for dimmer to reach full dimming values. ",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum Dimmer level control",
				Description: "Define maximum dimming percentage. Higher values will lead to higher brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define maximum dimmer level.",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 13,
				Name: "Minimum Dimmer level control",
				Description: "Define minimum dimming percentage. Lower values will lead to lower brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "%",
						Reserved: false,
						Description: "Define minimum level.",
					},
				},
			},
		},
	}
}
func New525482010200() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "Dimming Switch Module",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8201",
		ProductID: "0200",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0000,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0025,
				InNIF: "false",
			},
		},
		ConfigParams: []ConfigParam{
		},
	}
}
func New525482018021() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZDM-80SA ",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8201",
		ProductID: "8021",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
				Controlled: "true",
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x002b,
			},
			&CommandClass{
				ID: 0x002c,
			},
			&CommandClass{
				ID: 0x0073,
			},
			&CommandClass{
				ID: 0x0086,
			},
			&CommandClass{
				ID: 0x0025,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 255,
				Name: "All On/All Of",
				Description: "Choose if All On/All Off mode should be activated or deactivated.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off is not active",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "All On is not active,/nAll Off active",
					},
					ConfigValue{
						From: 2,
						To: 2,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off is not active",
					},
					ConfigValue{
						From: 255,
						To: 255,
						Unit: "",
						Reserved: false,
						Description: "All On active,/nAll Off active",
					},
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Switch state after power failure",
				Description: "Switch returns to the last position/nsaved before power failure.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Switch does not save/nthe state after power failure, it/nreturns to &#34;off&#34; position.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Switch saves its state/nbefore power failure.",
					},
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "Double click option",
				Description: "Enable or disable double click function for maximum brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 0,
						Unit: "",
						Reserved: false,
						Description: "Double click function/ndisabled.",
					},
					ConfigValue{
						From: 1,
						To: 1,
						Unit: "",
						Reserved: false,
						Description: "Double click function/nenabled.",
					},
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 3,
				Name: "Dimming time frame",
				Description: "Sets the time of moving the Dimmer from 0%/nto max. dimming values. (The ZDM-80 will implement the/ndimming duration if received this/nparameter value from/ncontroller/gateway. Otherwise, the/nZDM-80 will implement the local/nparameter value)",
				Values: []ConfigValue{
					ConfigValue{
						From: 0,
						To: 5,
						Unit: "sec",
						Reserved: false,
						Description: "Define time frame.",
					},
				},
			},
			ConfigParam{
				ID: 18,
				Type: "",
				Size: 1,
				Default: 99,
				Name: "Maximum Dimmer level control",
				Description: "Define the upper dimming level. Higher percentages lead to higher brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 2,
						To: 99,
						Unit: "%",
						Reserved: false,
						Description: "Define dimming level.",
					},
				},
			},
			ConfigParam{
				ID: 19,
				Type: "",
				Size: 1,
				Default: 13,
				Name: "Minimum Dimmer level control",
				Description: "Define the lower dimming level. Lower percentages lead to lower brightness level.",
				Values: []ConfigValue{
					ConfigValue{
						From: 1,
						To: 98,
						Unit: "%",
						Reserved: false,
						Description: "Define dimming level.",
					},
				},
			},
		},
	}
}
func New525482018120() *Device{
	return &Device{
		Brand: "Remotec",
		Product: "ZFM-X10EU",
		Description: "/n            /n          ",

		ManufacturerID: "5254",
		ProductType: "8201",
		ProductID: "8120",
		CommandClasses: []*CommandClass{
			&CommandClass{
				ID: 0x0020,
			},
			&CommandClass{
				ID: 0x0027,
			},
			&CommandClass{
				ID: 0x0026,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0070,
			},
			&CommandClass{
				ID: 0x0085,
				Version: "2",
			},
			&CommandClass{
				ID: 0x0072,
			},
			&CommandClass{
				ID: 0x0086,
			},
		},
		ConfigParams: []ConfigParam{
			ConfigParam{
				ID: 1,
				Type: "",
				Size: 1,
				Default: 127,
				Name: "",
				Description: "Activate/Deactivate All On/All/nOff (value is 255 not 127 - due to library regulations we had to inser 127)",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 5,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "Switch returns to the last/nposition saved before power/nfailure",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 6,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "Select switch type",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 8,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "switch contacts and Off is active after opening switch contacts",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 13,
				Type: "",
				Size: 1,
				Default: 1,
				Name: "",
				Description: "Double click function disabled or enabled",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 17,
				Type: "",
				Size: 1,
				Default: 25,
				Name: "",
				Description: "Dimmer mode",
				Values: []ConfigValue{
				},
			},
			ConfigParam{
				ID: 25,
				Type: "",
				Size: 1,
				Default: 0,
				Name: "",
				Description: "select 2 or 3 wires system",
				Values: []ConfigValue{
				},
			},
		},
	}
}
